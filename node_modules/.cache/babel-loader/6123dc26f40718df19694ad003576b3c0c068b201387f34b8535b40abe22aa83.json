{"ast":null,"code":"var _jsxFileName = \"C:\\\\local clones\\\\rubric-creation-app\\\\src\\\\components\\\\SharedContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssessmentContext = /*#__PURE__*/createContext();\nexport const useAssessment = () => {\n  _s();\n  const context = useContext(AssessmentContext);\n  if (!context) {\n    throw new Error('useAssessment must be used within AssessmentProvider');\n  }\n  return context;\n};\n_s(useAssessment, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AssessmentProvider = ({\n  children\n}) => {\n  _s2();\n  // Shared rubric state\n  const [sharedRubric, setSharedRubric] = useState(null);\n\n  // Shared course details state\n  const [sharedCourseDetails, setSharedCourseDetails] = useState(null);\n\n  // Grading data state\n  const [gradingData, setGradingData] = useState(null);\n\n  // Active tab state\n  const [activeTab, setActiveTab] = useState('rubric-creator');\n\n  // Transfer rubric to grading tool and switch tabs\n  const transferRubricToGrading = rubricData => {\n    setSharedRubric(rubricData);\n    setActiveTab('grading-tool');\n  };\n\n  // Clear shared rubric\n  const clearSharedRubric = () => {\n    setSharedRubric(null);\n  };\n\n  // Clear shared course details\n  const clearSharedCourseDetails = () => {\n    setSharedCourseDetails(null);\n  };\n\n  // Clear all shared data\n  const clearAllSharedData = () => {\n    setSharedRubric(null);\n    setSharedCourseDetails(null);\n    setGradingData(null);\n  };\n\n  // Update course details\n  const updateCourseDetails = courseDetails => {\n    setSharedCourseDetails(prev => ({\n      ...prev,\n      ...courseDetails\n    }));\n  };\n\n  // Update specific sections of course details\n  const updateStudentInfo = studentInfo => {\n    setSharedCourseDetails(prev => ({\n      ...prev,\n      student: {\n        ...(prev === null || prev === void 0 ? void 0 : prev.student),\n        ...studentInfo\n      }\n    }));\n  };\n  const updateCourseInfo = courseInfo => {\n    setSharedCourseDetails(prev => ({\n      ...prev,\n      course: {\n        ...(prev === null || prev === void 0 ? void 0 : prev.course),\n        ...courseInfo\n      }\n    }));\n  };\n  const updateAssignmentInfo = assignmentInfo => {\n    setSharedCourseDetails(prev => ({\n      ...prev,\n      assignment: {\n        ...(prev === null || prev === void 0 ? void 0 : prev.assignment),\n        ...assignmentInfo\n      }\n    }));\n  };\n\n  // Extract course details from rubric if available\n  const extractCourseDetailsFromRubric = rubricData => {\n    if (rubricData !== null && rubricData !== void 0 && rubricData.assignmentInfo) {\n      const courseDetails = {\n        assignment: {\n          name: rubricData.assignmentInfo.title,\n          maxPoints: rubricData.assignmentInfo.totalPoints,\n          weight: rubricData.assignmentInfo.weight,\n          passingThreshold: rubricData.assignmentInfo.passingThreshold\n        }\n      };\n      setSharedCourseDetails(courseDetails);\n    }\n  };\n\n  // Enhanced transfer function that also extracts course details\n  const transferRubricToGradingWithDetails = rubricData => {\n    setSharedRubric(rubricData);\n    extractCourseDetailsFromRubric(rubricData);\n    setActiveTab('grading-tool');\n  };\n  const value = {\n    // Shared state\n    sharedRubric,\n    setSharedRubric,\n    sharedCourseDetails,\n    setSharedCourseDetails,\n    gradingData,\n    setGradingData,\n    // Navigation\n    activeTab,\n    setActiveTab,\n    // Actions - rubric management\n    transferRubricToGrading,\n    transferRubricToGradingWithDetails,\n    clearSharedRubric,\n    // Actions - course details management\n    clearSharedCourseDetails,\n    updateCourseDetails,\n    updateStudentInfo,\n    updateCourseInfo,\n    updateAssignmentInfo,\n    extractCourseDetailsFromRubric,\n    // Actions - general\n    clearAllSharedData\n  };\n  return /*#__PURE__*/_jsxDEV(AssessmentContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 9\n  }, this);\n};\n_s2(AssessmentProvider, \"+TzN4BshiPCKAnEMnwBuFKDwrdc=\");\n_c = AssessmentProvider;\nvar _c;\n$RefreshReg$(_c, \"AssessmentProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AssessmentContext","useAssessment","_s","context","Error","AssessmentProvider","children","_s2","sharedRubric","setSharedRubric","sharedCourseDetails","setSharedCourseDetails","gradingData","setGradingData","activeTab","setActiveTab","transferRubricToGrading","rubricData","clearSharedRubric","clearSharedCourseDetails","clearAllSharedData","updateCourseDetails","courseDetails","prev","updateStudentInfo","studentInfo","student","updateCourseInfo","courseInfo","course","updateAssignmentInfo","assignmentInfo","assignment","extractCourseDetailsFromRubric","name","title","maxPoints","totalPoints","weight","passingThreshold","transferRubricToGradingWithDetails","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/local clones/rubric-creation-app/src/components/SharedContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\nconst AssessmentContext = createContext();\r\n\r\nexport const useAssessment = () => {\r\n    const context = useContext(AssessmentContext);\r\n    if (!context) {\r\n        throw new Error('useAssessment must be used within AssessmentProvider');\r\n    }\r\n    return context;\r\n};\r\n\r\nexport const AssessmentProvider = ({ children }) => {\r\n    // Shared rubric state\r\n    const [sharedRubric, setSharedRubric] = useState(null);\r\n\r\n    // Shared course details state\r\n    const [sharedCourseDetails, setSharedCourseDetails] = useState(null);\r\n\r\n    // Grading data state\r\n    const [gradingData, setGradingData] = useState(null);\r\n\r\n    // Active tab state\r\n    const [activeTab, setActiveTab] = useState('rubric-creator');\r\n\r\n    // Transfer rubric to grading tool and switch tabs\r\n    const transferRubricToGrading = (rubricData) => {\r\n        setSharedRubric(rubricData);\r\n        setActiveTab('grading-tool');\r\n    };\r\n\r\n    // Clear shared rubric\r\n    const clearSharedRubric = () => {\r\n        setSharedRubric(null);\r\n    };\r\n\r\n    // Clear shared course details\r\n    const clearSharedCourseDetails = () => {\r\n        setSharedCourseDetails(null);\r\n    };\r\n\r\n    // Clear all shared data\r\n    const clearAllSharedData = () => {\r\n        setSharedRubric(null);\r\n        setSharedCourseDetails(null);\r\n        setGradingData(null);\r\n    };\r\n\r\n    // Update course details\r\n    const updateCourseDetails = (courseDetails) => {\r\n        setSharedCourseDetails(prev => ({\r\n            ...prev,\r\n            ...courseDetails\r\n        }));\r\n    };\r\n\r\n    // Update specific sections of course details\r\n    const updateStudentInfo = (studentInfo) => {\r\n        setSharedCourseDetails(prev => ({\r\n            ...prev,\r\n            student: {\r\n                ...prev?.student,\r\n                ...studentInfo\r\n            }\r\n        }));\r\n    };\r\n\r\n    const updateCourseInfo = (courseInfo) => {\r\n        setSharedCourseDetails(prev => ({\r\n            ...prev,\r\n            course: {\r\n                ...prev?.course,\r\n                ...courseInfo\r\n            }\r\n        }));\r\n    };\r\n\r\n    const updateAssignmentInfo = (assignmentInfo) => {\r\n        setSharedCourseDetails(prev => ({\r\n            ...prev,\r\n            assignment: {\r\n                ...prev?.assignment,\r\n                ...assignmentInfo\r\n            }\r\n        }));\r\n    };\r\n\r\n    // Extract course details from rubric if available\r\n    const extractCourseDetailsFromRubric = (rubricData) => {\r\n        if (rubricData?.assignmentInfo) {\r\n            const courseDetails = {\r\n                assignment: {\r\n                    name: rubricData.assignmentInfo.title,\r\n                    maxPoints: rubricData.assignmentInfo.totalPoints,\r\n                    weight: rubricData.assignmentInfo.weight,\r\n                    passingThreshold: rubricData.assignmentInfo.passingThreshold\r\n                }\r\n            };\r\n            setSharedCourseDetails(courseDetails);\r\n        }\r\n    };\r\n\r\n    // Enhanced transfer function that also extracts course details\r\n    const transferRubricToGradingWithDetails = (rubricData) => {\r\n        setSharedRubric(rubricData);\r\n        extractCourseDetailsFromRubric(rubricData);\r\n        setActiveTab('grading-tool');\r\n    };\r\n\r\n    const value = {\r\n        // Shared state\r\n        sharedRubric,\r\n        setSharedRubric,\r\n        sharedCourseDetails,\r\n        setSharedCourseDetails,\r\n        gradingData,\r\n        setGradingData,\r\n\r\n        // Navigation\r\n        activeTab,\r\n        setActiveTab,\r\n\r\n        // Actions - rubric management\r\n        transferRubricToGrading,\r\n        transferRubricToGradingWithDetails,\r\n        clearSharedRubric,\r\n\r\n        // Actions - course details management\r\n        clearSharedCourseDetails,\r\n        updateCourseDetails,\r\n        updateStudentInfo,\r\n        updateCourseInfo,\r\n        updateAssignmentInfo,\r\n        extractCourseDetailsFromRubric,\r\n\r\n        // Actions - general\r\n        clearAllSharedData\r\n    };\r\n\r\n    return (\r\n        <AssessmentContext.Provider value={value}>\r\n            {children}\r\n        </AssessmentContext.Provider>\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}