{"ast":null,"code":"var _jsxFileName = \"C:\\\\local clones\\\\rubric-creation-app\\\\src\\\\components\\\\GradeBook.js\",\n  _s = $RefreshSig$();\n// GradeBook.jsx - Complete Gradebook Management Component\n// File: src/components/GradeBook.jsx\n\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Users, Plus, Edit3, Trash2, Download, Upload, Settings, Save, FileText, Calculator, Eye, RotateCcw, CheckCircle, AlertCircle, BookOpen, X, Copy, Database, Percent, GraduationCap, ClipboardList, TrendingUp, BarChart3, Grid3X3, Filter, Search, SortAsc, SortDesc, FileSpreadsheet, Calendar, Clock, Award, Target } from 'lucide-react';\nimport { useAssessment } from './SharedContext';\nimport * as XLSX from 'xlsx';\n// NOTE: Adjust the path if your services folder is located elsewhere\nimport gradingPolicyService from '../services/gradingPolicyService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GradeBook = () => {\n  _s();\n  // In GradeBook.js, update the useAssessment hook\n  const {\n    classList,\n    setClassList,\n    activeTab,\n    setActiveTab,\n    drafts,\n    finalGrades,\n    gradeBook,\n    // Add this\n    setGradeBook // Add this\n  } = useAssessment();\n\n  // Core gradebook state\n  const [gradeBookData, setGradeBookData] = useState({\n    projects: [],\n    students: [],\n    grades: {},\n    // studentId -> projectId -> grade data\n    metadata: {\n      courseName: '',\n      courseCode: '',\n      instructor: '',\n      term: '',\n      created: null,\n      lastModified: null,\n      gradingPolicy: 'degree'\n    }\n  });\n\n  // UI state\n  const [isEditing, setIsEditing] = useState(false);\n  const [selectedCell, setSelectedCell] = useState(null);\n  const [editValue, setEditValue] = useState('');\n  const [showSettings, setShowSettings] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortBy, setSortBy] = useState('name');\n  const [sortOrder, setSortOrder] = useState('asc');\n  const [viewMode, setViewMode] = useState('percentage'); // 'percentage', 'letter', 'both'\n  const [confirmDialog, setConfirmDialog] = useState({\n    show: false,\n    message: '',\n    onConfirm: null\n  });\n  const [editingProject, setEditingProject] = useState(null);\n  const [projectEditValue, setProjectEditValue] = useState('');\n\n  // Project form state - removed since we have inline editing\n\n  // Statistics state\n  const [statistics, setStatistics] = useState({\n    classAverage: 0,\n    highestGrade: 0,\n    lowestGrade: 0,\n    passingRate: 0,\n    projectAverages: {}\n  });\n\n  // File input refs\n  const importGradesRef = useRef(null);\n  const importGradeBookRef = useRef(null);\n\n  // Initialize gradebook with class list data and default projects\n  useEffect(() => {\n    if (classList && classList.students) {\n      setGradeBookData(prev => {\n        var _classList$courseMeta, _classList$courseMeta2, _classList$courseMeta3, _classList$courseMeta4;\n        return {\n          ...prev,\n          students: classList.students.map(student => ({\n            id: student.id,\n            name: student.name,\n            email: student.email || '',\n            program: student.program || ''\n          })),\n          // Initialize with 4 default empty projects if none exist\n          projects: prev.projects.length === 0 ? [{\n            id: 'project_1',\n            name: 'Project 1',\n            maxPoints: 100,\n            weight: 25,\n            dueDate: '',\n            description: '',\n            created: new Date().toISOString()\n          }, {\n            id: 'project_2',\n            name: 'Project 2',\n            maxPoints: 100,\n            weight: 25,\n            dueDate: '',\n            description: '',\n            created: new Date().toISOString()\n          }, {\n            id: 'project_3',\n            name: 'Project 3',\n            maxPoints: 100,\n            weight: 25,\n            dueDate: '',\n            description: '',\n            created: new Date().toISOString()\n          }, {\n            id: 'project_4',\n            name: 'Project 4',\n            maxPoints: 100,\n            weight: 25,\n            dueDate: '',\n            description: '',\n            created: new Date().toISOString()\n          }] : prev.projects,\n          metadata: {\n            ...prev.metadata,\n            courseName: ((_classList$courseMeta = classList.courseMetadata) === null || _classList$courseMeta === void 0 ? void 0 : _classList$courseMeta.courseName) || '',\n            courseCode: ((_classList$courseMeta2 = classList.courseMetadata) === null || _classList$courseMeta2 === void 0 ? void 0 : _classList$courseMeta2.courseCode) || '',\n            instructor: ((_classList$courseMeta3 = classList.courseMetadata) === null || _classList$courseMeta3 === void 0 ? void 0 : _classList$courseMeta3.instructor) || '',\n            term: ((_classList$courseMeta4 = classList.courseMetadata) === null || _classList$courseMeta4 === void 0 ? void 0 : _classList$courseMeta4.term) || ''\n          }\n        };\n      });\n    } else if (gradeBookData.projects.length === 0) {\n      // Initialize default projects even without class list\n      setGradeBookData(prev => ({\n        ...prev,\n        projects: [{\n          id: 'project_1',\n          name: 'Project 1',\n          maxPoints: 100,\n          weight: 25,\n          dueDate: '',\n          description: '',\n          created: new Date().toISOString()\n        }, {\n          id: 'project_2',\n          name: 'Project 2',\n          maxPoints: 100,\n          weight: 25,\n          dueDate: '',\n          description: '',\n          created: new Date().toISOString()\n        }, {\n          id: 'project_3',\n          name: 'Project 3',\n          maxPoints: 100,\n          weight: 25,\n          dueDate: '',\n          description: '',\n          created: new Date().toISOString()\n        }, {\n          id: 'project_4',\n          name: 'Project 4',\n          maxPoints: 100,\n          weight: 25,\n          dueDate: '',\n          description: '',\n          created: new Date().toISOString()\n        }]\n      }));\n    }\n  }, [classList]);\n\n  // Calculate statistics whenever grades change\n  useEffect(() => {\n    calculateStatistics();\n  }, [gradeBookData.grades, gradeBookData.projects]);\n\n  // Grade calculation functions\n  const getLetterGrade = (percentage, policy = 'degree') => {\n    // Use the existing grading policy logic\n    if (policy === 'certificate') {\n      if (percentage >= 80) return 'A';\n      if (percentage >= 70) return 'B';\n      if (percentage >= 60) return 'C';\n      return 'F';\n    } else {\n      // Standard degree policy\n      if (percentage >= 97) return 'A+';\n      if (percentage >= 93) return 'A';\n      if (percentage >= 90) return 'A-';\n      if (percentage >= 87) return 'B+';\n      if (percentage >= 83) return 'B';\n      if (percentage >= 80) return 'B-';\n      if (percentage >= 77) return 'C+';\n      if (percentage >= 73) return 'C';\n      if (percentage >= 70) return 'C-';\n      if (percentage >= 67) return 'D+';\n      if (percentage >= 63) return 'D';\n      if (percentage >= 60) return 'D-';\n      return 'F';\n    }\n  };\n  const calculateFinalGrade = studentId => {\n    const studentGrades = gradeBookData.grades[studentId] || {};\n    let totalWeightedScore = 0;\n    let totalWeight = 0;\n    gradeBookData.projects.forEach(project => {\n      const gradeData = studentGrades[project.id];\n      if (gradeData && gradeData.percentage !== null && gradeData.percentage !== undefined) {\n        totalWeightedScore += gradeData.percentage * project.weight / 100;\n        totalWeight += project.weight;\n      }\n    });\n    if (totalWeight === 0) return {\n      percentage: 0,\n      letterGrade: 'N/A'\n    };\n    const finalPercentage = totalWeightedScore / totalWeight * 100;\n    const letterGrade = getLetterGrade(finalPercentage, gradeBookData.metadata.gradingPolicy);\n    return {\n      percentage: Math.round(finalPercentage * 100) / 100,\n      letterGrade\n    };\n  };\n  const calculateStatistics = () => {\n    const students = gradeBookData.students;\n    const grades = gradeBookData.grades;\n    if (students.length === 0) {\n      setStatistics({\n        classAverage: 0,\n        highestGrade: 0,\n        lowestGrade: 0,\n        passingRate: 0,\n        projectAverages: {}\n      });\n      return;\n    }\n\n    // Calculate final grades for all students\n    const finalGrades = students.map(student => {\n      const final = calculateFinalGrade(student.id);\n      return final.percentage;\n    }).filter(grade => grade > 0);\n    if (finalGrades.length === 0) {\n      setStatistics({\n        classAverage: 0,\n        highestGrade: 0,\n        lowestGrade: 0,\n        passingRate: 0,\n        projectAverages: {}\n      });\n      return;\n    }\n    const classAverage = finalGrades.reduce((sum, grade) => sum + grade, 0) / finalGrades.length;\n    const highestGrade = Math.max(...finalGrades);\n    const lowestGrade = Math.min(...finalGrades);\n    const passingGrades = finalGrades.filter(grade => grade >= 60).length;\n    const passingRate = passingGrades / finalGrades.length * 100;\n\n    // Calculate project averages\n    const projectAverages = {};\n    gradeBookData.projects.forEach(project => {\n      const projectGrades = students.map(student => {\n        var _grades$student$id;\n        const gradeData = (_grades$student$id = grades[student.id]) === null || _grades$student$id === void 0 ? void 0 : _grades$student$id[project.id];\n        return gradeData === null || gradeData === void 0 ? void 0 : gradeData.percentage;\n      }).filter(grade => grade !== null && grade !== undefined);\n      if (projectGrades.length > 0) {\n        projectAverages[project.id] = projectGrades.reduce((sum, grade) => sum + grade, 0) / projectGrades.length;\n      }\n    });\n    setStatistics({\n      classAverage: Math.round(classAverage * 100) / 100,\n      highestGrade: Math.round(highestGrade * 100) / 100,\n      lowestGrade: Math.round(lowestGrade * 100) / 100,\n      passingRate: Math.round(passingRate * 100) / 100,\n      projectAverages\n    });\n  };\n\n  // Project editing functions\n  const startEditingProject = (projectId, field, currentValue) => {\n    setEditingProject({\n      projectId,\n      field\n    });\n    setProjectEditValue(currentValue || '');\n  };\n  const saveProjectEdit = () => {\n    if (editingProject) {\n      setGradeBookData(prev => ({\n        ...prev,\n        projects: prev.projects.map(project => project.id === editingProject.projectId ? {\n          ...project,\n          [editingProject.field]: editingProject.field === 'weight' || editingProject.field === 'maxPoints' ? parseFloat(projectEditValue) || project[editingProject.field] : projectEditValue\n        } : project),\n        metadata: {\n          ...prev.metadata,\n          lastModified: new Date().toISOString()\n        }\n      }));\n    }\n    setEditingProject(null);\n    setProjectEditValue('');\n  };\n  const cancelProjectEdit = () => {\n    setEditingProject(null);\n    setProjectEditValue('');\n  };\n\n  // Project management functions\n  const addProject = () => {\n    const newProject = {\n      id: `project_${Date.now()}`,\n      name: `Project ${gradeBookData.projects.length + 1}`,\n      maxPoints: 100,\n      weight: 25,\n      dueDate: '',\n      description: '',\n      created: new Date().toISOString()\n    };\n    setGradeBookData(prev => ({\n      ...prev,\n      projects: [...prev.projects, newProject],\n      metadata: {\n        ...prev.metadata,\n        lastModified: new Date().toISOString()\n      }\n    }));\n  };\n  const removeProject = projectId => {\n    setConfirmDialog({\n      show: true,\n      message: 'Are you sure you want to remove this project? All grades for this project will be lost.',\n      onConfirm: () => {\n        setGradeBookData(prev => {\n          const newGrades = {\n            ...prev.grades\n          };\n          // Remove all grades for this project\n          Object.keys(newGrades).forEach(studentId => {\n            if (newGrades[studentId][projectId]) {\n              delete newGrades[studentId][projectId];\n            }\n          });\n          return {\n            ...prev,\n            projects: prev.projects.filter(p => p.id !== projectId),\n            grades: newGrades,\n            metadata: {\n              ...prev.metadata,\n              lastModified: new Date().toISOString()\n            }\n          };\n        });\n        setConfirmDialog({\n          show: false,\n          message: '',\n          onConfirm: null\n        });\n      }\n    });\n  };\n\n  // Grade management functions - UPDATED for raw points\n  const updateGrade = (studentId, projectId, value) => {\n    const project = gradeBookData.projects.find(p => p.id === projectId);\n    if (!project) return;\n    const maxPoints = project.maxPoints || 100;\n    let rawScore = parseFloat(value);\n    if (isNaN(rawScore) || value.trim() === '') {\n      // If input is empty or not a number, clear the grade\n      const newGrades = {\n        ...gradeBookData.grades\n      };\n      if (newGrades[studentId]) {\n        newGrades[studentId][projectId] = {\n          rawScore: null,\n          percentage: null,\n          letterGrade: null,\n          lastModified: new Date().toISOString()\n        };\n      }\n      setGradeBookData(prev => ({\n        ...prev,\n        grades: newGrades\n      }));\n      return;\n    }\n    rawScore = Math.max(0, rawScore);\n    const percentage = Math.round(rawScore / maxPoints * 100);\n    const letterGrade = getLetterGrade(percentage, gradeBookData.metadata.gradingPolicy);\n    const newGrades = {\n      ...gradeBookData.grades\n    };\n    if (!newGrades[studentId]) {\n      newGrades[studentId] = {};\n    }\n    newGrades[studentId][projectId] = {\n      rawScore,\n      percentage,\n      letterGrade,\n      lastModified: new Date().toISOString()\n    };\n    setGradeBookData(prev => ({\n      ...prev,\n      grades: newGrades,\n      metadata: {\n        ...prev.metadata,\n        lastModified: new Date().toISOString()\n      }\n    }));\n  };\n\n  // Cell editing functions - UPDATED for raw points\n  const startEditing = (studentId, projectId) => {\n    var _gradeBookData$grades;\n    const currentGrade = (_gradeBookData$grades = gradeBookData.grades[studentId]) === null || _gradeBookData$grades === void 0 ? void 0 : _gradeBookData$grades[projectId];\n    setSelectedCell({\n      studentId,\n      projectId\n    });\n    setEditValue((currentGrade === null || currentGrade === void 0 ? void 0 : currentGrade.rawScore) != null ? String(currentGrade.rawScore) : '');\n    setIsEditing(true);\n  };\n  const saveEdit = () => {\n    if (selectedCell) {\n      updateGrade(selectedCell.studentId, selectedCell.projectId, editValue);\n    }\n    setIsEditing(false);\n    setSelectedCell(null);\n    setEditValue('');\n  };\n  const cancelEdit = () => {\n    setIsEditing(false);\n    setSelectedCell(null);\n    setEditValue('');\n  };\n\n  // Import/Export functions\n  const exportGradeBook = () => {\n    const exportData = {\n      ...gradeBookData,\n      exportedAt: new Date().toISOString(),\n      version: '1.0'\n    };\n    const blob = new Blob([JSON.stringify(exportData, null, 2)], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `gradebook_${gradeBookData.metadata.courseCode || 'course'}_${new Date().toISOString().split('T')[0]}.json`;\n    link.click();\n    URL.revokeObjectURL(url);\n  };\n  const importGradeBook = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const importedData = JSON.parse(e.target.result);\n\n        // Validate the imported data structure\n        if (!importedData.projects || !importedData.students || !importedData.grades) {\n          throw new Error('Invalid gradebook file format');\n        }\n        setGradeBookData({\n          ...importedData,\n          metadata: {\n            ...importedData.metadata,\n            lastModified: new Date().toISOString()\n          }\n        });\n        alert('Gradebook imported successfully!');\n      } catch (error) {\n        console.error('Import error:', error);\n        alert('Error importing gradebook: ' + error.message);\n      }\n    };\n    reader.readAsText(file);\n    event.target.value = '';\n  };\n  const exportToExcel = () => {\n    const worksheetData = [];\n\n    // Create header row\n    const headerRow = ['Student ID', 'Student Name', 'Email', 'Program'];\n    gradeBookData.projects.forEach(project => {\n      headerRow.push(`${project.name} (Points)`);\n      headerRow.push(`${project.name} (%)`);\n      headerRow.push(`${project.name} (Letter)`);\n    });\n    headerRow.push('Final %', 'Final Grade');\n    worksheetData.push(headerRow);\n\n    // Add student data rows\n    gradeBookData.students.forEach(student => {\n      const row = [student.id, student.name, student.email, student.program];\n      gradeBookData.projects.forEach(project => {\n        var _gradeBookData$grades2;\n        const gradeData = (_gradeBookData$grades2 = gradeBookData.grades[student.id]) === null || _gradeBookData$grades2 === void 0 ? void 0 : _gradeBookData$grades2[project.id];\n        if (gradeData && gradeData.rawScore != null) {\n          row.push(gradeData.rawScore);\n          row.push(gradeData.percentage);\n          row.push(gradeData.letterGrade);\n        } else {\n          row.push('', '', '');\n        }\n      });\n      const finalGrade = calculateFinalGrade(student.id);\n      row.push(finalGrade.percentage);\n      row.push(finalGrade.letterGrade);\n      worksheetData.push(row);\n    });\n\n    // Add statistics row\n    worksheetData.push([]); // Empty row\n    const statsRow = ['STATISTICS', '', '', ''];\n    gradeBookData.projects.forEach(project => {\n      const avg = statistics.projectAverages[project.id];\n      statsRow.push(avg ? `${Math.round(avg * 100) / 100}` : '');\n      statsRow.push('', ''); // for points and letter grade columns\n    });\n    statsRow.push(`${statistics.classAverage}%`);\n    statsRow.push('');\n    worksheetData.push(statsRow);\n\n    // Create workbook and worksheet\n    const wb = XLSX.utils.book_new();\n    const ws = XLSX.utils.aoa_to_sheet(worksheetData);\n\n    // Add the worksheet to the workbook\n    XLSX.utils.book_append_sheet(wb, ws, 'Gradebook');\n\n    // Write the file\n    XLSX.writeFile(wb, `gradebook_${gradeBookData.metadata.courseCode || 'course'}_${new Date().toISOString().split('T')[0]}.xlsx`);\n  };\n  const importGrades = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const data = new Uint8Array(e.target.result);\n        const workbook = XLSX.read(data, {\n          type: 'array'\n        });\n        const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, {\n          header: 1\n        });\n        if (jsonData.length < 2) {\n          throw new Error('No data found in the file');\n        }\n\n        // Process the imported data (implementation depends on your specific format)\n        alert('Grade import functionality needs to be implemented based on your specific Excel format');\n      } catch (error) {\n        console.error('Import error:', error);\n        alert('Error importing grades: ' + error.message);\n      }\n    };\n    reader.readAsArrayBuffer(file);\n    event.target.value = '';\n  };\n\n  // Filter and sort students\n  const getFilteredAndSortedStudents = () => {\n    let filtered = gradeBookData.students;\n\n    // Apply search filter\n    if (searchTerm) {\n      filtered = filtered.filter(student => student.name.toLowerCase().includes(searchTerm.toLowerCase()) || student.id && student.id.toString().toLowerCase().includes(searchTerm.toLowerCase()) || student.email && student.email.toLowerCase().includes(searchTerm.toLowerCase()));\n    }\n\n    // Apply sorting\n    filtered.sort((a, b) => {\n      let aValue, bValue;\n      switch (sortBy) {\n        case 'name':\n          aValue = a.name.toLowerCase();\n          bValue = b.name.toLowerCase();\n          break;\n        case 'id':\n          aValue = a.id.toString().toLowerCase();\n          bValue = b.id.toString().toLowerCase();\n          break;\n        case 'finalGrade':\n          aValue = calculateFinalGrade(a.id).percentage;\n          bValue = calculateFinalGrade(b.id).percentage;\n          break;\n        default:\n          aValue = a.name.toLowerCase();\n          bValue = b.name.toLowerCase();\n      }\n      if (sortOrder === 'asc') {\n        return aValue < bValue ? -1 : aValue > bValue ? 1 : 0;\n      } else {\n        return aValue > bValue ? -1 : aValue < bValue ? 1 : 0;\n      }\n    });\n    return filtered;\n  };\n\n  // Import grades from Grading Tool\n  const handleImportGrades = targetProjectId => {\n    if (!finalGrades && !drafts) {\n      alert(\"No graded data available to import from the Grading Tool.\");\n      return;\n    }\n    const newGrades = {\n      ...gradeBookData.grades\n    };\n    let importedCount = 0;\n    gradeBookData.students.forEach(student => {\n      const studentGradeData = finalGrades[student.id] || drafts[student.id];\n      if (studentGradeData && studentGradeData.totalScore) {\n        var _studentGradeData$rub, _studentGradeData$rub2;\n        const rawScore = studentGradeData.totalScore.finalScore;\n        const maxPoints = ((_studentGradeData$rub = studentGradeData.rubric) === null || _studentGradeData$rub === void 0 ? void 0 : (_studentGradeData$rub2 = _studentGradeData$rub.assignmentInfo) === null || _studentGradeData$rub2 === void 0 ? void 0 : _studentGradeData$rub2.totalPoints) || 100;\n        if (rawScore !== undefined && maxPoints > 0) {\n          const percentage = Math.round(rawScore / maxPoints * 100);\n          const letterGrade = getLetterGrade(percentage, gradeBookData.metadata.gradingPolicy);\n          if (!newGrades[student.id]) {\n            newGrades[student.id] = {};\n          }\n          newGrades[student.id][targetProjectId] = {\n            rawScore: parseFloat(rawScore.toFixed(1)),\n            percentage: percentage,\n            letterGrade: letterGrade,\n            lastModified: new Date().toISOString()\n          };\n          importedCount++;\n        }\n      }\n    });\n    if (importedCount > 0) {\n      setGradeBookData(prev => ({\n        ...prev,\n        grades: newGrades,\n        metadata: {\n          ...prev.metadata,\n          lastModified: new Date().toISOString()\n        }\n      }));\n      alert(`Successfully imported grades for ${importedCount} students.`);\n    } else {\n      alert(\"No matching student grades found in the Grading Tool's saved data.\");\n    }\n  };\n\n  // Define grid columns dynamically based on the number of projects\n  const gridTemplateColumns = `minmax(240px, 1.5fr) repeat(${gradeBookData.projects.length}, minmax(220px, 1fr)) minmax(120px, 1fr)`;\n\n  // Get the list of policies from the service\n  const supportedPolicies = gradingPolicyService.getSupportedProgramTypes();\n\n  // Component render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50 p-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-blue-100 p-3 rounded-lg\",\n              children: /*#__PURE__*/_jsxDEV(BookOpen, {\n                className: \"h-8 w-8 text-blue-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-2xl font-bold text-gray-900\",\n                children: \"Grade Book\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 688,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-600\",\n                children: [gradeBookData.metadata.courseCode, \" - \", gradeBookData.metadata.courseName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 689,\n                columnNumber: 33\n              }, this), gradeBookData.students.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-500\",\n                children: [gradeBookData.students.length, \" students \\u2022 \", gradeBookData.projects.length, \" projects\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 693,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 687,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowSettings(true),\n              className: \"flex items-center gap-2 px-4 py-2 text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-lg transition-colors\",\n              children: [/*#__PURE__*/_jsxDEV(Settings, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 705,\n                columnNumber: 33\n              }, this), \"Settings\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 701,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addProject,\n              className: \"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white hover:bg-blue-700 rounded-lg transition-colors\",\n              children: [/*#__PURE__*/_jsxDEV(Plus, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 712,\n                columnNumber: 33\n              }, this), \"Add Project\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 708,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-sm border border-gray-200 p-4 mb-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap items-center justify-between gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative\",\n              children: [/*#__PURE__*/_jsxDEV(Search, {\n                className: \"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\",\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 724,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Search students...\",\n                value: searchTerm,\n                onChange: e => setSearchTerm(e.target.value),\n                className: \"w-64 pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 725,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 723,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: sortBy,\n              onChange: e => setSortBy(e.target.value),\n              className: \"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"name\",\n                children: \"Sort by Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 739,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"id\",\n                children: \"Sort by ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 740,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"finalGrade\",\n                children: \"Sort by Final Grade\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 741,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 734,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc'),\n              className: \"p-2 border border-gray-300 rounded-lg hover:bg-gray-50\",\n              children: sortOrder === 'asc' ? /*#__PURE__*/_jsxDEV(SortAsc, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 748,\n                columnNumber: 56\n              }, this) : /*#__PURE__*/_jsxDEV(SortDesc, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 748,\n                columnNumber: 80\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 744,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: exportGradeBook,\n              className: \"flex items-center gap-2 px-3 py-2 text-blue-700 bg-blue-50 hover:bg-blue-100 rounded-lg transition-colors\",\n              children: [/*#__PURE__*/_jsxDEV(Download, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 757,\n                columnNumber: 33\n              }, this), \"Export JSON\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 753,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: exportToExcel,\n              className: \"flex items-center gap-2 px-3 py-2 text-green-700 bg-green-50 hover:bg-green-100 rounded-lg transition-colors\",\n              children: [/*#__PURE__*/_jsxDEV(FileSpreadsheet, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 764,\n                columnNumber: 33\n              }, this), \"Export Excel\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 760,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: importGradeBookRef,\n              type: \"file\",\n              accept: \".json\",\n              onChange: importGradeBook,\n              className: \"hidden\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 767,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                var _importGradeBookRef$c;\n                return (_importGradeBookRef$c = importGradeBookRef.current) === null || _importGradeBookRef$c === void 0 ? void 0 : _importGradeBookRef$c.click();\n              },\n              className: \"flex items-center gap-2 px-3 py-2 text-purple-700 bg-purple-50 hover:bg-purple-100 rounded-lg transition-colors\",\n              children: [/*#__PURE__*/_jsxDEV(Upload, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 778,\n                columnNumber: 33\n              }, this), \"Import\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 774,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 752,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 17\n      }, this), gradeBookData.students.length > 0 && gradeBookData.projects.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-sm border border-gray-200 p-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-blue-100 p-2 rounded-lg\",\n              children: /*#__PURE__*/_jsxDEV(TrendingUp, {\n                className: \"h-5 w-5 text-blue-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 791,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 790,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm font-medium text-gray-500\",\n                children: \"Class Average\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 794,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-2xl font-bold text-gray-900\",\n                children: [statistics.classAverage, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 795,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 793,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 789,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 788,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-sm border border-gray-200 p-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-green-100 p-2 rounded-lg\",\n              children: /*#__PURE__*/_jsxDEV(Award, {\n                className: \"h-5 w-5 text-green-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 803,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 802,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm font-medium text-gray-500\",\n                children: \"Highest Grade\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 806,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-2xl font-bold text-gray-900\",\n                children: [statistics.highestGrade, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 807,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 805,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 801,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-sm border border-gray-200 p-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-orange-100 p-2 rounded-lg\",\n              children: /*#__PURE__*/_jsxDEV(Target, {\n                className: \"h-5 w-5 text-orange-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 815,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 814,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm font-medium text-gray-500\",\n                children: \"Lowest Grade\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 818,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-2xl font-bold text-gray-900\",\n                children: [statistics.lowestGrade, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 819,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 817,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 813,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 812,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-sm border border-gray-200 p-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-purple-100 p-2 rounded-lg\",\n              children: /*#__PURE__*/_jsxDEV(CheckCircle, {\n                className: \"h-5 w-5 text-purple-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 827,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 826,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm font-medium text-gray-500\",\n                children: \"Passing Rate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 830,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-2xl font-bold text-gray-900\",\n                children: [statistics.passingRate, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 831,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 829,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 825,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 787,\n        columnNumber: 21\n      }, this), gradeBookData.students.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-sm border border-gray-200 p-12 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-100 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4\",\n          children: /*#__PURE__*/_jsxDEV(Users, {\n            className: \"h-8 w-8 text-gray-400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 842,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 841,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-gray-900 mb-2\",\n          children: \"No Students Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 844,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mb-6\",\n          children: \"Import a class list from the Class Manager to start using the gradebook.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 845,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setActiveTab('class-manager'),\n          className: \"inline-flex items-center gap-2 px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\",\n          children: [/*#__PURE__*/_jsxDEV(Users, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 852,\n            columnNumber: 29\n          }, this), \"Go to Class Manager\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 848,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 840,\n        columnNumber: 21\n      }, this) :\n      /*#__PURE__*/\n      /* Gradebook Grid Layout */\n      _jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overflow-x-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid\",\n            style: {\n              gridTemplateColumns,\n              minWidth: '900px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sticky top-0 z-10 p-4 bg-gray-50 border-b border-r border-gray-200 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n              children: \"Student\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 862,\n              columnNumber: 33\n            }, this), gradeBookData.projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sticky top-0 z-10 p-4 bg-gray-50 border-b border-r border-gray-200 text-center text-xs font-medium text-gray-500 uppercase tracking-wider group relative\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-col items-center space-y-1\",\n                children: [(editingProject === null || editingProject === void 0 ? void 0 : editingProject.projectId) === project.id && (editingProject === null || editingProject === void 0 ? void 0 : editingProject.field) === 'name' ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: projectEditValue,\n                  onChange: e => setProjectEditValue(e.target.value),\n                  onKeyDown: e => {\n                    if (e.key === 'Enter') saveProjectEdit();\n                    if (e.key === 'Escape') cancelProjectEdit();\n                  },\n                  onBlur: saveProjectEdit,\n                  className: \"w-full px-2 py-1 text-sm border border-blue-500 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 text-center bg-white\",\n                  autoFocus: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 869,\n                  columnNumber: 49\n                }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => startEditingProject(project.id, 'name', project.name),\n                  className: \"font-medium text-gray-900 hover:text-blue-600 transition-colors cursor-pointer text-center\",\n                  title: \"Click to edit project name\",\n                  children: project.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 879,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center space-x-1\",\n                  children: [(editingProject === null || editingProject === void 0 ? void 0 : editingProject.projectId) === project.id && (editingProject === null || editingProject === void 0 ? void 0 : editingProject.field) === 'weight' ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    value: projectEditValue,\n                    onChange: e => setProjectEditValue(e.target.value),\n                    onKeyDown: e => {\n                      if (e.key === 'Enter') saveProjectEdit();\n                      if (e.key === 'Escape') cancelProjectEdit();\n                    },\n                    onBlur: saveProjectEdit,\n                    className: \"w-16 px-1 py-1 text-xs border border-blue-500 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 text-center\",\n                    autoFocus: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 889,\n                    columnNumber: 53\n                  }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => startEditingProject(project.id, 'weight', project.weight.toString()),\n                    className: \"text-xs text-gray-400 hover:text-blue-600 transition-colors cursor-pointer\",\n                    title: \"Click to edit weight\",\n                    children: [project.weight, \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 891,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-xs text-gray-400\",\n                    children: \"\\u2022\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 893,\n                    columnNumber: 49\n                  }, this), (editingProject === null || editingProject === void 0 ? void 0 : editingProject.projectId) === project.id && (editingProject === null || editingProject === void 0 ? void 0 : editingProject.field) === 'maxPoints' ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    value: projectEditValue,\n                    onChange: e => setProjectEditValue(e.target.value),\n                    onKeyDown: e => {\n                      if (e.key === 'Enter') saveProjectEdit();\n                      if (e.key === 'Escape') cancelProjectEdit();\n                    },\n                    onBlur: saveProjectEdit,\n                    className: \"w-16 px-1 py-1 text-xs border border-blue-500 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 text-center\",\n                    autoFocus: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 895,\n                    columnNumber: 53\n                  }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => startEditingProject(project.id, 'maxPoints', project.maxPoints.toString()),\n                    className: \"text-xs text-gray-400 hover:text-blue-600 transition-colors cursor-pointer\",\n                    title: \"Click to edit max points\",\n                    children: [project.maxPoints, \"pts\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 897,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 887,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleImportGrades(project.id),\n                  className: \"text-xs text-blue-600 hover:text-blue-800 font-semibold mt-1 bg-blue-100 px-2 py-1 rounded-md hover:bg-blue-200 transition-colors\",\n                  title: \"Import final grades from the Grading Tool for this project\",\n                  children: \"Import Grades\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 900,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 867,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => removeProject(project.id),\n                className: \"absolute top-1 right-1 opacity-0 group-hover:opacity-100 p-1 text-red-500 hover:text-red-700 transition-all bg-white rounded shadow-sm\",\n                title: \"Remove project\",\n                children: /*#__PURE__*/_jsxDEV(X, {\n                  size: 12\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 909,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 908,\n                columnNumber: 41\n              }, this)]\n            }, project.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 866,\n              columnNumber: 37\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sticky top-0 z-10 p-4 bg-blue-50 border-b border-l-2 border-blue-200 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\",\n              children: \"Final Grade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 913,\n              columnNumber: 33\n            }, this), getFilteredAndSortedStudents().flatMap((student, index) => {\n              const finalGrade = calculateFinalGrade(student.id);\n              const rowBg = index % 2 === 0 ? 'bg-white' : 'bg-gray-50';\n              return [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${rowBg} p-4 border-b border-r border-gray-200 flex flex-col justify-center`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm font-medium text-gray-900\",\n                  children: student.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 924,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-500\",\n                  children: [\"ID: \", student.id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 925,\n                  columnNumber: 45\n                }, this), student.email && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xs text-gray-400\",\n                  children: student.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 926,\n                  columnNumber: 63\n                }, this)]\n              }, `${student.id}-details`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 923,\n                columnNumber: 41\n              }, this), ...gradeBookData.projects.map(project => {\n                var _gradeBookData$grades3;\n                const isSelected = (selectedCell === null || selectedCell === void 0 ? void 0 : selectedCell.studentId) === student.id && (selectedCell === null || selectedCell === void 0 ? void 0 : selectedCell.projectId) === project.id;\n                const gradeData = (_gradeBookData$grades3 = gradeBookData.grades[student.id]) === null || _gradeBookData$grades3 === void 0 ? void 0 : _gradeBookData$grades3[project.id];\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `${rowBg} p-2 border-b border-r border-gray-200 flex items-center justify-center`,\n                  children: isSelected && isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    value: editValue,\n                    onChange: e => setEditValue(e.target.value),\n                    onKeyDown: e => {\n                      if (e.key === 'Enter') saveEdit();\n                      if (e.key === 'Escape') cancelEdit();\n                    },\n                    onBlur: saveEdit,\n                    className: \"w-full px-2 py-1 text-sm border-2 border-blue-500 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 text-center\",\n                    placeholder: \"Enter points\",\n                    autoFocus: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 935,\n                    columnNumber: 57\n                  }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => startEditing(student.id, project.id),\n                    className: \"w-full h-full p-2 text-sm rounded-lg transition-all min-h-[4rem] flex items-center justify-center hover:bg-gray-100\",\n                    children: gradeData && gradeData.rawScore != null ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex items-center justify-center space-x-3 text-sm w-full text-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"font-bold text-blue-800\",\n                        children: [gradeData.rawScore, \"pts\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 952,\n                        columnNumber: 69\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-gray-300\",\n                        children: \"|\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 953,\n                        columnNumber: 69\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-gray-600\",\n                        children: [gradeData.percentage, \"%\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 954,\n                        columnNumber: 69\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-gray-300\",\n                        children: \"|\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 955,\n                        columnNumber: 69\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: `font-semibold px-2 py-1 rounded-full text-xs ${gradeData.percentage >= 60 ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`,\n                        children: gradeData.letterGrade\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 956,\n                        columnNumber: 69\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 951,\n                      columnNumber: 65\n                    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-gray-400\",\n                      children: \"Enter grade\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 959,\n                      columnNumber: 65\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 946,\n                    columnNumber: 57\n                  }, this)\n                }, `${student.id}-${project.id}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 933,\n                  columnNumber: 49\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${rowBg} p-4 border-b bg-blue-50 border-l-2 border-blue-200 flex flex-col items-center justify-center`,\n                children: finalGrade.percentage > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `text-lg font-bold ${finalGrade.percentage >= 60 ? 'text-green-800' : 'text-red-800'}`,\n                    children: [finalGrade.percentage, \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 969,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs font-normal opacity-75\",\n                    children: finalGrade.letterGrade\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 970,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-gray-400\",\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 973,\n                  columnNumber: 49\n                }, this)\n              }, `${student.id}-final`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 966,\n                columnNumber: 41\n              }, this)];\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 860,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 858,\n        columnNumber: 21\n      }, this), showSettings && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-xl w-full max-w-lg p-6 min-h-[580px]\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-lg font-semibold text-gray-900\",\n              children: \"Gradebook Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 988,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowSettings(false),\n              className: \"text-gray-400 hover:text-gray-600\",\n              children: /*#__PURE__*/_jsxDEV(X, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 993,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 989,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 987,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-1\",\n                children: \"Course Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 999,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: gradeBookData.metadata.courseCode,\n                onChange: e => setGradeBookData(prev => ({\n                  ...prev,\n                  metadata: {\n                    ...prev.metadata,\n                    courseCode: e.target.value\n                  }\n                })),\n                className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1002,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 998,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-1\",\n                children: \"Course Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1014,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: gradeBookData.metadata.courseName,\n                onChange: e => setGradeBookData(prev => ({\n                  ...prev,\n                  metadata: {\n                    ...prev.metadata,\n                    courseName: e.target.value\n                  }\n                })),\n                className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1017,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1013,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-1\",\n                children: \"Instructor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1029,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: gradeBookData.metadata.instructor,\n                onChange: e => setGradeBookData(prev => ({\n                  ...prev,\n                  metadata: {\n                    ...prev.metadata,\n                    instructor: e.target.value\n                  }\n                })),\n                className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1032,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1028,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-1\",\n                children: \"Term\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1044,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: gradeBookData.metadata.term,\n                onChange: e => setGradeBookData(prev => ({\n                  ...prev,\n                  metadata: {\n                    ...prev.metadata,\n                    term: e.target.value\n                  }\n                })),\n                className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",\n                placeholder: \"e.g., Fall 2025\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1047,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1043,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-1\",\n                children: \"Grading Policy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1059,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: gradeBookData.metadata.gradingPolicy,\n                onChange: e => setGradeBookData(prev => ({\n                  ...prev,\n                  metadata: {\n                    ...prev.metadata,\n                    gradingPolicy: e.target.value\n                  }\n                })),\n                className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",\n                children: supportedPolicies.map(policy => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: policy.value,\n                  children: policy.label\n                }, policy.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1071,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1062,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1058,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 997,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-end space-x-3 mt-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowSettings(false),\n              className: \"px-4 py-2 text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-lg transition-colors\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1080,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setGradeBookData(prev => ({\n                  ...prev,\n                  metadata: {\n                    ...prev.metadata,\n                    lastModified: new Date().toISOString()\n                  }\n                }));\n                setShowSettings(false);\n              },\n              className: \"px-4 py-2 bg-blue-600 text-white hover:bg-blue-700 rounded-lg transition-colors\",\n              children: \"Save Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1086,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1079,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 986,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 985,\n        columnNumber: 21\n      }, this), confirmDialog.show && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-xl w-full max-w-md p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-lg font-semibold text-gray-900\",\n              children: \"Confirm Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1111,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1110,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 mb-6\",\n            children: confirmDialog.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1114,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-end space-x-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setConfirmDialog({\n                show: false,\n                message: '',\n                onConfirm: null\n              }),\n              className: \"px-4 py-2 text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-lg transition-colors\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1119,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: confirmDialog.onConfirm,\n              className: \"px-4 py-2 bg-red-600 text-white hover:bg-red-700 rounded-lg transition-colors\",\n              children: \"Remove Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1125,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1118,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1109,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1108,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 678,\n    columnNumber: 9\n  }, this);\n};\n_s(GradeBook, \"lVdYBf7odd/UWGfWemJH7U6VBcc=\", false, function () {\n  return [useAssessment];\n});\n_c = GradeBook;\nexport default GradeBook;\nvar _c;\n$RefreshReg$(_c, \"GradeBook\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Users","Plus","Edit3","Trash2","Download","Upload","Settings","Save","FileText","Calculator","Eye","RotateCcw","CheckCircle","AlertCircle","BookOpen","X","Copy","Database","Percent","GraduationCap","ClipboardList","TrendingUp","BarChart3","Grid3X3","Filter","Search","SortAsc","SortDesc","FileSpreadsheet","Calendar","Clock","Award","Target","useAssessment","XLSX","gradingPolicyService","jsxDEV","_jsxDEV","Fragment","_Fragment","GradeBook","_s","classList","setClassList","activeTab","setActiveTab","drafts","finalGrades","gradeBook","setGradeBook","gradeBookData","setGradeBookData","projects","students","grades","metadata","courseName","courseCode","instructor","term","created","lastModified","gradingPolicy","isEditing","setIsEditing","selectedCell","setSelectedCell","editValue","setEditValue","showSettings","setShowSettings","searchTerm","setSearchTerm","sortBy","setSortBy","sortOrder","setSortOrder","viewMode","setViewMode","confirmDialog","setConfirmDialog","show","message","onConfirm","editingProject","setEditingProject","projectEditValue","setProjectEditValue","statistics","setStatistics","classAverage","highestGrade","lowestGrade","passingRate","projectAverages","importGradesRef","importGradeBookRef","prev","_classList$courseMeta","_classList$courseMeta2","_classList$courseMeta3","_classList$courseMeta4","map","student","id","name","email","program","length","maxPoints","weight","dueDate","description","Date","toISOString","courseMetadata","calculateStatistics","getLetterGrade","percentage","policy","calculateFinalGrade","studentId","studentGrades","totalWeightedScore","totalWeight","forEach","project","gradeData","undefined","letterGrade","finalPercentage","Math","round","final","filter","grade","reduce","sum","max","min","passingGrades","projectGrades","_grades$student$id","startEditingProject","projectId","field","currentValue","saveProjectEdit","parseFloat","cancelProjectEdit","addProject","newProject","now","removeProject","newGrades","Object","keys","p","updateGrade","value","find","rawScore","isNaN","trim","startEditing","_gradeBookData$grades","currentGrade","String","saveEdit","cancelEdit","exportGradeBook","exportData","exportedAt","version","blob","Blob","JSON","stringify","type","url","URL","createObjectURL","link","document","createElement","href","download","split","click","revokeObjectURL","importGradeBook","event","file","target","files","reader","FileReader","onload","e","importedData","parse","result","Error","alert","error","console","readAsText","exportToExcel","worksheetData","headerRow","push","row","_gradeBookData$grades2","finalGrade","statsRow","avg","wb","utils","book_new","ws","aoa_to_sheet","book_append_sheet","writeFile","importGrades","data","Uint8Array","workbook","read","worksheet","Sheets","SheetNames","jsonData","sheet_to_json","header","readAsArrayBuffer","getFilteredAndSortedStudents","filtered","toLowerCase","includes","toString","sort","a","b","aValue","bValue","handleImportGrades","targetProjectId","importedCount","studentGradeData","totalScore","_studentGradeData$rub","_studentGradeData$rub2","finalScore","rubric","assignmentInfo","totalPoints","toFixed","gridTemplateColumns","supportedPolicies","getSupportedProgramTypes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","placeholder","onChange","ref","accept","_importGradeBookRef$c","current","style","minWidth","onKeyDown","key","onBlur","autoFocus","title","flatMap","index","rowBg","_gradeBookData$grades3","isSelected","label","_c","$RefreshReg$"],"sources":["C:/local clones/rubric-creation-app/src/components/GradeBook.js"],"sourcesContent":["// GradeBook.jsx - Complete Gradebook Management Component\n// File: src/components/GradeBook.jsx\n\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport {\n    Users, Plus, Edit3, Trash2, Download, Upload, Settings, Save,\n    FileText, Calculator, Eye, RotateCcw, CheckCircle, AlertCircle,\n    BookOpen, X, Copy, Database, Percent, GraduationCap, ClipboardList,\n    TrendingUp, BarChart3, Grid3X3, Filter, Search, SortAsc, SortDesc,\n    FileSpreadsheet, Calendar, Clock, Award, Target\n} from 'lucide-react';\nimport { useAssessment } from './SharedContext';\nimport * as XLSX from 'xlsx';\n// NOTE: Adjust the path if your services folder is located elsewhere\nimport gradingPolicyService from '../services/gradingPolicyService';\n\nconst GradeBook = () => {\n    // In GradeBook.js, update the useAssessment hook\n    const {\n        classList,\n        setClassList,\n        activeTab,\n        setActiveTab,\n        drafts,\n        finalGrades,\n        gradeBook,    // Add this\n        setGradeBook, // Add this\n    } = useAssessment();\n\n    // Core gradebook state\n    const [gradeBookData, setGradeBookData] = useState({\n        projects: [],\n        students: [],\n        grades: {}, // studentId -> projectId -> grade data\n        metadata: {\n            courseName: '',\n            courseCode: '',\n            instructor: '',\n            term: '',\n            created: null,\n            lastModified: null,\n            gradingPolicy: 'degree'\n        }\n    });\n\n    // UI state\n    const [isEditing, setIsEditing] = useState(false);\n    const [selectedCell, setSelectedCell] = useState(null);\n    const [editValue, setEditValue] = useState('');\n    const [showSettings, setShowSettings] = useState(false);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [sortBy, setSortBy] = useState('name');\n    const [sortOrder, setSortOrder] = useState('asc');\n    const [viewMode, setViewMode] = useState('percentage'); // 'percentage', 'letter', 'both'\n    const [confirmDialog, setConfirmDialog] = useState({ show: false, message: '', onConfirm: null });\n    const [editingProject, setEditingProject] = useState(null);\n    const [projectEditValue, setProjectEditValue] = useState('');\n\n    // Project form state - removed since we have inline editing\n\n    // Statistics state\n    const [statistics, setStatistics] = useState({\n        classAverage: 0,\n        highestGrade: 0,\n        lowestGrade: 0,\n        passingRate: 0,\n        projectAverages: {}\n    });\n\n    // File input refs\n    const importGradesRef = useRef(null);\n    const importGradeBookRef = useRef(null);\n\n    // Initialize gradebook with class list data and default projects\n    useEffect(() => {\n        if (classList && classList.students) {\n            setGradeBookData(prev => ({\n                ...prev,\n                students: classList.students.map(student => ({\n                    id: student.id,\n                    name: student.name,\n                    email: student.email || '',\n                    program: student.program || ''\n                })),\n                // Initialize with 4 default empty projects if none exist\n                projects: prev.projects.length === 0 ? [\n                    {\n                        id: 'project_1',\n                        name: 'Project 1',\n                        maxPoints: 100,\n                        weight: 25,\n                        dueDate: '',\n                        description: '',\n                        created: new Date().toISOString()\n                    },\n                    {\n                        id: 'project_2',\n                        name: 'Project 2',\n                        maxPoints: 100,\n                        weight: 25,\n                        dueDate: '',\n                        description: '',\n                        created: new Date().toISOString()\n                    },\n                    {\n                        id: 'project_3',\n                        name: 'Project 3',\n                        maxPoints: 100,\n                        weight: 25,\n                        dueDate: '',\n                        description: '',\n                        created: new Date().toISOString()\n                    },\n                    {\n                        id: 'project_4',\n                        name: 'Project 4',\n                        maxPoints: 100,\n                        weight: 25,\n                        dueDate: '',\n                        description: '',\n                        created: new Date().toISOString()\n                    }\n                ] : prev.projects,\n                metadata: {\n                    ...prev.metadata,\n                    courseName: classList.courseMetadata?.courseName || '',\n                    courseCode: classList.courseMetadata?.courseCode || '',\n                    instructor: classList.courseMetadata?.instructor || '',\n                    term: classList.courseMetadata?.term || ''\n                }\n            }));\n        } else if (gradeBookData.projects.length === 0) {\n            // Initialize default projects even without class list\n            setGradeBookData(prev => ({\n                ...prev,\n                projects: [\n                    {\n                        id: 'project_1',\n                        name: 'Project 1',\n                        maxPoints: 100,\n                        weight: 25,\n                        dueDate: '',\n                        description: '',\n                        created: new Date().toISOString()\n                    },\n                    {\n                        id: 'project_2',\n                        name: 'Project 2',\n                        maxPoints: 100,\n                        weight: 25,\n                        dueDate: '',\n                        description: '',\n                        created: new Date().toISOString()\n                    },\n                    {\n                        id: 'project_3',\n                        name: 'Project 3',\n                        maxPoints: 100,\n                        weight: 25,\n                        dueDate: '',\n                        description: '',\n                        created: new Date().toISOString()\n                    },\n                    {\n                        id: 'project_4',\n                        name: 'Project 4',\n                        maxPoints: 100,\n                        weight: 25,\n                        dueDate: '',\n                        description: '',\n                        created: new Date().toISOString()\n                    }\n                ]\n            }));\n        }\n    }, [classList]);\n\n    // Calculate statistics whenever grades change\n    useEffect(() => {\n        calculateStatistics();\n    }, [gradeBookData.grades, gradeBookData.projects]);\n\n    // Grade calculation functions\n    const getLetterGrade = (percentage, policy = 'degree') => {\n        // Use the existing grading policy logic\n        if (policy === 'certificate') {\n            if (percentage >= 80) return 'A';\n            if (percentage >= 70) return 'B';\n            if (percentage >= 60) return 'C';\n            return 'F';\n        } else {\n            // Standard degree policy\n            if (percentage >= 97) return 'A+';\n            if (percentage >= 93) return 'A';\n            if (percentage >= 90) return 'A-';\n            if (percentage >= 87) return 'B+';\n            if (percentage >= 83) return 'B';\n            if (percentage >= 80) return 'B-';\n            if (percentage >= 77) return 'C+';\n            if (percentage >= 73) return 'C';\n            if (percentage >= 70) return 'C-';\n            if (percentage >= 67) return 'D+';\n            if (percentage >= 63) return 'D';\n            if (percentage >= 60) return 'D-';\n            return 'F';\n        }\n    };\n\n    const calculateFinalGrade = (studentId) => {\n        const studentGrades = gradeBookData.grades[studentId] || {};\n        let totalWeightedScore = 0;\n        let totalWeight = 0;\n\n        gradeBookData.projects.forEach(project => {\n            const gradeData = studentGrades[project.id];\n            if (gradeData && gradeData.percentage !== null && gradeData.percentage !== undefined) {\n                totalWeightedScore += (gradeData.percentage * project.weight) / 100;\n                totalWeight += project.weight;\n            }\n        });\n\n        if (totalWeight === 0) return { percentage: 0, letterGrade: 'N/A' };\n\n        const finalPercentage = (totalWeightedScore / totalWeight) * 100;\n        const letterGrade = getLetterGrade(finalPercentage, gradeBookData.metadata.gradingPolicy);\n\n        return {\n            percentage: Math.round(finalPercentage * 100) / 100,\n            letterGrade\n        };\n    };\n\n    const calculateStatistics = () => {\n        const students = gradeBookData.students;\n        const grades = gradeBookData.grades;\n\n        if (students.length === 0) {\n            setStatistics({\n                classAverage: 0,\n                highestGrade: 0,\n                lowestGrade: 0,\n                passingRate: 0,\n                projectAverages: {}\n            });\n            return;\n        }\n\n        // Calculate final grades for all students\n        const finalGrades = students.map(student => {\n            const final = calculateFinalGrade(student.id);\n            return final.percentage;\n        }).filter(grade => grade > 0);\n\n        if (finalGrades.length === 0) {\n            setStatistics({\n                classAverage: 0,\n                highestGrade: 0,\n                lowestGrade: 0,\n                passingRate: 0,\n                projectAverages: {}\n            });\n            return;\n        }\n\n        const classAverage = finalGrades.reduce((sum, grade) => sum + grade, 0) / finalGrades.length;\n        const highestGrade = Math.max(...finalGrades);\n        const lowestGrade = Math.min(...finalGrades);\n        const passingGrades = finalGrades.filter(grade => grade >= 60).length;\n        const passingRate = (passingGrades / finalGrades.length) * 100;\n\n        // Calculate project averages\n        const projectAverages = {};\n        gradeBookData.projects.forEach(project => {\n            const projectGrades = students.map(student => {\n                const gradeData = grades[student.id]?.[project.id];\n                return gradeData?.percentage;\n            }).filter(grade => grade !== null && grade !== undefined);\n\n            if (projectGrades.length > 0) {\n                projectAverages[project.id] = projectGrades.reduce((sum, grade) => sum + grade, 0) / projectGrades.length;\n            }\n        });\n\n        setStatistics({\n            classAverage: Math.round(classAverage * 100) / 100,\n            highestGrade: Math.round(highestGrade * 100) / 100,\n            lowestGrade: Math.round(lowestGrade * 100) / 100,\n            passingRate: Math.round(passingRate * 100) / 100,\n            projectAverages\n        });\n    };\n\n    // Project editing functions\n    const startEditingProject = (projectId, field, currentValue) => {\n        setEditingProject({ projectId, field });\n        setProjectEditValue(currentValue || '');\n    };\n\n    const saveProjectEdit = () => {\n        if (editingProject) {\n            setGradeBookData(prev => ({\n                ...prev,\n                projects: prev.projects.map(project =>\n                    project.id === editingProject.projectId\n                        ? {\n                            ...project, [editingProject.field]: editingProject.field === 'weight' || editingProject.field === 'maxPoints'\n                                ? parseFloat(projectEditValue) || project[editingProject.field]\n                                : projectEditValue\n                        }\n                        : project\n                ),\n                metadata: {\n                    ...prev.metadata,\n                    lastModified: new Date().toISOString()\n                }\n            }));\n        }\n        setEditingProject(null);\n        setProjectEditValue('');\n    };\n\n    const cancelProjectEdit = () => {\n        setEditingProject(null);\n        setProjectEditValue('');\n    };\n\n    // Project management functions\n    const addProject = () => {\n        const newProject = {\n            id: `project_${Date.now()}`,\n            name: `Project ${gradeBookData.projects.length + 1}`,\n            maxPoints: 100,\n            weight: 25,\n            dueDate: '',\n            description: '',\n            created: new Date().toISOString()\n        };\n\n        setGradeBookData(prev => ({\n            ...prev,\n            projects: [...prev.projects, newProject],\n            metadata: {\n                ...prev.metadata,\n                lastModified: new Date().toISOString()\n            }\n        }));\n    };\n    const removeProject = (projectId) => {\n        setConfirmDialog({\n            show: true,\n            message: 'Are you sure you want to remove this project? All grades for this project will be lost.',\n            onConfirm: () => {\n                setGradeBookData(prev => {\n                    const newGrades = { ...prev.grades };\n                    // Remove all grades for this project\n                    Object.keys(newGrades).forEach(studentId => {\n                        if (newGrades[studentId][projectId]) {\n                            delete newGrades[studentId][projectId];\n                        }\n                    });\n\n                    return {\n                        ...prev,\n                        projects: prev.projects.filter(p => p.id !== projectId),\n                        grades: newGrades,\n                        metadata: {\n                            ...prev.metadata,\n                            lastModified: new Date().toISOString()\n                        }\n                    };\n                });\n                setConfirmDialog({ show: false, message: '', onConfirm: null });\n            }\n        });\n    };\n\n    // Grade management functions - UPDATED for raw points\n    const updateGrade = (studentId, projectId, value) => {\n        const project = gradeBookData.projects.find(p => p.id === projectId);\n        if (!project) return;\n\n        const maxPoints = project.maxPoints || 100;\n        let rawScore = parseFloat(value);\n\n        if (isNaN(rawScore) || value.trim() === '') {\n            // If input is empty or not a number, clear the grade\n            const newGrades = { ...gradeBookData.grades };\n            if (newGrades[studentId]) {\n                newGrades[studentId][projectId] = { rawScore: null, percentage: null, letterGrade: null, lastModified: new Date().toISOString() };\n            }\n            setGradeBookData(prev => ({ ...prev, grades: newGrades }));\n            return;\n        }\n\n        rawScore = Math.max(0, rawScore);\n\n        const percentage = Math.round((rawScore / maxPoints) * 100);\n        const letterGrade = getLetterGrade(percentage, gradeBookData.metadata.gradingPolicy);\n\n        const newGrades = { ...gradeBookData.grades };\n        if (!newGrades[studentId]) {\n            newGrades[studentId] = {};\n        }\n        newGrades[studentId][projectId] = {\n            rawScore,\n            percentage,\n            letterGrade,\n            lastModified: new Date().toISOString()\n        };\n\n        setGradeBookData(prev => ({\n            ...prev,\n            grades: newGrades,\n            metadata: { ...prev.metadata, lastModified: new Date().toISOString() }\n        }));\n    };\n\n    // Cell editing functions - UPDATED for raw points\n    const startEditing = (studentId, projectId) => {\n        const currentGrade = gradeBookData.grades[studentId]?.[projectId];\n        setSelectedCell({ studentId, projectId });\n        setEditValue(currentGrade?.rawScore != null ? String(currentGrade.rawScore) : '');\n        setIsEditing(true);\n    };\n\n    const saveEdit = () => {\n        if (selectedCell) {\n            updateGrade(selectedCell.studentId, selectedCell.projectId, editValue);\n        }\n        setIsEditing(false);\n        setSelectedCell(null);\n        setEditValue('');\n    };\n\n    const cancelEdit = () => {\n        setIsEditing(false);\n        setSelectedCell(null);\n        setEditValue('');\n    };\n\n    // Import/Export functions\n    const exportGradeBook = () => {\n        const exportData = {\n            ...gradeBookData,\n            exportedAt: new Date().toISOString(),\n            version: '1.0'\n        };\n\n        const blob = new Blob([JSON.stringify(exportData, null, 2)], { type: 'application/json' });\n        const url = URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = `gradebook_${gradeBookData.metadata.courseCode || 'course'}_${new Date().toISOString().split('T')[0]}.json`;\n        link.click();\n        URL.revokeObjectURL(url);\n    };\n\n    const importGradeBook = (event) => {\n        const file = event.target.files[0];\n        if (!file) return;\n\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            try {\n                const importedData = JSON.parse(e.target.result);\n\n                // Validate the imported data structure\n                if (!importedData.projects || !importedData.students || !importedData.grades) {\n                    throw new Error('Invalid gradebook file format');\n                }\n\n                setGradeBookData({\n                    ...importedData,\n                    metadata: {\n                        ...importedData.metadata,\n                        lastModified: new Date().toISOString()\n                    }\n                });\n\n                alert('Gradebook imported successfully!');\n            } catch (error) {\n                console.error('Import error:', error);\n                alert('Error importing gradebook: ' + error.message);\n            }\n        };\n        reader.readAsText(file);\n        event.target.value = '';\n    };\n\n    const exportToExcel = () => {\n        const worksheetData = [];\n\n        // Create header row\n        const headerRow = ['Student ID', 'Student Name', 'Email', 'Program'];\n        gradeBookData.projects.forEach(project => {\n            headerRow.push(`${project.name} (Points)`);\n            headerRow.push(`${project.name} (%)`);\n            headerRow.push(`${project.name} (Letter)`);\n        });\n        headerRow.push('Final %', 'Final Grade');\n        worksheetData.push(headerRow);\n\n        // Add student data rows\n        gradeBookData.students.forEach(student => {\n            const row = [student.id, student.name, student.email, student.program];\n\n            gradeBookData.projects.forEach(project => {\n                const gradeData = gradeBookData.grades[student.id]?.[project.id];\n                if (gradeData && gradeData.rawScore != null) {\n                    row.push(gradeData.rawScore);\n                    row.push(gradeData.percentage);\n                    row.push(gradeData.letterGrade);\n                } else {\n                    row.push('', '', '');\n                }\n            });\n\n            const finalGrade = calculateFinalGrade(student.id);\n            row.push(finalGrade.percentage);\n            row.push(finalGrade.letterGrade);\n\n            worksheetData.push(row);\n        });\n\n        // Add statistics row\n        worksheetData.push([]); // Empty row\n        const statsRow = ['STATISTICS', '', '', ''];\n        gradeBookData.projects.forEach(project => {\n            const avg = statistics.projectAverages[project.id];\n            statsRow.push(avg ? `${Math.round(avg * 100) / 100}` : '');\n            statsRow.push('', ''); // for points and letter grade columns\n        });\n        statsRow.push(`${statistics.classAverage}%`);\n        statsRow.push('');\n        worksheetData.push(statsRow);\n\n        // Create workbook and worksheet\n        const wb = XLSX.utils.book_new();\n        const ws = XLSX.utils.aoa_to_sheet(worksheetData);\n\n        // Add the worksheet to the workbook\n        XLSX.utils.book_append_sheet(wb, ws, 'Gradebook');\n\n        // Write the file\n        XLSX.writeFile(wb, `gradebook_${gradeBookData.metadata.courseCode || 'course'}_${new Date().toISOString().split('T')[0]}.xlsx`);\n    };\n\n    const importGrades = (event) => {\n        const file = event.target.files[0];\n        if (!file) return;\n\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            try {\n                const data = new Uint8Array(e.target.result);\n                const workbook = XLSX.read(data, { type: 'array' });\n                const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n                const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\n\n                if (jsonData.length < 2) {\n                    throw new Error('No data found in the file');\n                }\n\n                // Process the imported data (implementation depends on your specific format)\n                alert('Grade import functionality needs to be implemented based on your specific Excel format');\n\n            } catch (error) {\n                console.error('Import error:', error);\n                alert('Error importing grades: ' + error.message);\n            }\n        };\n        reader.readAsArrayBuffer(file);\n        event.target.value = '';\n    };\n\n    // Filter and sort students\n    const getFilteredAndSortedStudents = () => {\n        let filtered = gradeBookData.students;\n\n        // Apply search filter\n        if (searchTerm) {\n            filtered = filtered.filter(student =>\n                student.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                (student.id && student.id.toString().toLowerCase().includes(searchTerm.toLowerCase())) ||\n                (student.email && student.email.toLowerCase().includes(searchTerm.toLowerCase()))\n            );\n        }\n\n        // Apply sorting\n        filtered.sort((a, b) => {\n            let aValue, bValue;\n\n            switch (sortBy) {\n                case 'name':\n                    aValue = a.name.toLowerCase();\n                    bValue = b.name.toLowerCase();\n                    break;\n                case 'id':\n                    aValue = a.id.toString().toLowerCase();\n                    bValue = b.id.toString().toLowerCase();\n                    break;\n                case 'finalGrade':\n                    aValue = calculateFinalGrade(a.id).percentage;\n                    bValue = calculateFinalGrade(b.id).percentage;\n                    break;\n                default:\n                    aValue = a.name.toLowerCase();\n                    bValue = b.name.toLowerCase();\n            }\n\n            if (sortOrder === 'asc') {\n                return aValue < bValue ? -1 : aValue > bValue ? 1 : 0;\n            } else {\n                return aValue > bValue ? -1 : aValue < bValue ? 1 : 0;\n            }\n        });\n\n        return filtered;\n    };\n\n    // Import grades from Grading Tool\n    const handleImportGrades = (targetProjectId) => {\n        if (!finalGrades && !drafts) {\n            alert(\"No graded data available to import from the Grading Tool.\");\n            return;\n        }\n\n        const newGrades = { ...gradeBookData.grades };\n        let importedCount = 0;\n\n        gradeBookData.students.forEach(student => {\n            const studentGradeData = finalGrades[student.id] || drafts[student.id];\n\n            if (studentGradeData && studentGradeData.totalScore) {\n                const rawScore = studentGradeData.totalScore.finalScore;\n                const maxPoints = studentGradeData.rubric?.assignmentInfo?.totalPoints || 100;\n\n                if (rawScore !== undefined && maxPoints > 0) {\n                    const percentage = Math.round((rawScore / maxPoints) * 100);\n                    const letterGrade = getLetterGrade(percentage, gradeBookData.metadata.gradingPolicy);\n\n                    if (!newGrades[student.id]) {\n                        newGrades[student.id] = {};\n                    }\n\n                    newGrades[student.id][targetProjectId] = {\n                        rawScore: parseFloat(rawScore.toFixed(1)),\n                        percentage: percentage,\n                        letterGrade: letterGrade,\n                        lastModified: new Date().toISOString()\n                    };\n                    importedCount++;\n                }\n            }\n        });\n\n        if (importedCount > 0) {\n            setGradeBookData(prev => ({\n                ...prev,\n                grades: newGrades,\n                metadata: { ...prev.metadata, lastModified: new Date().toISOString() }\n            }));\n            alert(`Successfully imported grades for ${importedCount} students.`);\n        } else {\n            alert(\"No matching student grades found in the Grading Tool's saved data.\");\n        }\n    };\n\n\n    // Define grid columns dynamically based on the number of projects\n    const gridTemplateColumns = `minmax(240px, 1.5fr) repeat(${gradeBookData.projects.length}, minmax(220px, 1fr)) minmax(120px, 1fr)`;\n\n    // Get the list of policies from the service\n    const supportedPolicies = gradingPolicyService.getSupportedProgramTypes();\n\n    // Component render\n    return (\n        <div className=\"min-h-screen bg-gray-50 p-6\">\n            <div className=\"max-w-7xl mx-auto\">\n                {/* Header */}\n                <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-6\">\n                    <div className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center space-x-4\">\n                            <div className=\"bg-blue-100 p-3 rounded-lg\">\n                                <BookOpen className=\"h-8 w-8 text-blue-600\" />\n                            </div>\n                            <div>\n                                <h1 className=\"text-2xl font-bold text-gray-900\">Grade Book</h1>\n                                <p className=\"text-gray-600\">\n                                    {gradeBookData.metadata.courseCode} - {gradeBookData.metadata.courseName}\n                                </p>\n                                {gradeBookData.students.length > 0 && (\n                                    <p className=\"text-sm text-gray-500\">\n                                        {gradeBookData.students.length} students • {gradeBookData.projects.length} projects\n                                    </p>\n                                )}\n                            </div>\n                        </div>\n\n                        <div className=\"flex items-center space-x-2\">\n                            <button\n                                onClick={() => setShowSettings(true)}\n                                className=\"flex items-center gap-2 px-4 py-2 text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-lg transition-colors\"\n                            >\n                                <Settings size={16} />\n                                Settings\n                            </button>\n                            <button\n                                onClick={addProject}\n                                className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white hover:bg-blue-700 rounded-lg transition-colors\"\n                            >\n                                <Plus size={16} />\n                                Add Project\n                            </button>\n                        </div>\n                    </div>\n                </div>\n\n                {/* Quick Actions */}\n                <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-4 mb-6\">\n                    <div className=\"flex flex-wrap items-center justify-between gap-4\">\n                        <div className=\"flex items-center space-x-4\">\n                            <div className=\"relative\">\n                                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Search students...\"\n                                    value={searchTerm}\n                                    onChange={(e) => setSearchTerm(e.target.value)}\n                                    className=\"w-64 pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                                />\n                            </div>\n\n                            <select\n                                value={sortBy}\n                                onChange={(e) => setSortBy(e.target.value)}\n                                className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                            >\n                                <option value=\"name\">Sort by Name</option>\n                                <option value=\"id\">Sort by ID</option>\n                                <option value=\"finalGrade\">Sort by Final Grade</option>\n                            </select>\n\n                            <button\n                                onClick={() => setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc')}\n                                className=\"p-2 border border-gray-300 rounded-lg hover:bg-gray-50\"\n                            >\n                                {sortOrder === 'asc' ? <SortAsc size={16} /> : <SortDesc size={16} />}\n                            </button>\n                        </div>\n\n                        <div className=\"flex items-center space-x-2\">\n                            <button\n                                onClick={exportGradeBook}\n                                className=\"flex items-center gap-2 px-3 py-2 text-blue-700 bg-blue-50 hover:bg-blue-100 rounded-lg transition-colors\"\n                            >\n                                <Download size={16} />\n                                Export JSON\n                            </button>\n                            <button\n                                onClick={exportToExcel}\n                                className=\"flex items-center gap-2 px-3 py-2 text-green-700 bg-green-50 hover:bg-green-100 rounded-lg transition-colors\"\n                            >\n                                <FileSpreadsheet size={16} />\n                                Export Excel\n                            </button>\n                            <input\n                                ref={importGradeBookRef}\n                                type=\"file\"\n                                accept=\".json\"\n                                onChange={importGradeBook}\n                                className=\"hidden\"\n                            />\n                            <button\n                                onClick={() => importGradeBookRef.current?.click()}\n                                className=\"flex items-center gap-2 px-3 py-2 text-purple-700 bg-purple-50 hover:bg-purple-100 rounded-lg transition-colors\"\n                            >\n                                <Upload size={16} />\n                                Import\n                            </button>\n                        </div>\n                    </div>\n                </div>\n\n                {/* Statistics */}\n                {gradeBookData.students.length > 0 && gradeBookData.projects.length > 0 && (\n                    <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n                        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-4\">\n                            <div className=\"flex items-center\">\n                                <div className=\"bg-blue-100 p-2 rounded-lg\">\n                                    <TrendingUp className=\"h-5 w-5 text-blue-600\" />\n                                </div>\n                                <div className=\"ml-3\">\n                                    <p className=\"text-sm font-medium text-gray-500\">Class Average</p>\n                                    <p className=\"text-2xl font-bold text-gray-900\">{statistics.classAverage}%</p>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-4\">\n                            <div className=\"flex items-center\">\n                                <div className=\"bg-green-100 p-2 rounded-lg\">\n                                    <Award className=\"h-5 w-5 text-green-600\" />\n                                </div>\n                                <div className=\"ml-3\">\n                                    <p className=\"text-sm font-medium text-gray-500\">Highest Grade</p>\n                                    <p className=\"text-2xl font-bold text-gray-900\">{statistics.highestGrade}%</p>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-4\">\n                            <div className=\"flex items-center\">\n                                <div className=\"bg-orange-100 p-2 rounded-lg\">\n                                    <Target className=\"h-5 w-5 text-orange-600\" />\n                                </div>\n                                <div className=\"ml-3\">\n                                    <p className=\"text-sm font-medium text-gray-500\">Lowest Grade</p>\n                                    <p className=\"text-2xl font-bold text-gray-900\">{statistics.lowestGrade}%</p>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-4\">\n                            <div className=\"flex items-center\">\n                                <div className=\"bg-purple-100 p-2 rounded-lg\">\n                                    <CheckCircle className=\"h-5 w-5 text-purple-600\" />\n                                </div>\n                                <div className=\"ml-3\">\n                                    <p className=\"text-sm font-medium text-gray-500\">Passing Rate</p>\n                                    <p className=\"text-2xl font-bold text-gray-900\">{statistics.passingRate}%</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n\n                {/* Empty State */}\n                {gradeBookData.students.length === 0 ? (\n                    <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-12 text-center\">\n                        <div className=\"bg-gray-100 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4\">\n                            <Users className=\"h-8 w-8 text-gray-400\" />\n                        </div>\n                        <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No Students Found</h3>\n                        <p className=\"text-gray-600 mb-6\">\n                            Import a class list from the Class Manager to start using the gradebook.\n                        </p>\n                        <button\n                            onClick={() => setActiveTab('class-manager')}\n                            className=\"inline-flex items-center gap-2 px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n                        >\n                            <Users size={16} />\n                            Go to Class Manager\n                        </button>\n                    </div>\n                ) : (\n                    /* Gradebook Grid Layout */\n                    <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden\">\n                        <div className=\"overflow-x-auto\">\n                            <div className=\"grid\" style={{ gridTemplateColumns, minWidth: '900px' }}>\n                                {/* Grid Header */}\n                                <div className=\"sticky top-0 z-10 p-4 bg-gray-50 border-b border-r border-gray-200 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                    Student\n                                </div>\n                                {gradeBookData.projects.map(project => (\n                                    <div key={project.id} className=\"sticky top-0 z-10 p-4 bg-gray-50 border-b border-r border-gray-200 text-center text-xs font-medium text-gray-500 uppercase tracking-wider group relative\">\n                                        <div className=\"flex flex-col items-center space-y-1\">\n                                            {editingProject?.projectId === project.id && editingProject?.field === 'name' ? (\n                                                <input\n                                                    type=\"text\"\n                                                    value={projectEditValue}\n                                                    onChange={(e) => setProjectEditValue(e.target.value)}\n                                                    onKeyDown={(e) => { if (e.key === 'Enter') saveProjectEdit(); if (e.key === 'Escape') cancelProjectEdit(); }}\n                                                    onBlur={saveProjectEdit}\n                                                    className=\"w-full px-2 py-1 text-sm border border-blue-500 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 text-center bg-white\"\n                                                    autoFocus\n                                                />\n                                            ) : (\n                                                <button\n                                                    onClick={() => startEditingProject(project.id, 'name', project.name)}\n                                                    className=\"font-medium text-gray-900 hover:text-blue-600 transition-colors cursor-pointer text-center\"\n                                                    title=\"Click to edit project name\"\n                                                >\n                                                    {project.name}\n                                                </button>\n                                            )}\n                                            <div className=\"flex items-center space-x-1\">\n                                                {editingProject?.projectId === project.id && editingProject?.field === 'weight' ? (\n                                                    <input type=\"number\" value={projectEditValue} onChange={(e) => setProjectEditValue(e.target.value)} onKeyDown={(e) => { if (e.key === 'Enter') saveProjectEdit(); if (e.key === 'Escape') cancelProjectEdit(); }} onBlur={saveProjectEdit} className=\"w-16 px-1 py-1 text-xs border border-blue-500 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 text-center\" autoFocus />\n                                                ) : (\n                                                    <button onClick={() => startEditingProject(project.id, 'weight', project.weight.toString())} className=\"text-xs text-gray-400 hover:text-blue-600 transition-colors cursor-pointer\" title=\"Click to edit weight\">{project.weight}%</button>\n                                                )}\n                                                <span className=\"text-xs text-gray-400\">•</span>\n                                                {editingProject?.projectId === project.id && editingProject?.field === 'maxPoints' ? (\n                                                    <input type=\"number\" value={projectEditValue} onChange={(e) => setProjectEditValue(e.target.value)} onKeyDown={(e) => { if (e.key === 'Enter') saveProjectEdit(); if (e.key === 'Escape') cancelProjectEdit(); }} onBlur={saveProjectEdit} className=\"w-16 px-1 py-1 text-xs border border-blue-500 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 text-center\" autoFocus />\n                                                ) : (\n                                                    <button onClick={() => startEditingProject(project.id, 'maxPoints', project.maxPoints.toString())} className=\"text-xs text-gray-400 hover:text-blue-600 transition-colors cursor-pointer\" title=\"Click to edit max points\">{project.maxPoints}pts</button>\n                                                )}\n                                            </div>\n                                            <button\n                                                onClick={() => handleImportGrades(project.id)}\n                                                className=\"text-xs text-blue-600 hover:text-blue-800 font-semibold mt-1 bg-blue-100 px-2 py-1 rounded-md hover:bg-blue-200 transition-colors\"\n                                                title=\"Import final grades from the Grading Tool for this project\"\n                                            >\n                                                Import Grades\n                                            </button>\n                                        </div>\n                                        <button onClick={() => removeProject(project.id)} className=\"absolute top-1 right-1 opacity-0 group-hover:opacity-100 p-1 text-red-500 hover:text-red-700 transition-all bg-white rounded shadow-sm\" title=\"Remove project\">\n                                            <X size={12} />\n                                        </button>\n                                    </div>\n                                ))}\n                                <div className=\"sticky top-0 z-10 p-4 bg-blue-50 border-b border-l-2 border-blue-200 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                    Final Grade\n                                </div>\n\n                                {/* Grid Body */}\n                                {getFilteredAndSortedStudents().flatMap((student, index) => {\n                                    const finalGrade = calculateFinalGrade(student.id);\n                                    const rowBg = index % 2 === 0 ? 'bg-white' : 'bg-gray-50';\n\n                                    return [\n                                        <div key={`${student.id}-details`} className={`${rowBg} p-4 border-b border-r border-gray-200 flex flex-col justify-center`}>\n                                            <div className=\"text-sm font-medium text-gray-900\">{student.name}</div>\n                                            <div className=\"text-sm text-gray-500\">ID: {student.id}</div>\n                                            {student.email && <div className=\"text-xs text-gray-400\">{student.email}</div>}\n                                        </div>,\n                                        ...gradeBookData.projects.map(project => {\n                                            const isSelected = selectedCell?.studentId === student.id && selectedCell?.projectId === project.id;\n                                            const gradeData = gradeBookData.grades[student.id]?.[project.id];\n\n                                            return (\n                                                <div key={`${student.id}-${project.id}`} className={`${rowBg} p-2 border-b border-r border-gray-200 flex items-center justify-center`}>\n                                                    {isSelected && isEditing ? (\n                                                        <input\n                                                            type=\"number\"\n                                                            value={editValue}\n                                                            onChange={(e) => setEditValue(e.target.value)}\n                                                            onKeyDown={(e) => { if (e.key === 'Enter') saveEdit(); if (e.key === 'Escape') cancelEdit(); }}\n                                                            onBlur={saveEdit}\n                                                            className=\"w-full px-2 py-1 text-sm border-2 border-blue-500 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 text-center\"\n                                                            placeholder=\"Enter points\"\n                                                            autoFocus\n                                                        />\n                                                    ) : (\n                                                        <button\n                                                            onClick={() => startEditing(student.id, project.id)}\n                                                            className=\"w-full h-full p-2 text-sm rounded-lg transition-all min-h-[4rem] flex items-center justify-center hover:bg-gray-100\"\n                                                        >\n                                                            {gradeData && gradeData.rawScore != null ? (\n                                                                <div className=\"flex items-center justify-center space-x-3 text-sm w-full text-center\">\n                                                                    <span className=\"font-bold text-blue-800\">{gradeData.rawScore}pts</span>\n                                                                    <span className=\"text-gray-300\">|</span>\n                                                                    <span className=\"text-gray-600\">{gradeData.percentage}%</span>\n                                                                    <span className=\"text-gray-300\">|</span>\n                                                                    <span className={`font-semibold px-2 py-1 rounded-full text-xs ${gradeData.percentage >= 60 ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`}>{gradeData.letterGrade}</span>\n                                                                </div>\n                                                            ) : (\n                                                                <span className=\"text-gray-400\">Enter grade</span>\n                                                            )}\n                                                        </button>\n                                                    )}\n                                                </div>\n                                            );\n                                        }),\n                                        <div key={`${student.id}-final`} className={`${rowBg} p-4 border-b bg-blue-50 border-l-2 border-blue-200 flex flex-col items-center justify-center`}>\n                                            {finalGrade.percentage > 0 ? (\n                                                <>\n                                                    <div className={`text-lg font-bold ${finalGrade.percentage >= 60 ? 'text-green-800' : 'text-red-800'}`}>{finalGrade.percentage}%</div>\n                                                    <div className=\"text-xs font-normal opacity-75\">{finalGrade.letterGrade}</div>\n                                                </>\n                                            ) : (\n                                                <div className=\"text-gray-400\">-</div>\n                                            )}\n                                        </div>\n                                    ];\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                )}\n\n                {/* Settings Modal */}\n                {showSettings && (\n                    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n                        <div className=\"bg-white rounded-lg shadow-xl w-full max-w-lg p-6 min-h-[580px]\">\n                            <div className=\"flex items-center justify-between mb-4\">\n                                <h2 className=\"text-lg font-semibold text-gray-900\">Gradebook Settings</h2>\n                                <button\n                                    onClick={() => setShowSettings(false)}\n                                    className=\"text-gray-400 hover:text-gray-600\"\n                                >\n                                    <X size={20} />\n                                </button>\n                            </div>\n\n                            <div className=\"space-y-4\">\n                                <div>\n                                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                        Course Code\n                                    </label>\n                                    <input\n                                        type=\"text\"\n                                        value={gradeBookData.metadata.courseCode}\n                                        onChange={(e) => setGradeBookData(prev => ({\n                                            ...prev,\n                                            metadata: { ...prev.metadata, courseCode: e.target.value }\n                                        }))}\n                                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                                    />\n                                </div>\n\n                                <div>\n                                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                        Course Name\n                                    </label>\n                                    <input\n                                        type=\"text\"\n                                        value={gradeBookData.metadata.courseName}\n                                        onChange={(e) => setGradeBookData(prev => ({\n                                            ...prev,\n                                            metadata: { ...prev.metadata, courseName: e.target.value }\n                                        }))}\n                                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                                    />\n                                </div>\n\n                                <div>\n                                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                        Instructor\n                                    </label>\n                                    <input\n                                        type=\"text\"\n                                        value={gradeBookData.metadata.instructor}\n                                        onChange={(e) => setGradeBookData(prev => ({\n                                            ...prev,\n                                            metadata: { ...prev.metadata, instructor: e.target.value }\n                                        }))}\n                                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                                    />\n                                </div>\n\n                                <div>\n                                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                        Term\n                                    </label>\n                                    <input\n                                        type=\"text\"\n                                        value={gradeBookData.metadata.term}\n                                        onChange={(e) => setGradeBookData(prev => ({\n                                            ...prev,\n                                            metadata: { ...prev.metadata, term: e.target.value }\n                                        }))}\n                                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                                        placeholder=\"e.g., Fall 2025\"\n                                    />\n                                </div>\n                                <div>\n                                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                        Grading Policy\n                                    </label>\n                                    <select\n                                        value={gradeBookData.metadata.gradingPolicy}\n                                        onChange={(e) => setGradeBookData(prev => ({\n                                            ...prev,\n                                            metadata: { ...prev.metadata, gradingPolicy: e.target.value }\n                                        }))}\n                                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                                    >\n                                        {supportedPolicies.map(policy => (\n                                            <option key={policy.value} value={policy.value}>\n                                                {policy.label}\n                                            </option>\n                                        ))}\n                                    </select>\n                                </div>\n                            </div>\n\n                            <div className=\"flex items-center justify-end space-x-3 mt-6\">\n                                <button\n                                    onClick={() => setShowSettings(false)}\n                                    className=\"px-4 py-2 text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-lg transition-colors\"\n                                >\n                                    Cancel\n                                </button>\n                                <button\n                                    onClick={() => {\n                                        setGradeBookData(prev => ({\n                                            ...prev,\n                                            metadata: {\n                                                ...prev.metadata,\n                                                lastModified: new Date().toISOString()\n                                            }\n                                        }));\n                                        setShowSettings(false);\n                                    }}\n                                    className=\"px-4 py-2 bg-blue-600 text-white hover:bg-blue-700 rounded-lg transition-colors\"\n                                >\n                                    Save Settings\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                )}\n\n                {/* Confirmation Dialog */}\n                {confirmDialog.show && (\n                    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n                        <div className=\"bg-white rounded-lg shadow-xl w-full max-w-md p-6\">\n                            <div className=\"flex items-center justify-between mb-4\">\n                                <h2 className=\"text-lg font-semibold text-gray-900\">Confirm Action</h2>\n                            </div>\n\n                            <p className=\"text-gray-600 mb-6\">\n                                {confirmDialog.message}\n                            </p>\n\n                            <div className=\"flex items-center justify-end space-x-3\">\n                                <button\n                                    onClick={() => setConfirmDialog({ show: false, message: '', onConfirm: null })}\n                                    className=\"px-4 py-2 text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-lg transition-colors\"\n                                >\n                                    Cancel\n                                </button>\n                                <button\n                                    onClick={confirmDialog.onConfirm}\n                                    className=\"px-4 py-2 bg-red-600 text-white hover:bg-red-700 rounded-lg transition-colors\"\n                                >\n                                    Remove Project\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default GradeBook;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}