{"ast":null,"code":"/**\r\n * School Logo Integration Utility\r\n * Helper functions to integrate school logos into exports\r\n */\n\n/**\r\n * Get the saved school logo from session storage\r\n * @returns {string|null} Base64 encoded logo or null if not found\r\n */\nexport const getSchoolLogo = () => {\n  try {\n    return sessionStorage.getItem('schoolLogo');\n  } catch (error) {\n    console.warn('Error accessing school logo from session storage:', error);\n    return null;\n  }\n};\n\n/**\r\n * Get school logo metadata\r\n * @returns {object} Object containing logo name, size, and data\r\n */\nexport const getSchoolLogoInfo = () => {\n  try {\n    const logo = sessionStorage.getItem('schoolLogo');\n    const name = sessionStorage.getItem('schoolLogoName');\n    const size = sessionStorage.getItem('schoolLogoSize');\n    return {\n      logo,\n      name: name || 'Unknown',\n      size: parseInt(size) || 0,\n      exists: !!logo\n    };\n  } catch (error) {\n    console.warn('Error accessing school logo info:', error);\n    return {\n      logo: null,\n      name: 'Unknown',\n      size: 0,\n      exists: false\n    };\n  }\n};\n\n/**\r\n * Generate HTML for logo display in exports\r\n * @param {object} options - Styling options for the logo\r\n * @returns {string} HTML string for logo or empty string if no logo\r\n */\nexport const getLogoHtml = (options = {}) => {\n  const logo = getSchoolLogo();\n  if (!logo) return '';\n  const {\n    className = 'school-logo',\n    style = '',\n    alt = 'School Logo',\n    maxHeight = 80,\n    maxWidth = 300\n  } = options;\n  const inlineStyle = `max-height: ${maxHeight}px; max-width: ${maxWidth}px; object-fit: contain; ${style}`;\n  return `<img src=\"${logo}\" alt=\"${alt}\" class=\"${className}\" style=\"${inlineStyle}\" />`;\n};\n\n/**\r\n * Enhanced HTML header with logo for grade reports\r\n * @param {object} reportData - Report information\r\n * @param {object} logoOptions - Logo styling options\r\n * @returns {string} Complete HTML header with logo\r\n */\nexport const generateReportHeader = (reportData, logoOptions = {}) => {\n  const {\n    title = 'Grade Report',\n    courseCode = '',\n    courseName = '',\n    section = '',\n    rubricTitle = 'Unnamed Rubric'\n  } = reportData;\n  const currentDate = new Date().toLocaleDateString('en-CA');\n  const currentTime = new Date().toLocaleTimeString('en-CA');\n  const logoHtml = getLogoHtml({\n    className: 'report-logo',\n    maxHeight: 80,\n    style: 'margin-bottom: 10px;',\n    ...logoOptions\n  });\n  return `\n    <div class=\"header\" style=\"text-align: center; margin-bottom: 30px;\">\n      ${logoHtml}\n      <h1 style=\"color: #1e3a8a; margin: 10px 0; font-size: 24px;\">${title}</h1>\n      <div class=\"meta\" style=\"color: #666; font-size: 14px; line-height: 1.5;\">\n        ${courseCode ? `${courseCode} – ${courseName}` : courseName}<br>\n        ${section ? `Section: ${section}<br>` : ''}\n        ${rubricTitle ? `Rubric: ${rubricTitle}<br>` : ''}\n        Generated: ${currentDate} | ${currentTime}\n      </div>\n    </div>\n  `;\n};\n\n/**\r\n * Complete CSS styles for logo-enhanced reports\r\n * @returns {string} CSS styles including logo styling\r\n */\nexport const getReportStyles = () => {\n  return `\n    <style>\n      body { \n        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; \n        margin: 20px; \n        line-height: 1.6; \n        color: #333;\n      }\n      .header { \n        text-align: center; \n        margin-bottom: 30px; \n        padding-bottom: 20px; \n        border-bottom: 2px solid #e5e7eb;\n      }\n      .school-logo, .report-logo { \n        max-height: 80px; \n        max-width: 300px; \n        object-fit: contain; \n        margin-bottom: 10px;\n        display: block;\n        margin-left: auto;\n        margin-right: auto;\n      }\n      .report-title { \n        color: #1e3a8a; \n        margin: 10px 0; \n        font-size: 24px;\n        font-weight: bold;\n      }\n      .meta { \n        color: #666; \n        font-size: 14px; \n        line-height: 1.5;\n      }\n      .table-container { \n        overflow-x: auto; \n        margin: 20px 0;\n      }\n      table { \n        width: 100%; \n        border-collapse: collapse; \n        margin-top: 20px;\n        box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n      }\n      th, td { \n        border: 1px solid #d1d5db; \n        padding: 12px 8px; \n        text-align: left; \n      }\n      th { \n        background-color: #f9fafb; \n        font-weight: 600;\n        color: #374151;\n      }\n      tr:nth-child(even) { \n        background-color: #f9fafb; \n      }\n      tr:hover { \n        background-color: #f3f4f6; \n      }\n      .footer { \n        text-align: center; \n        color: #666; \n        margin-top: 30px; \n        padding-top: 20px;\n        border-top: 1px solid #e5e7eb;\n        font-size: 12px;\n      }\n      @media print { \n        body { background: white; }\n        .table-container { overflow-x: visible; }\n        .school-logo, .report-logo { \n          max-height: 60px; \n          break-inside: avoid;\n        }\n      }\n    </style>\n  `;\n};","map":{"version":3,"names":["getSchoolLogo","sessionStorage","getItem","error","console","warn","getSchoolLogoInfo","logo","name","size","parseInt","exists","getLogoHtml","options","className","style","alt","maxHeight","maxWidth","inlineStyle","generateReportHeader","reportData","logoOptions","title","courseCode","courseName","section","rubricTitle","currentDate","Date","toLocaleDateString","currentTime","toLocaleTimeString","logoHtml","getReportStyles"],"sources":["C:/local clones/rubric-creation-app/src/components/logoIntegrationUtility.js"],"sourcesContent":["/**\r\n * School Logo Integration Utility\r\n * Helper functions to integrate school logos into exports\r\n */\r\n\r\n/**\r\n * Get the saved school logo from session storage\r\n * @returns {string|null} Base64 encoded logo or null if not found\r\n */\r\nexport const getSchoolLogo = () => {\r\n  try {\r\n    return sessionStorage.getItem('schoolLogo');\r\n  } catch (error) {\r\n    console.warn('Error accessing school logo from session storage:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * Get school logo metadata\r\n * @returns {object} Object containing logo name, size, and data\r\n */\r\nexport const getSchoolLogoInfo = () => {\r\n  try {\r\n    const logo = sessionStorage.getItem('schoolLogo');\r\n    const name = sessionStorage.getItem('schoolLogoName');\r\n    const size = sessionStorage.getItem('schoolLogoSize');\r\n    \r\n    return {\r\n      logo,\r\n      name: name || 'Unknown',\r\n      size: parseInt(size) || 0,\r\n      exists: !!logo\r\n    };\r\n  } catch (error) {\r\n    console.warn('Error accessing school logo info:', error);\r\n    return {\r\n      logo: null,\r\n      name: 'Unknown',\r\n      size: 0,\r\n      exists: false\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Generate HTML for logo display in exports\r\n * @param {object} options - Styling options for the logo\r\n * @returns {string} HTML string for logo or empty string if no logo\r\n */\r\nexport const getLogoHtml = (options = {}) => {\r\n  const logo = getSchoolLogo();\r\n  if (!logo) return '';\r\n\r\n  const {\r\n    className = 'school-logo',\r\n    style = '',\r\n    alt = 'School Logo',\r\n    maxHeight = 80,\r\n    maxWidth = 300\r\n  } = options;\r\n\r\n  const inlineStyle = `max-height: ${maxHeight}px; max-width: ${maxWidth}px; object-fit: contain; ${style}`;\r\n\r\n  return `<img src=\"${logo}\" alt=\"${alt}\" class=\"${className}\" style=\"${inlineStyle}\" />`;\r\n};\r\n\r\n/**\r\n * Enhanced HTML header with logo for grade reports\r\n * @param {object} reportData - Report information\r\n * @param {object} logoOptions - Logo styling options\r\n * @returns {string} Complete HTML header with logo\r\n */\r\nexport const generateReportHeader = (reportData, logoOptions = {}) => {\r\n  const {\r\n    title = 'Grade Report',\r\n    courseCode = '',\r\n    courseName = '',\r\n    section = '',\r\n    rubricTitle = 'Unnamed Rubric'\r\n  } = reportData;\r\n\r\n  const currentDate = new Date().toLocaleDateString('en-CA');\r\n  const currentTime = new Date().toLocaleTimeString('en-CA');\r\n  \r\n  const logoHtml = getLogoHtml({\r\n    className: 'report-logo',\r\n    maxHeight: 80,\r\n    style: 'margin-bottom: 10px;',\r\n    ...logoOptions\r\n  });\r\n\r\n  return `\r\n    <div class=\"header\" style=\"text-align: center; margin-bottom: 30px;\">\r\n      ${logoHtml}\r\n      <h1 style=\"color: #1e3a8a; margin: 10px 0; font-size: 24px;\">${title}</h1>\r\n      <div class=\"meta\" style=\"color: #666; font-size: 14px; line-height: 1.5;\">\r\n        ${courseCode ? `${courseCode} – ${courseName}` : courseName}<br>\r\n        ${section ? `Section: ${section}<br>` : ''}\r\n        ${rubricTitle ? `Rubric: ${rubricTitle}<br>` : ''}\r\n        Generated: ${currentDate} | ${currentTime}\r\n      </div>\r\n    </div>\r\n  `;\r\n};\r\n\r\n/**\r\n * Complete CSS styles for logo-enhanced reports\r\n * @returns {string} CSS styles including logo styling\r\n */\r\nexport const getReportStyles = () => {\r\n  return `\r\n    <style>\r\n      body { \r\n        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; \r\n        margin: 20px; \r\n        line-height: 1.6; \r\n        color: #333;\r\n      }\r\n      .header { \r\n        text-align: center; \r\n        margin-bottom: 30px; \r\n        padding-bottom: 20px; \r\n        border-bottom: 2px solid #e5e7eb;\r\n      }\r\n      .school-logo, .report-logo { \r\n        max-height: 80px; \r\n        max-width: 300px; \r\n        object-fit: contain; \r\n        margin-bottom: 10px;\r\n        display: block;\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n      }\r\n      .report-title { \r\n        color: #1e3a8a; \r\n        margin: 10px 0; \r\n        font-size: 24px;\r\n        font-weight: bold;\r\n      }\r\n      .meta { \r\n        color: #666; \r\n        font-size: 14px; \r\n        line-height: 1.5;\r\n      }\r\n      .table-container { \r\n        overflow-x: auto; \r\n        margin: 20px 0;\r\n      }\r\n      table { \r\n        width: 100%; \r\n        border-collapse: collapse; \r\n        margin-top: 20px;\r\n        box-shadow: 0 1px 3px rgba(0,0,0,0.1);\r\n      }\r\n      th, td { \r\n        border: 1px solid #d1d5db; \r\n        padding: 12px 8px; \r\n        text-align: left; \r\n      }\r\n      th { \r\n        background-color: #f9fafb; \r\n        font-weight: 600;\r\n        color: #374151;\r\n      }\r\n      tr:nth-child(even) { \r\n        background-color: #f9fafb; \r\n      }\r\n      tr:hover { \r\n        background-color: #f3f4f6; \r\n      }\r\n      .footer { \r\n        text-align: center; \r\n        color: #666; \r\n        margin-top: 30px; \r\n        padding-top: 20px;\r\n        border-top: 1px solid #e5e7eb;\r\n        font-size: 12px;\r\n      }\r\n      @media print { \r\n        body { background: white; }\r\n        .table-container { overflow-x: visible; }\r\n        .school-logo, .report-logo { \r\n          max-height: 60px; \r\n          break-inside: avoid;\r\n        }\r\n      }\r\n    </style>\r\n  `;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}