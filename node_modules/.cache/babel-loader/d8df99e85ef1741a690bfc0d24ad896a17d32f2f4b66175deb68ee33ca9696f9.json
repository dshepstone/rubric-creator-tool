{"ast":null,"code":"var _jsxFileName = \"C:\\\\local clones\\\\rubric-creation-app\\\\src\\\\components\\\\SharedContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// Updated SharedContext.js with Enhanced Draft/Final Grade Management\nimport React, { createContext, useContext, useState, useCallback, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssessmentContext = /*#__PURE__*/createContext();\nexport const useAssessment = () => {\n  _s();\n  const context = useContext(AssessmentContext);\n  if (!context) {\n    throw new Error('useAssessment must be used within AssessmentProvider');\n  }\n  return context;\n};\n_s(useAssessment, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AssessmentProvider = ({\n  children\n}) => {\n  _s2();\n  // Shared rubric state\n  const [sharedRubric, setSharedRubric] = useState(null);\n  const [sharedCourseDetails, setSharedCourseDetails] = useState(null);\n  const [activeTab, setActiveTab] = useState('rubric-creator');\n\n  // Class list and student management\n  const [classList, setClassList] = useState(null);\n  const [currentStudent, setCurrentStudent] = useState(null);\n\n  // ENHANCED: Separate storage for draft and final grades\n  const [drafts, setDrafts] = useState({});\n  const [finalGrades, setFinalGrades] = useState({});\n\n  // Batch grading session state\n  const [gradingSession, setGradingSession] = useState({\n    active: false,\n    startTime: null,\n    gradedStudents: [],\n    totalStudents: 0,\n    currentStudent: null,\n    currentStudentIndex: 0\n  });\n\n  // Form data states\n  const [gradingFormData, setGradingFormData] = useState({\n    student: {\n      name: '',\n      id: '',\n      email: ''\n    },\n    course: {\n      code: '',\n      name: '',\n      instructor: '',\n      term: ''\n    },\n    assignment: {\n      name: '',\n      dueDate: '',\n      maxPoints: 100\n    },\n    feedback: {\n      general: '',\n      strengths: '',\n      improvements: ''\n    },\n    attachments: [],\n    videoLinks: [],\n    latePolicy: {\n      level: 'none',\n      penaltyApplied: false\n    },\n    rubricGrading: {},\n    metadata: {\n      gradedBy: '',\n      gradedDate: '',\n      aiAssisted: false,\n      rubricIntegrated: false\n    }\n  });\n  const [rubricFormData, setRubricFormData] = useState({\n    assignmentInfo: {\n      title: '',\n      description: '',\n      weight: 25,\n      passingThreshold: 60,\n      totalPoints: 100\n    },\n    rubricLevels: [{\n      level: 'incomplete',\n      name: 'Incomplete',\n      description: 'No submission or unusable',\n      color: '#95a5a6',\n      multiplier: 0\n    }, {\n      level: 'unacceptable',\n      name: 'Unacceptable',\n      description: 'Below minimum standards',\n      color: '#e74c3c',\n      multiplier: 0.3\n    }, {\n      level: 'developing',\n      name: 'Developing',\n      description: 'Approaching standards',\n      color: '#f39c12',\n      multiplier: 0.55\n    }, {\n      level: 'acceptable',\n      name: 'Acceptable (PASS)',\n      description: 'Meets minimum standards',\n      color: '#27ae60',\n      multiplier: 0.7\n    }, {\n      level: 'emerging',\n      name: 'Emerging',\n      description: 'Above standard expectations',\n      color: '#2980b9',\n      multiplier: 0.82\n    }, {\n      level: 'accomplished',\n      name: 'Accomplished',\n      description: 'Strong professional quality',\n      color: '#16a085',\n      multiplier: 0.92\n    }, {\n      level: 'exceptional',\n      name: 'Exceptional',\n      description: 'Outstanding professional quality',\n      color: '#8e44ad',\n      multiplier: 1.0\n    }],\n    criteria: [{\n      id: 'criterion-1',\n      name: '',\n      description: '',\n      maxPoints: 20,\n      weight: 20,\n      levels: {},\n      feedbackLibrary: {\n        strengths: [],\n        improvements: [],\n        general: []\n      }\n    }],\n    pointingSystem: 'multiplier',\n    reversedOrder: false,\n    expandedFeedback: {},\n    modalEdit: {\n      show: false,\n      content: '',\n      field: null,\n      onSave: null\n    }\n  });\n\n  // Form update functions\n  const updateStudentInfo = useCallback(studentInfo => {\n    setGradingFormData(prev => ({\n      ...prev,\n      student: {\n        ...prev.student,\n        ...studentInfo\n      }\n    }));\n  }, []);\n  const updateCourseInfo = useCallback(courseInfo => {\n    setGradingFormData(prev => ({\n      ...prev,\n      course: {\n        ...prev.course,\n        ...courseInfo\n      }\n    }));\n  }, []);\n  const updateAssignmentInfo = useCallback(assignmentInfo => {\n    setGradingFormData(prev => ({\n      ...prev,\n      assignment: {\n        ...prev.assignment,\n        ...assignmentInfo\n      }\n    }));\n  }, []);\n  const updateFeedbackInfo = useCallback(feedbackInfo => {\n    setGradingFormData(prev => ({\n      ...prev,\n      feedback: {\n        ...prev.feedback,\n        ...feedbackInfo\n      }\n    }));\n  }, []);\n  const updateAttachments = useCallback(attachments => {\n    setGradingFormData(prev => ({\n      ...prev,\n      attachments\n    }));\n  }, []);\n  const updateVideoLinks = useCallback(videoLinks => {\n    setGradingFormData(prev => ({\n      ...prev,\n      videoLinks\n    }));\n  }, []);\n  const updateLatePolicyInfo = useCallback(latePolicyInfo => {\n    setGradingFormData(prev => ({\n      ...prev,\n      latePolicy: {\n        ...prev.latePolicy,\n        ...latePolicyInfo\n      }\n    }));\n  }, []);\n  const updateRubricGrading = useCallback(rubricGrading => {\n    setGradingFormData(prev => ({\n      ...prev,\n      rubricGrading\n    }));\n  }, []);\n  const updateMetadata = useCallback(metadata => {\n    setGradingFormData(prev => ({\n      ...prev,\n      metadata: {\n        ...prev.metadata,\n        ...metadata\n      }\n    }));\n  }, []);\n\n  // ENHANCED: Draft and Final Grade Management\n  const saveDraft = useCallback((studentId, gradingData) => {\n    const draftData = {\n      ...gradingData,\n      metadata: {\n        ...gradingData.metadata,\n        savedAt: new Date().toISOString(),\n        status: 'draft'\n      }\n    };\n    setDrafts(prev => ({\n      ...prev,\n      [studentId]: draftData\n    }));\n    console.log('✅ Draft saved for student:', studentId);\n    return true;\n  }, []);\n  const hasDraft = useCallback(studentId => {\n    return drafts[studentId] !== undefined;\n  }, [drafts]);\n  const loadDraft = useCallback(studentId => {\n    const draft = drafts[studentId];\n    if (draft) {\n      console.log('📝 Draft loaded for student:', studentId);\n      return draft;\n    }\n    console.log('⚠️ No draft found for student:', studentId);\n    return null;\n  }, [drafts]);\n  const saveFinalGrade = useCallback((studentId, data) => {\n    console.log('✅ Saving final grade for student:', studentId);\n    setFinalGrades(prev => ({\n      ...prev,\n      [studentId]: data\n    }));\n\n    // Remove from drafts once finalized\n    setDrafts(prev => {\n      const updated = {\n        ...prev\n      };\n      delete updated[studentId];\n      return updated;\n    });\n\n    // Update class list progress\n    if (classList) {\n      const studentIndex = classList.students.findIndex(s => s.id === studentId);\n      if (studentIndex >= 0) {\n        const updatedProgress = [...classList.gradingProgress];\n        updatedProgress[studentIndex] = {\n          ...updatedProgress[studentIndex],\n          status: 'completed_final',\n          lastModified: new Date().toISOString(),\n          gradeType: 'final'\n        };\n        setClassList(prev => ({\n          ...prev,\n          gradingProgress: updatedProgress\n        }));\n      }\n    }\n  }, [classList, setDrafts, setClassList]);\n  const loadFinalGrade = useCallback(studentId => {\n    return finalGrades[studentId] || null;\n  }, [finalGrades]);\n  const getGradeStatus = useCallback(studentId => {\n    if (finalGrades[studentId]) return 'final';\n    if (drafts[studentId]) return 'draft';\n    return 'not_started';\n  }, [finalGrades, drafts]);\n\n  // Navigation helpers for grading sessions\n  const nextStudentInSession = useCallback((saveType = 'draft') => {\n    if (!(gradingSession !== null && gradingSession !== void 0 && gradingSession.active) || !classList) return false;\n    const currentIndex = gradingSession.currentStudentIndex;\n    const students = classList.students;\n    if (currentIndex < students.length - 1) {\n      const nextIndex = currentIndex + 1;\n      const nextStudent = students[nextIndex];\n      setGradingSession(prev => ({\n        ...prev,\n        currentStudentIndex: nextIndex,\n        currentStudent: nextStudent,\n        gradedStudents: [...prev.gradedStudents, currentStudent.id]\n      }));\n      setCurrentStudent(nextStudent);\n      return true;\n    }\n\n    // End of session\n    setGradingSession(prev => ({\n      ...prev,\n      active: false,\n      gradedStudents: [...prev.gradedStudents, currentStudent.id]\n    }));\n    return false;\n  }, [gradingSession, classList, currentStudent]);\n  const previousStudentInSession = useCallback(() => {\n    if (!(gradingSession !== null && gradingSession !== void 0 && gradingSession.active) || !classList) return false;\n    const currentIndex = gradingSession.currentStudentIndex;\n    if (currentIndex > 0) {\n      const prevIndex = currentIndex - 1;\n      const prevStudent = classList.students[prevIndex];\n      setGradingSession(prev => ({\n        ...prev,\n        currentStudentIndex: prevIndex,\n        currentStudent: prevStudent\n      }));\n      setCurrentStudent(prevStudent);\n      return true;\n    }\n    return false;\n  }, [gradingSession, classList]);\n\n  // **FIXED `initializeGradingSession`**\n  const initializeGradingSession = useCallback(classListData => {\n    if (!classListData || !classListData.students.length) {\n      return false;\n    }\n    const firstStudent = classListData.students[0];\n    const session = {\n      active: true,\n      startTime: new Date().toISOString(),\n      gradedStudents: [],\n      totalStudents: classListData.students.length,\n      currentStudent: firstStudent,\n      currentStudentIndex: 0\n    };\n    setGradingSession(session);\n    setCurrentStudent(firstStudent);\n\n    // **FIX:** Load first student AND CURRENT COURSE DETAILS into the grading form\n    setGradingFormData(prev => ({\n      ...prev,\n      student: {\n        name: firstStudent.name,\n        id: firstStudent.id,\n        email: firstStudent.email\n      },\n      // Pull the course info from the existing shared state\n      course: (sharedCourseDetails === null || sharedCourseDetails === void 0 ? void 0 : sharedCourseDetails.course) || prev.course,\n      assignment: (sharedCourseDetails === null || sharedCourseDetails === void 0 ? void 0 : sharedCourseDetails.assignment) || prev.assignment\n    }));\n    console.log('🚀 Grading session started for', classListData.students.length, 'students');\n    return true;\n  }, [sharedCourseDetails]); // **FIX:** Added sharedCourseDetails as a dependency\n\n  // Update grading session\n  const updateGradingSession = useCallback(updates => {\n    setGradingSession(prev => ({\n      ...prev,\n      ...updates\n    }));\n  }, []);\n\n  // Rubric management functions\n  const transferRubricToGrading = useCallback(() => {\n    if (rubricFormData) {\n      setSharedRubric(rubricFormData);\n      setActiveTab('grading-tool');\n    }\n  }, [rubricFormData]);\n  const transferRubricToGradingWithDetails = useCallback(details => {\n    if (rubricFormData) {\n      setSharedRubric(rubricFormData);\n      setSharedCourseDetails(details);\n      setActiveTab('grading-tool');\n    }\n  }, [rubricFormData]);\n\n  // Clear functions\n  const clearSharedRubric = useCallback(() => {\n    setSharedRubric(null);\n  }, []);\n  const clearGradingFormData = useCallback(() => {\n    setGradingFormData({\n      student: {\n        name: '',\n        id: '',\n        email: ''\n      },\n      course: {\n        code: '',\n        name: '',\n        instructor: '',\n        term: ''\n      },\n      assignment: {\n        name: '',\n        dueDate: '',\n        maxPoints: 100\n      },\n      feedback: {\n        general: '',\n        strengths: '',\n        improvements: ''\n      },\n      attachments: [],\n      videoLinks: [],\n      latePolicy: {\n        level: 'none',\n        penaltyApplied: false\n      },\n      rubricGrading: {},\n      metadata: {\n        gradedBy: '',\n        gradedDate: '',\n        aiAssisted: false,\n        rubricIntegrated: false\n      }\n    });\n  }, []);\n  const clearRubricFormData = useCallback(() => {\n    setRubricFormData({\n      assignmentInfo: {\n        title: '',\n        description: '',\n        weight: 25,\n        passingThreshold: 60,\n        totalPoints: 100\n      },\n      rubricLevels: [{\n        level: 'incomplete',\n        name: 'Incomplete',\n        description: 'No submission or unusable',\n        color: '#95a5a6',\n        multiplier: 0\n      }, {\n        level: 'unacceptable',\n        name: 'Unacceptable',\n        description: 'Below minimum standards',\n        color: '#e74c3c',\n        multiplier: 0.3\n      }, {\n        level: 'developing',\n        name: 'Developing',\n        description: 'Approaching standards',\n        color: '#f39c12',\n        multiplier: 0.55\n      }, {\n        level: 'acceptable',\n        name: 'Acceptable (PASS)',\n        description: 'Meets minimum standards',\n        color: '#27ae60',\n        multiplier: 0.7\n      }, {\n        level: 'emerging',\n        name: 'Emerging',\n        description: 'Above standard expectations',\n        color: '#2980b9',\n        multiplier: 0.82\n      }, {\n        level: 'accomplished',\n        name: 'Accomplished',\n        description: 'Strong professional quality',\n        color: '#16a085',\n        multiplier: 0.92\n      }, {\n        level: 'exceptional',\n        name: 'Exceptional',\n        description: 'Outstanding professional quality',\n        color: '#8e44ad',\n        multiplier: 1.0\n      }],\n      criteria: [{\n        id: 'criterion-1',\n        name: '',\n        description: '',\n        maxPoints: 20,\n        weight: 20,\n        levels: {},\n        feedbackLibrary: {\n          strengths: [],\n          improvements: [],\n          general: []\n        }\n      }],\n      pointingSystem: 'multiplier',\n      reversedOrder: false,\n      expandedFeedback: {},\n      modalEdit: {\n        show: false,\n        content: '',\n        field: null,\n        onSave: null\n      }\n    });\n  }, []);\n\n  // Finalize a draft grade\n  const finalizeGrade = useCallback(studentId => {\n    const draftData = drafts[studentId];\n    if (draftData) {\n      saveFinalGrade(studentId, draftData);\n      console.log('🎯 Finalized draft for student:', studentId);\n    }\n  }, [drafts, saveFinalGrade]);\n\n  // Unlock a final grade (convert back to draft)\n  const unlockGrade = useCallback(studentId => {\n    const finalData = finalGrades[studentId];\n    if (finalData) {\n      // Move from final back to draft\n      setDrafts(prev => ({\n        ...prev,\n        [studentId]: finalData\n      }));\n      setFinalGrades(prev => {\n        const updated = {\n          ...prev\n        };\n        delete updated[studentId];\n        return updated;\n      });\n\n      // Update class list progress\n      if (classList) {\n        const studentIndex = classList.students.findIndex(s => s.id === studentId);\n        if (studentIndex >= 0) {\n          const updatedProgress = [...classList.gradingProgress];\n          updatedProgress[studentIndex] = {\n            ...updatedProgress[studentIndex],\n            status: 'completed_draft',\n            lastModified: new Date().toISOString(),\n            gradeType: 'draft'\n          };\n          setClassList(prev => ({\n            ...prev,\n            gradingProgress: updatedProgress\n          }));\n        }\n      }\n      console.log('🔓 Unlocked final grade for student:', studentId);\n    }\n  }, [finalGrades, setDrafts, setFinalGrades, classList, setClassList]);\n  const clearAllData = useCallback(() => {\n    setSharedRubric(null);\n    clearGradingFormData();\n    clearRubricFormData();\n  }, [clearGradingFormData, clearRubricFormData]);\n  const persistentFormData = gradingData;\n  const updatePersistentFormData = setGradingData;\n  const value = {\n    // Shared state\n    sharedRubric,\n    setSharedRubric,\n    sharedCourseDetails,\n    setSharedCourseDetails,\n    // Navigation\n    activeTab,\n    setActiveTab,\n    // Grading form data\n    gradingData: gradingFormData,\n    setGradingData: setGradingFormData,\n    updateStudentInfo,\n    updateCourseInfo,\n    updateAssignmentInfo,\n    updateFeedbackInfo,\n    updateAttachments,\n    updateVideoLinks,\n    updateLatePolicyInfo,\n    updateRubricGrading,\n    updateMetadata,\n    // Draft and Final Grade Management - ENHANCED\n    drafts,\n    finalGrades,\n    // ← ADD THIS\n    saveDraft,\n    loadDraft,\n    saveFinalGrade,\n    // ← ADD THIS\n    loadFinalGrade,\n    // ← ADD THIS\n    getGradeStatus,\n    // ← ADD THIS\n    hasDraft,\n    finalizeGrade,\n    unlockGrade,\n    // Class management\n    classList,\n    setClassList,\n    currentStudent,\n    setCurrentStudent,\n    // Grading session\n    gradingSession,\n    setGradingSession,\n    nextStudentInSession,\n    previousStudentInSession,\n    updateGradingSession,\n    initializeGradingSession,\n    // Rubric form data\n    rubricFormData,\n    setRubricFormData,\n    // Utility functions\n    transferRubricToGrading,\n    transferRubricToGradingWithDetails,\n    clearSharedRubric,\n    clearGradingFormData,\n    clearRubricFormData,\n    clearAllData,\n    // Legacy compatibility\n    persistentFormData,\n    updatePersistentFormData\n  };\n  return /*#__PURE__*/_jsxDEV(AssessmentContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 527,\n    columnNumber: 9\n  }, this);\n};\n_s2(AssessmentProvider, \"SQmkWCQvIvzk/XxjW/QPc1hyF+c=\");\n_c = AssessmentProvider;\nvar _c;\n$RefreshReg$(_c, \"AssessmentProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","useEffect","jsxDEV","_jsxDEV","AssessmentContext","useAssessment","_s","context","Error","AssessmentProvider","children","_s2","sharedRubric","setSharedRubric","sharedCourseDetails","setSharedCourseDetails","activeTab","setActiveTab","classList","setClassList","currentStudent","setCurrentStudent","drafts","setDrafts","finalGrades","setFinalGrades","gradingSession","setGradingSession","active","startTime","gradedStudents","totalStudents","currentStudentIndex","gradingFormData","setGradingFormData","student","name","id","email","course","code","instructor","term","assignment","dueDate","maxPoints","feedback","general","strengths","improvements","attachments","videoLinks","latePolicy","level","penaltyApplied","rubricGrading","metadata","gradedBy","gradedDate","aiAssisted","rubricIntegrated","rubricFormData","setRubricFormData","assignmentInfo","title","description","weight","passingThreshold","totalPoints","rubricLevels","color","multiplier","criteria","levels","feedbackLibrary","pointingSystem","reversedOrder","expandedFeedback","modalEdit","show","content","field","onSave","updateStudentInfo","studentInfo","prev","updateCourseInfo","courseInfo","updateAssignmentInfo","updateFeedbackInfo","feedbackInfo","updateAttachments","updateVideoLinks","updateLatePolicyInfo","latePolicyInfo","updateRubricGrading","updateMetadata","saveDraft","studentId","gradingData","draftData","savedAt","Date","toISOString","status","console","log","hasDraft","undefined","loadDraft","draft","saveFinalGrade","data","updated","studentIndex","students","findIndex","s","updatedProgress","gradingProgress","lastModified","gradeType","loadFinalGrade","getGradeStatus","nextStudentInSession","saveType","currentIndex","length","nextIndex","nextStudent","previousStudentInSession","prevIndex","prevStudent","initializeGradingSession","classListData","firstStudent","session","updateGradingSession","updates","transferRubricToGrading","transferRubricToGradingWithDetails","details","clearSharedRubric","clearGradingFormData","clearRubricFormData","finalizeGrade","unlockGrade","finalData","clearAllData","persistentFormData","updatePersistentFormData","setGradingData","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/local clones/rubric-creation-app/src/components/SharedContext.js"],"sourcesContent":["// Updated SharedContext.js with Enhanced Draft/Final Grade Management\r\nimport React, { createContext, useContext, useState, useCallback, useEffect } from 'react';\r\n\r\nconst AssessmentContext = createContext();\r\n\r\nexport const useAssessment = () => {\r\n    const context = useContext(AssessmentContext);\r\n    if (!context) {\r\n        throw new Error('useAssessment must be used within AssessmentProvider');\r\n    }\r\n    return context;\r\n};\r\n\r\nexport const AssessmentProvider = ({ children }) => {\r\n    // Shared rubric state\r\n    const [sharedRubric, setSharedRubric] = useState(null);\r\n    const [sharedCourseDetails, setSharedCourseDetails] = useState(null);\r\n    const [activeTab, setActiveTab] = useState('rubric-creator');\r\n\r\n    // Class list and student management\r\n    const [classList, setClassList] = useState(null);\r\n    const [currentStudent, setCurrentStudent] = useState(null);\r\n\r\n    // ENHANCED: Separate storage for draft and final grades\r\n    const [drafts, setDrafts] = useState({});\r\n    const [finalGrades, setFinalGrades] = useState({});\r\n\r\n    // Batch grading session state\r\n    const [gradingSession, setGradingSession] = useState({\r\n        active: false,\r\n        startTime: null,\r\n        gradedStudents: [],\r\n        totalStudents: 0,\r\n        currentStudent: null,\r\n        currentStudentIndex: 0\r\n    });\r\n\r\n    // Form data states\r\n    const [gradingFormData, setGradingFormData] = useState({\r\n        student: { name: '', id: '', email: '' },\r\n        course: { code: '', name: '', instructor: '', term: '' },\r\n        assignment: { name: '', dueDate: '', maxPoints: 100 },\r\n        feedback: { general: '', strengths: '', improvements: '' },\r\n        attachments: [],\r\n        videoLinks: [],\r\n        latePolicy: { level: 'none', penaltyApplied: false },\r\n        rubricGrading: {},\r\n        metadata: {\r\n            gradedBy: '',\r\n            gradedDate: '',\r\n            aiAssisted: false,\r\n            rubricIntegrated: false\r\n        }\r\n    });\r\n\r\n    const [rubricFormData, setRubricFormData] = useState({\r\n        assignmentInfo: {\r\n            title: '',\r\n            description: '',\r\n            weight: 25,\r\n            passingThreshold: 60,\r\n            totalPoints: 100\r\n        },\r\n        rubricLevels: [\r\n            { level: 'incomplete', name: 'Incomplete', description: 'No submission or unusable', color: '#95a5a6', multiplier: 0 },\r\n            { level: 'unacceptable', name: 'Unacceptable', description: 'Below minimum standards', color: '#e74c3c', multiplier: 0.3 },\r\n            { level: 'developing', name: 'Developing', description: 'Approaching standards', color: '#f39c12', multiplier: 0.55 },\r\n            { level: 'acceptable', name: 'Acceptable (PASS)', description: 'Meets minimum standards', color: '#27ae60', multiplier: 0.7 },\r\n            { level: 'emerging', name: 'Emerging', description: 'Above standard expectations', color: '#2980b9', multiplier: 0.82 },\r\n            { level: 'accomplished', name: 'Accomplished', description: 'Strong professional quality', color: '#16a085', multiplier: 0.92 },\r\n            { level: 'exceptional', name: 'Exceptional', description: 'Outstanding professional quality', color: '#8e44ad', multiplier: 1.0 }\r\n        ],\r\n        criteria: [\r\n            {\r\n                id: 'criterion-1',\r\n                name: '',\r\n                description: '',\r\n                maxPoints: 20,\r\n                weight: 20,\r\n                levels: {},\r\n                feedbackLibrary: {\r\n                    strengths: [],\r\n                    improvements: [],\r\n                    general: []\r\n                }\r\n            }\r\n        ],\r\n        pointingSystem: 'multiplier',\r\n        reversedOrder: false,\r\n        expandedFeedback: {},\r\n        modalEdit: { show: false, content: '', field: null, onSave: null }\r\n    });\r\n\r\n    // Form update functions\r\n    const updateStudentInfo = useCallback((studentInfo) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            student: { ...prev.student, ...studentInfo }\r\n        }));\r\n    }, []);\r\n\r\n    const updateCourseInfo = useCallback((courseInfo) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            course: { ...prev.course, ...courseInfo }\r\n        }));\r\n    }, []);\r\n\r\n    const updateAssignmentInfo = useCallback((assignmentInfo) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            assignment: { ...prev.assignment, ...assignmentInfo }\r\n        }));\r\n    }, []);\r\n\r\n    const updateFeedbackInfo = useCallback((feedbackInfo) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            feedback: { ...prev.feedback, ...feedbackInfo }\r\n        }));\r\n    }, []);\r\n\r\n    const updateAttachments = useCallback((attachments) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            attachments\r\n        }));\r\n    }, []);\r\n\r\n    const updateVideoLinks = useCallback((videoLinks) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            videoLinks\r\n        }));\r\n    }, []);\r\n\r\n    const updateLatePolicyInfo = useCallback((latePolicyInfo) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            latePolicy: { ...prev.latePolicy, ...latePolicyInfo }\r\n        }));\r\n    }, []);\r\n\r\n    const updateRubricGrading = useCallback((rubricGrading) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            rubricGrading\r\n        }));\r\n    }, []);\r\n\r\n    const updateMetadata = useCallback((metadata) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            metadata: { ...prev.metadata, ...metadata }\r\n        }));\r\n    }, []);\r\n\r\n    // ENHANCED: Draft and Final Grade Management\r\n    const saveDraft = useCallback((studentId, gradingData) => {\r\n        const draftData = {\r\n            ...gradingData,\r\n            metadata: {\r\n                ...gradingData.metadata,\r\n                savedAt: new Date().toISOString(),\r\n                status: 'draft'\r\n            }\r\n        };\r\n\r\n        setDrafts(prev => ({\r\n            ...prev,\r\n            [studentId]: draftData\r\n        }));\r\n\r\n        console.log('✅ Draft saved for student:', studentId);\r\n        return true;\r\n    }, []);\r\n\r\n    const hasDraft = useCallback((studentId) => {\r\n        return drafts[studentId] !== undefined;\r\n    }, [drafts]);\r\n\r\n    const loadDraft = useCallback((studentId) => {\r\n        const draft = drafts[studentId];\r\n        if (draft) {\r\n            console.log('📝 Draft loaded for student:', studentId);\r\n            return draft;\r\n        }\r\n        console.log('⚠️ No draft found for student:', studentId);\r\n        return null;\r\n    }, [drafts]);\r\n\r\n    const saveFinalGrade = useCallback((studentId, data) => {\r\n        console.log('✅ Saving final grade for student:', studentId);\r\n        setFinalGrades(prev => ({ ...prev, [studentId]: data }));\r\n\r\n        // Remove from drafts once finalized\r\n        setDrafts(prev => {\r\n            const updated = { ...prev };\r\n            delete updated[studentId];\r\n            return updated;\r\n        });\r\n\r\n        // Update class list progress\r\n        if (classList) {\r\n            const studentIndex = classList.students.findIndex(s => s.id === studentId);\r\n            if (studentIndex >= 0) {\r\n                const updatedProgress = [...classList.gradingProgress];\r\n                updatedProgress[studentIndex] = {\r\n                    ...updatedProgress[studentIndex],\r\n                    status: 'completed_final',\r\n                    lastModified: new Date().toISOString(),\r\n                    gradeType: 'final'\r\n                };\r\n                setClassList(prev => ({\r\n                    ...prev,\r\n                    gradingProgress: updatedProgress\r\n                }));\r\n            }\r\n        }\r\n    }, [classList, setDrafts, setClassList]);\r\n\r\n    const loadFinalGrade = useCallback((studentId) => {\r\n        return finalGrades[studentId] || null;\r\n    }, [finalGrades]);\r\n\r\n    const getGradeStatus = useCallback((studentId) => {\r\n        if (finalGrades[studentId]) return 'final';\r\n        if (drafts[studentId]) return 'draft';\r\n        return 'not_started';\r\n    }, [finalGrades, drafts]);\r\n\r\n    // Navigation helpers for grading sessions\r\n    const nextStudentInSession = useCallback((saveType = 'draft') => {\r\n        if (!gradingSession?.active || !classList) return false;\r\n\r\n        const currentIndex = gradingSession.currentStudentIndex;\r\n        const students = classList.students;\r\n\r\n        if (currentIndex < students.length - 1) {\r\n            const nextIndex = currentIndex + 1;\r\n            const nextStudent = students[nextIndex];\r\n\r\n            setGradingSession(prev => ({\r\n                ...prev,\r\n                currentStudentIndex: nextIndex,\r\n                currentStudent: nextStudent,\r\n                gradedStudents: [...prev.gradedStudents, currentStudent.id]\r\n            }));\r\n\r\n            setCurrentStudent(nextStudent);\r\n            return true;\r\n        }\r\n\r\n        // End of session\r\n        setGradingSession(prev => ({\r\n            ...prev,\r\n            active: false,\r\n            gradedStudents: [...prev.gradedStudents, currentStudent.id]\r\n        }));\r\n        return false;\r\n    }, [gradingSession, classList, currentStudent]);\r\n\r\n    const previousStudentInSession = useCallback(() => {\r\n        if (!gradingSession?.active || !classList) return false;\r\n\r\n        const currentIndex = gradingSession.currentStudentIndex;\r\n        if (currentIndex > 0) {\r\n            const prevIndex = currentIndex - 1;\r\n            const prevStudent = classList.students[prevIndex];\r\n\r\n            setGradingSession(prev => ({\r\n                ...prev,\r\n                currentStudentIndex: prevIndex,\r\n                currentStudent: prevStudent\r\n            }));\r\n\r\n            setCurrentStudent(prevStudent);\r\n            return true;\r\n        }\r\n        return false;\r\n    }, [gradingSession, classList]);\r\n\r\n    // **FIXED `initializeGradingSession`**\r\n    const initializeGradingSession = useCallback((classListData) => {\r\n        if (!classListData || !classListData.students.length) {\r\n            return false;\r\n        }\r\n\r\n        const firstStudent = classListData.students[0];\r\n        const session = {\r\n            active: true,\r\n            startTime: new Date().toISOString(),\r\n            gradedStudents: [],\r\n            totalStudents: classListData.students.length,\r\n            currentStudent: firstStudent,\r\n            currentStudentIndex: 0\r\n        };\r\n\r\n        setGradingSession(session);\r\n        setCurrentStudent(firstStudent);\r\n\r\n        // **FIX:** Load first student AND CURRENT COURSE DETAILS into the grading form\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            student: {\r\n                name: firstStudent.name,\r\n                id: firstStudent.id,\r\n                email: firstStudent.email\r\n            },\r\n            // Pull the course info from the existing shared state\r\n            course: sharedCourseDetails?.course || prev.course,\r\n            assignment: sharedCourseDetails?.assignment || prev.assignment,\r\n        }));\r\n\r\n        console.log('🚀 Grading session started for', classListData.students.length, 'students');\r\n        return true;\r\n    }, [sharedCourseDetails]); // **FIX:** Added sharedCourseDetails as a dependency\r\n\r\n    // Update grading session\r\n    const updateGradingSession = useCallback((updates) => {\r\n        setGradingSession(prev => ({\r\n            ...prev,\r\n            ...updates\r\n        }));\r\n    }, []);\r\n\r\n    // Rubric management functions\r\n    const transferRubricToGrading = useCallback(() => {\r\n        if (rubricFormData) {\r\n            setSharedRubric(rubricFormData);\r\n            setActiveTab('grading-tool');\r\n        }\r\n    }, [rubricFormData]);\r\n\r\n    const transferRubricToGradingWithDetails = useCallback((details) => {\r\n        if (rubricFormData) {\r\n            setSharedRubric(rubricFormData);\r\n            setSharedCourseDetails(details);\r\n            setActiveTab('grading-tool');\r\n        }\r\n    }, [rubricFormData]);\r\n\r\n    // Clear functions\r\n    const clearSharedRubric = useCallback(() => {\r\n        setSharedRubric(null);\r\n    }, []);\r\n\r\n    const clearGradingFormData = useCallback(() => {\r\n        setGradingFormData({\r\n            student: { name: '', id: '', email: '' },\r\n            course: { code: '', name: '', instructor: '', term: '' },\r\n            assignment: { name: '', dueDate: '', maxPoints: 100 },\r\n            feedback: { general: '', strengths: '', improvements: '' },\r\n            attachments: [],\r\n            videoLinks: [],\r\n            latePolicy: { level: 'none', penaltyApplied: false },\r\n            rubricGrading: {},\r\n            metadata: {\r\n                gradedBy: '',\r\n                gradedDate: '',\r\n                aiAssisted: false,\r\n                rubricIntegrated: false\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const clearRubricFormData = useCallback(() => {\r\n        setRubricFormData({\r\n            assignmentInfo: {\r\n                title: '',\r\n                description: '',\r\n                weight: 25,\r\n                passingThreshold: 60,\r\n                totalPoints: 100\r\n            },\r\n            rubricLevels: [\r\n                { level: 'incomplete', name: 'Incomplete', description: 'No submission or unusable', color: '#95a5a6', multiplier: 0 },\r\n                { level: 'unacceptable', name: 'Unacceptable', description: 'Below minimum standards', color: '#e74c3c', multiplier: 0.3 },\r\n                { level: 'developing', name: 'Developing', description: 'Approaching standards', color: '#f39c12', multiplier: 0.55 },\r\n                { level: 'acceptable', name: 'Acceptable (PASS)', description: 'Meets minimum standards', color: '#27ae60', multiplier: 0.7 },\r\n                { level: 'emerging', name: 'Emerging', description: 'Above standard expectations', color: '#2980b9', multiplier: 0.82 },\r\n                { level: 'accomplished', name: 'Accomplished', description: 'Strong professional quality', color: '#16a085', multiplier: 0.92 },\r\n                { level: 'exceptional', name: 'Exceptional', description: 'Outstanding professional quality', color: '#8e44ad', multiplier: 1.0 }\r\n            ],\r\n            criteria: [\r\n                {\r\n                    id: 'criterion-1',\r\n                    name: '',\r\n                    description: '',\r\n                    maxPoints: 20,\r\n                    weight: 20,\r\n                    levels: {},\r\n                    feedbackLibrary: {\r\n                        strengths: [],\r\n                        improvements: [],\r\n                        general: []\r\n                    }\r\n                }\r\n            ],\r\n            pointingSystem: 'multiplier',\r\n            reversedOrder: false,\r\n            expandedFeedback: {},\r\n            modalEdit: { show: false, content: '', field: null, onSave: null }\r\n        });\r\n    }, []);\r\n\r\n    // Finalize a draft grade\r\n    const finalizeGrade = useCallback((studentId) => {\r\n        const draftData = drafts[studentId];\r\n        if (draftData) {\r\n            saveFinalGrade(studentId, draftData);\r\n            console.log('🎯 Finalized draft for student:', studentId);\r\n        }\r\n    }, [drafts, saveFinalGrade]);\r\n\r\n    // Unlock a final grade (convert back to draft)\r\n    const unlockGrade = useCallback((studentId) => {\r\n        const finalData = finalGrades[studentId];\r\n        if (finalData) {\r\n            // Move from final back to draft\r\n            setDrafts(prev => ({ ...prev, [studentId]: finalData }));\r\n            setFinalGrades(prev => {\r\n                const updated = { ...prev };\r\n                delete updated[studentId];\r\n                return updated;\r\n            });\r\n\r\n            // Update class list progress\r\n            if (classList) {\r\n                const studentIndex = classList.students.findIndex(s => s.id === studentId);\r\n                if (studentIndex >= 0) {\r\n                    const updatedProgress = [...classList.gradingProgress];\r\n                    updatedProgress[studentIndex] = {\r\n                        ...updatedProgress[studentIndex],\r\n                        status: 'completed_draft',\r\n                        lastModified: new Date().toISOString(),\r\n                        gradeType: 'draft'\r\n                    };\r\n                    setClassList(prev => ({\r\n                        ...prev,\r\n                        gradingProgress: updatedProgress\r\n                    }));\r\n                }\r\n            }\r\n\r\n            console.log('🔓 Unlocked final grade for student:', studentId);\r\n        }\r\n    }, [finalGrades, setDrafts, setFinalGrades, classList, setClassList]);\r\n\r\n    const clearAllData = useCallback(() => {\r\n        setSharedRubric(null);\r\n        clearGradingFormData();\r\n        clearRubricFormData();\r\n    }, [clearGradingFormData, clearRubricFormData]);\r\n\r\n    const persistentFormData = gradingData;\r\n    const updatePersistentFormData = setGradingData;\r\n\r\n    const value = {\r\n        // Shared state\r\n        sharedRubric,\r\n        setSharedRubric,\r\n        sharedCourseDetails,\r\n        setSharedCourseDetails,\r\n\r\n        // Navigation\r\n        activeTab,\r\n        setActiveTab,\r\n\r\n        // Grading form data\r\n        gradingData: gradingFormData,\r\n        setGradingData: setGradingFormData,\r\n        updateStudentInfo,\r\n        updateCourseInfo,\r\n        updateAssignmentInfo,\r\n        updateFeedbackInfo,\r\n        updateAttachments,\r\n        updateVideoLinks,\r\n        updateLatePolicyInfo,\r\n        updateRubricGrading,\r\n        updateMetadata,\r\n\r\n        // Draft and Final Grade Management - ENHANCED\r\n        drafts,\r\n        finalGrades,           // ← ADD THIS\r\n        saveDraft,\r\n        loadDraft,\r\n        saveFinalGrade,        // ← ADD THIS\r\n        loadFinalGrade,        // ← ADD THIS\r\n        getGradeStatus,        // ← ADD THIS\r\n        hasDraft,\r\n        finalizeGrade,\r\n        unlockGrade,\r\n\r\n        // Class management\r\n        classList,\r\n        setClassList,\r\n        currentStudent,\r\n        setCurrentStudent,\r\n\r\n        // Grading session\r\n        gradingSession,\r\n        setGradingSession,\r\n        nextStudentInSession,\r\n        previousStudentInSession,\r\n        updateGradingSession,\r\n        initializeGradingSession,\r\n\r\n        // Rubric form data\r\n        rubricFormData,\r\n        setRubricFormData,\r\n\r\n        // Utility functions\r\n        transferRubricToGrading,\r\n        transferRubricToGradingWithDetails,\r\n        clearSharedRubric,\r\n        clearGradingFormData,\r\n        clearRubricFormData,\r\n        clearAllData,\r\n\r\n        // Legacy compatibility\r\n        persistentFormData,\r\n        updatePersistentFormData\r\n    };\r\n\r\n    return (\r\n        <AssessmentContext.Provider value={value}>\r\n            {children}\r\n        </AssessmentContext.Provider>\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}