{"ast":null,"code":"var _jsxFileName = \"C:\\\\local clones\\\\rubric-creation-app\\\\src\\\\components\\\\SharedContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// Complete SharedContext.js - Fully Merged with ALL Original Features + Late Policy Enhancement\n// This version preserves EVERY function and feature from the original while adding late policy support\n\nimport React, { createContext, useContext, useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssessmentContext = /*#__PURE__*/createContext();\nexport const useAssessment = () => {\n  _s();\n  const context = useContext(AssessmentContext);\n  if (!context) {\n    throw new Error('useAssessment must be used within AssessmentProvider');\n  }\n  return context;\n};\n\n// DEFAULT LATE POLICY SYSTEM\n_s(useAssessment, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst DEFAULT_LATE_POLICY = {\n  id: 'institutional',\n  name: 'Institutional Policy',\n  description: 'Standard institutional late assignment policy',\n  levels: {\n    none: {\n      name: 'On Time',\n      multiplier: 1.0,\n      description: 'Assignment submitted on or before due date and time - marked out of 100%',\n      color: '#16a34a',\n      timeframe: 'On or before due date'\n    },\n    within24: {\n      name: '1-24 Hours Late',\n      multiplier: 0.8,\n      description: 'Assignment received within 24 hours of due date - 20% reduction (marked out of 80%)',\n      color: '#ea580c',\n      timeframe: 'Up to 24 hours late'\n    },\n    after24: {\n      name: 'More than 24 Hours Late',\n      multiplier: 0.0,\n      description: 'Assignment received after 24 hours from due date - mark of zero (0)',\n      color: '#dc2626',\n      timeframe: 'More than 24 hours late'\n    }\n  }\n};\nexport const AssessmentProvider = ({\n  children\n}) => {\n  _s2();\n  // ORIGINAL: Shared rubric state\n  const [sharedRubric, setSharedRubric] = useState(null);\n  const [sharedCourseDetails, setSharedCourseDetails] = useState(null);\n  const [activeTab, setActiveTab] = useState('assignment-prompt-generator');\n\n  // ORIGINAL: AI Prompt Generator state (for rubrics)\n  const [aiPromptFormData, setAIPromptFormData] = useState(null);\n\n  // ORIGINAL: Assignment Prompt Generator state\n  const [assignmentPromptFormData, setAssignmentPromptFormData] = useState(null);\n\n  // ORIGINAL: Class list and student management\n  const [classList, setClassList] = useState(null);\n  const [currentStudent, setCurrentStudent] = useState(null);\n\n  // ORIGINAL: Separate storage for draft and final grades\n  const [drafts, setDrafts] = useState({});\n  const [finalGrades, setFinalGrades] = useState({});\n\n  // NEW: Late Policy State Management\n  const [currentLatePolicy, setCurrentLatePolicy] = useState(DEFAULT_LATE_POLICY);\n  const [customLatePolicies, setCustomLatePolicies] = useState([]);\n\n  // ORIGINAL: Batch grading session state\n  const [gradingSession, setGradingSession] = useState({\n    active: false,\n    startTime: null,\n    gradedStudents: [],\n    totalStudents: 0,\n    currentStudent: null,\n    currentStudentIndex: 0\n  });\n\n  // ORIGINAL: Rubric form data state\n  const [rubricFormData, setRubricFormData] = useState({\n    course: {\n      code: '',\n      name: '',\n      instructor: '',\n      semester: '',\n      year: ''\n    },\n    assignment: {\n      title: '',\n      description: '',\n      dueDate: '',\n      totalPoints: 100,\n      passingThreshold: 70\n    },\n    criteria: []\n  });\n\n  // ENHANCED: Form data states with late policy support\n  const [gradingFormData, setGradingFormData] = useState({\n    student: {\n      name: '',\n      id: '',\n      email: ''\n    },\n    course: {\n      code: '',\n      name: '',\n      instructor: '',\n      semester: '',\n      year: ''\n    },\n    assignment: {\n      title: '',\n      description: '',\n      dueDate: '',\n      totalPoints: 100,\n      maxPoints: 100\n    },\n    rubricGrading: {},\n    feedback: {\n      strengths: '',\n      improvements: '',\n      general: ''\n    },\n    attachments: [],\n    videoLinks: [],\n    metadata: {\n      gradedBy: '',\n      gradedDate: '',\n      version: '1.0',\n      notes: ''\n    },\n    // NEW: Late policy integration\n    latePolicy: {\n      level: 'none',\n      penaltyApplied: false,\n      policyId: null,\n      originalScore: null,\n      adjustedScore: null,\n      multiplier: 1.0\n    }\n  });\n\n  // ORIGINAL: AI Prompt form data update function\n  const updateAIPromptFormData = useCallback((field, value) => {\n    setAIPromptFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  }, []);\n\n  // ORIGINAL: Initialize AI prompt form data\n  const initializeAIPromptFormData = useCallback(courseData => {\n    setAIPromptFormData({\n      course: courseData || {\n        code: '',\n        name: '',\n        instructor: '',\n        semester: '',\n        year: ''\n      },\n      assignment: {\n        title: '',\n        description: '',\n        learningObjectives: [],\n        skillsAssessed: []\n      },\n      rubricType: 'analytical',\n      criteria: [],\n      customInstructions: ''\n    });\n  }, []);\n\n  // ORIGINAL: Clear AI prompt form data\n  const clearAIPromptFormData = useCallback(() => {\n    setAIPromptFormData(null);\n  }, []);\n\n  // ORIGINAL: Assignment Prompt form data update function\n  const updateAssignmentPromptFormData = useCallback((field, value) => {\n    setAssignmentPromptFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  }, []);\n\n  // ORIGINAL: Initialize assignment prompt form data\n  const initializeAssignmentPromptFormData = useCallback(courseData => {\n    setAssignmentPromptFormData({\n      course: courseData || {\n        code: '',\n        name: '',\n        instructor: '',\n        semester: '',\n        year: ''\n      },\n      assignmentType: 'project',\n      learningObjectives: [],\n      skillsToAssess: [],\n      deliverables: [],\n      timeline: {\n        duration: '',\n        milestones: []\n      },\n      resources: [],\n      customRequirements: ''\n    });\n  }, []);\n\n  // ORIGINAL: Clear assignment prompt form data  \n  const clearAssignmentPromptFormData = useCallback(() => {\n    setAssignmentPromptFormData(null);\n  }, []);\n\n  // ORIGINAL: Update student information\n  const updateStudentInfo = useCallback((field, value) => {\n    setGradingFormData(prev => ({\n      ...prev,\n      student: {\n        ...prev.student,\n        [field]: value\n      }\n    }));\n  }, []);\n\n  // ORIGINAL: Update course information\n  const updateCourseInfo = useCallback((field, value) => {\n    setGradingFormData(prev => ({\n      ...prev,\n      course: {\n        ...prev.course,\n        [field]: value\n      }\n    }));\n  }, []);\n\n  // ORIGINAL: Update assignment information\n  const updateAssignmentInfo = useCallback((field, value) => {\n    setGradingFormData(prev => ({\n      ...prev,\n      assignment: {\n        ...prev.assignment,\n        [field]: value\n      }\n    }));\n  }, []);\n\n  // ORIGINAL: Update feedback information\n  const updateFeedbackInfo = useCallback((field, value) => {\n    setGradingFormData(prev => ({\n      ...prev,\n      feedback: {\n        ...prev.feedback,\n        [field]: value\n      }\n    }));\n  }, []);\n\n  // ORIGINAL: Update attachments\n  const updateAttachments = useCallback(attachments => {\n    setGradingFormData(prev => ({\n      ...prev,\n      attachments\n    }));\n  }, []);\n\n  // ORIGINAL: Update video links\n  const updateVideoLinks = useCallback(videoLinks => {\n    setGradingFormData(prev => ({\n      ...prev,\n      videoLinks\n    }));\n  }, []);\n\n  // ORIGINAL: Update rubric grading\n  const updateRubricGrading = useCallback((criterionId, data) => {\n    setGradingFormData(prev => ({\n      ...prev,\n      rubricGrading: {\n        ...prev.rubricGrading,\n        [criterionId]: data\n      }\n    }));\n  }, []);\n\n  // ORIGINAL: Update metadata\n  const updateMetadata = useCallback((field, value) => {\n    setGradingFormData(prev => ({\n      ...prev,\n      metadata: {\n        ...prev.metadata,\n        [field]: value\n      }\n    }));\n  }, []);\n\n  // NEW: Update late policy information\n  const updateLatePolicyInfo = useCallback((field, value) => {\n    setGradingFormData(prev => ({\n      ...prev,\n      latePolicy: {\n        ...prev.latePolicy,\n        [field]: value\n      }\n    }));\n  }, []);\n\n  // ORIGINAL: Clear grading form data\n  const clearGradingFormData = useCallback(() => {\n    setGradingFormData({\n      student: {\n        name: '',\n        id: '',\n        email: ''\n      },\n      course: {\n        code: '',\n        name: '',\n        instructor: '',\n        semester: '',\n        year: ''\n      },\n      assignment: {\n        title: '',\n        description: '',\n        dueDate: '',\n        totalPoints: 100,\n        maxPoints: 100\n      },\n      rubricGrading: {},\n      feedback: {\n        strengths: '',\n        improvements: '',\n        general: ''\n      },\n      attachments: [],\n      videoLinks: [],\n      metadata: {\n        gradedBy: '',\n        gradedDate: '',\n        version: '1.0',\n        notes: ''\n      },\n      latePolicy: {\n        level: 'none',\n        penaltyApplied: false,\n        policyId: null,\n        originalScore: null,\n        adjustedScore: null,\n        multiplier: 1.0\n      }\n    });\n  }, []);\n\n  // ORIGINAL: Clear rubric form data\n  const clearRubricFormData = useCallback(() => {\n    setRubricFormData({\n      course: {\n        code: '',\n        name: '',\n        instructor: '',\n        semester: '',\n        year: ''\n      },\n      assignment: {\n        title: '',\n        description: '',\n        dueDate: '',\n        totalPoints: 100,\n        passingThreshold: 70\n      },\n      criteria: []\n    });\n  }, []);\n\n  // ORIGINAL: Transfer rubric to grading\n  const transferRubricToGrading = useCallback(() => {\n    if (sharedRubric) {\n      setGradingFormData(prev => ({\n        ...prev,\n        course: sharedRubric.courseInfo || prev.course,\n        assignment: sharedRubric.assignmentInfo || prev.assignment\n      }));\n    }\n  }, [sharedRubric]);\n\n  // ORIGINAL: Transfer rubric to grading with details\n  const transferRubricToGradingWithDetails = useCallback(rubricData => {\n    if (rubricData) {\n      setGradingFormData(prev => ({\n        ...prev,\n        course: rubricData.courseInfo || prev.course,\n        assignment: rubricData.assignmentInfo || prev.assignment,\n        rubricGrading: {}\n      }));\n    }\n  }, []);\n\n  // ORIGINAL: Clear shared rubric\n  const clearSharedRubric = useCallback(() => {\n    setSharedRubric(null);\n  }, []);\n\n  // ENHANCED: Draft and Final Grade Management with Late Policy\n  const saveDraft = useCallback((studentId, gradeData) => {\n    const draftData = {\n      ...gradeData,\n      savedAt: new Date().toISOString(),\n      isDraft: true,\n      latePolicy: gradeData.latePolicy || gradingFormData.latePolicy\n    };\n    setDrafts(prev => ({\n      ...prev,\n      [studentId]: draftData\n    }));\n\n    // Also save to localStorage for persistence\n    const existingDrafts = JSON.parse(localStorage.getItem('gradingDrafts') || '{}');\n    existingDrafts[studentId] = draftData;\n    localStorage.setItem('gradingDrafts', JSON.stringify(existingDrafts));\n    console.log('✅ Draft saved for student:', studentId);\n  }, [gradingFormData.latePolicy]);\n  const loadDraft = useCallback(studentId => {\n    let draft = drafts[studentId];\n\n    // Try loading from localStorage if not in memory\n    if (!draft) {\n      const existingDrafts = JSON.parse(localStorage.getItem('gradingDrafts') || '{}');\n      draft = existingDrafts[studentId];\n      if (draft) {\n        setDrafts(prev => ({\n          ...prev,\n          [studentId]: draft\n        }));\n      }\n    }\n    if (draft) {\n      setGradingFormData(draft);\n      console.log('✅ Draft loaded for student:', studentId);\n      return true;\n    }\n    return false;\n  }, [drafts]);\n  const saveFinalGrade = useCallback((studentId, gradeData) => {\n    const finalData = {\n      ...gradeData,\n      finalizedAt: new Date().toISOString(),\n      isDraft: false,\n      latePolicy: gradeData.latePolicy || gradingFormData.latePolicy\n    };\n    setFinalGrades(prev => ({\n      ...prev,\n      [studentId]: finalData\n    }));\n\n    // Remove from drafts since it's now final\n    setDrafts(prev => {\n      const newDrafts = {\n        ...prev\n      };\n      delete newDrafts[studentId];\n      return newDrafts;\n    });\n\n    // Update localStorage\n    const existingFinal = JSON.parse(localStorage.getItem('finalGrades') || '{}');\n    existingFinal[studentId] = finalData;\n    localStorage.setItem('finalGrades', JSON.stringify(existingFinal));\n    const existingDrafts = JSON.parse(localStorage.getItem('gradingDrafts') || '{}');\n    delete existingDrafts[studentId];\n    localStorage.setItem('gradingDrafts', JSON.stringify(existingDrafts));\n    console.log('✅ Final grade saved for student:', studentId);\n  }, [gradingFormData.latePolicy]);\n  const loadFinalGrade = useCallback(studentId => {\n    let finalGrade = finalGrades[studentId];\n\n    // Try loading from localStorage if not in memory\n    if (!finalGrade) {\n      const existingFinal = JSON.parse(localStorage.getItem('finalGrades') || '{}');\n      finalGrade = existingFinal[studentId];\n      if (finalGrade) {\n        setFinalGrades(prev => ({\n          ...prev,\n          [studentId]: finalGrade\n        }));\n      }\n    }\n    return finalGrade || null;\n  }, [finalGrades]);\n  const getGradeStatus = useCallback(studentId => {\n    if (finalGrades[studentId]) return 'final';\n    if (drafts[studentId]) return 'draft';\n    return 'not_started';\n  }, [drafts, finalGrades]);\n  const hasDraft = useCallback(studentId => {\n    return !!drafts[studentId] || !!JSON.parse(localStorage.getItem('gradingDrafts') || '{}')[studentId];\n  }, [drafts]);\n  const finalizeGrade = useCallback(studentId => {\n    const draft = drafts[studentId];\n    if (draft) {\n      saveFinalGrade(studentId, draft);\n      return true;\n    }\n    return false;\n  }, [drafts, saveFinalGrade]);\n  const unlockGrade = useCallback(studentId => {\n    const finalGrade = finalGrades[studentId];\n    if (finalGrade) {\n      saveDraft(studentId, {\n        ...finalGrade,\n        isDraft: true\n      });\n      setFinalGrades(prev => {\n        const newFinals = {\n          ...prev\n        };\n        delete newFinals[studentId];\n        return newFinals;\n      });\n\n      // Update localStorage\n      const existingFinal = JSON.parse(localStorage.getItem('finalGrades') || '{}');\n      delete existingFinal[studentId];\n      localStorage.setItem('finalGrades', JSON.stringify(existingFinal));\n      console.log('✅ Grade unlocked for editing:', studentId);\n      return true;\n    }\n    return false;\n  }, [finalGrades, saveDraft]);\n\n  // NEW: Late Policy Management Functions\n  const loadLatePoliciesFromStorage = useCallback(() => {\n    try {\n      const saved = localStorage.getItem('customLatePolicies');\n      if (saved) {\n        const policies = JSON.parse(saved);\n        setCustomLatePolicies(policies);\n      }\n      const currentSaved = localStorage.getItem('currentLatePolicy');\n      if (currentSaved) {\n        const current = JSON.parse(currentSaved);\n        setCurrentLatePolicy(current);\n      }\n    } catch (error) {\n      console.error('Error loading late policies:', error);\n    }\n  }, []);\n  const saveCustomLatePolicy = useCallback(policy => {\n    const newPolicy = {\n      ...policy,\n      id: policy.id || `custom_${Date.now()}`,\n      isCustom: true,\n      createdAt: new Date().toISOString()\n    };\n    setCustomLatePolicies(prev => {\n      const updated = prev.filter(p => p.id !== newPolicy.id);\n      updated.push(newPolicy);\n      localStorage.setItem('customLatePolicies', JSON.stringify(updated));\n      return updated;\n    });\n    return newPolicy;\n  }, []);\n  const updateCustomLatePolicy = useCallback((policyId, updates) => {\n    setCustomLatePolicies(prev => {\n      const updated = prev.map(p => p.id === policyId ? {\n        ...p,\n        ...updates,\n        updatedAt: new Date().toISOString()\n      } : p);\n      localStorage.setItem('customLatePolicies', JSON.stringify(updated));\n      return updated;\n    });\n  }, []);\n  const deleteCustomLatePolicy = useCallback(policyId => {\n    setCustomLatePolicies(prev => {\n      const updated = prev.filter(p => p.id !== policyId);\n      localStorage.setItem('customLatePolicies', JSON.stringify(updated));\n      return updated;\n    });\n\n    // If deleted policy was current, reset to default\n    if ((currentLatePolicy === null || currentLatePolicy === void 0 ? void 0 : currentLatePolicy.id) === policyId) {\n      setCurrentLatePolicy(DEFAULT_LATE_POLICY);\n      localStorage.setItem('currentLatePolicy', JSON.stringify(DEFAULT_LATE_POLICY));\n    }\n  }, [currentLatePolicy]);\n  const calculateScoreWithLatePolicy = useCallback((rawScore, lateLevel) => {\n    if (!currentLatePolicy || !lateLevel || lateLevel === 'none') {\n      return {\n        rawScore,\n        finalScore: rawScore,\n        penaltyApplied: false,\n        multiplier: 1.0\n      };\n    }\n    const level = currentLatePolicy.levels[lateLevel];\n    if (!level) {\n      return {\n        rawScore,\n        finalScore: rawScore,\n        penaltyApplied: false,\n        multiplier: 1.0\n      };\n    }\n    const finalScore = Math.round(rawScore * level.multiplier * 100) / 100;\n    return {\n      rawScore,\n      finalScore,\n      penaltyApplied: level.multiplier < 1.0,\n      multiplier: level.multiplier\n    };\n  }, [currentLatePolicy]);\n\n  // ORIGINAL: Grading session management\n  const initializeGradingSession = useCallback(classListData => {\n    if (!classListData || !classListData.students || classListData.students.length === 0) {\n      console.error('Cannot initialize grading session: Invalid class list data');\n      return false;\n    }\n    const newSession = {\n      active: true,\n      startTime: new Date().toISOString(),\n      gradedStudents: [],\n      totalStudents: classListData.students.length,\n      currentStudent: classListData.students[0],\n      currentStudentIndex: 0,\n      classListData: classListData\n    };\n    setGradingSession(newSession);\n    setCurrentStudent(classListData.students[0]);\n    console.log('✅ Grading session initialized:', newSession);\n    return true;\n  }, []);\n  const updateGradingSession = useCallback(updates => {\n    setGradingSession(prev => ({\n      ...prev,\n      ...updates\n    }));\n  }, []);\n  const nextStudentInSession = useCallback(() => {\n    if (!gradingSession.active || !gradingSession.classListData) {\n      console.warn('No active grading session');\n      return false;\n    }\n    const nextIndex = gradingSession.currentStudentIndex + 1;\n    if (nextIndex >= gradingSession.totalStudents) {\n      console.log('✅ Reached end of class list');\n      return false;\n    }\n    const nextStudent = gradingSession.classListData.students[nextIndex];\n    setGradingSession(prev => ({\n      ...prev,\n      currentStudentIndex: nextIndex,\n      currentStudent: nextStudent\n    }));\n    setCurrentStudent(nextStudent);\n    console.log('✅ Moved to next student:', nextStudent.name);\n    return true;\n  }, [gradingSession]);\n  const previousStudentInSession = useCallback(() => {\n    if (!gradingSession.active || !gradingSession.classListData) {\n      console.warn('No active grading session');\n      return false;\n    }\n    const prevIndex = gradingSession.currentStudentIndex - 1;\n    if (prevIndex < 0) {\n      console.log('Already at first student');\n      return false;\n    }\n    const prevStudent = gradingSession.classListData.students[prevIndex];\n    setGradingSession(prev => ({\n      ...prev,\n      currentStudentIndex: prevIndex,\n      currentStudent: prevStudent\n    }));\n    setCurrentStudent(prevStudent);\n    console.log('✅ Moved to previous student:', prevStudent.name);\n    return true;\n  }, [gradingSession]);\n\n  // ORIGINAL: Session management\n  const exportSession = useCallback(() => {\n    const sessionData = {\n      rubric: sharedRubric,\n      courseDetails: sharedCourseDetails,\n      gradingData: gradingFormData,\n      classList: classList,\n      currentStudent: currentStudent,\n      drafts: drafts,\n      finalGrades: finalGrades,\n      customLatePolicies: customLatePolicies,\n      currentLatePolicy: currentLatePolicy,\n      exportedAt: new Date().toISOString(),\n      version: '2.0'\n    };\n    const blob = new Blob([JSON.stringify(sessionData, null, 2)], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `grading-session-${new Date().toISOString().split('T')[0]}.json`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  }, [sharedRubric, sharedCourseDetails, gradingFormData, classList, currentStudent, drafts, finalGrades, customLatePolicies, currentLatePolicy]);\n  const importSession = useCallback(sessionData => {\n    try {\n      if (sessionData.rubric) setSharedRubric(sessionData.rubric);\n      if (sessionData.courseDetails) setSharedCourseDetails(sessionData.courseDetails);\n      if (sessionData.gradingData) setGradingFormData(sessionData.gradingData);\n      if (sessionData.classList) setClassList(sessionData.classList);\n      if (sessionData.currentStudent) setCurrentStudent(sessionData.currentStudent);\n      if (sessionData.drafts) setDrafts(sessionData.drafts);\n      if (sessionData.finalGrades) setFinalGrades(sessionData.finalGrades);\n\n      // Import late policy data if available\n      if (sessionData.customLatePolicies) setCustomLatePolicies(sessionData.customLatePolicies);\n      if (sessionData.currentLatePolicy) setCurrentLatePolicy(sessionData.currentLatePolicy);\n      console.log('✅ Session imported successfully with late policy data');\n    } catch (error) {\n      console.error(\"Failed to import session:\", error);\n      alert(\"Error: Could not load the session file. Please ensure it's a valid session file.\");\n    }\n  }, []);\n  const clearAllData = useCallback(() => {\n    setSharedRubric(null);\n    clearGradingFormData();\n    clearRubricFormData();\n    clearAIPromptFormData();\n    clearAssignmentPromptFormData();\n    setDrafts({});\n    setFinalGrades({});\n    setCustomLatePolicies([]);\n    setCurrentLatePolicy(DEFAULT_LATE_POLICY);\n  }, [clearGradingFormData, clearRubricFormData, clearAIPromptFormData, clearAssignmentPromptFormData]);\n\n  // Context value with ALL functions\n  const value = {\n    // Shared state\n    sharedRubric,\n    setSharedRubric,\n    sharedCourseDetails,\n    setSharedCourseDetails,\n    // Navigation\n    activeTab,\n    setActiveTab,\n    // AI Prompt Generator (for rubrics)\n    aiPromptFormData,\n    updateAIPromptFormData,\n    initializeAIPromptFormData,\n    clearAIPromptFormData,\n    // Assignment Prompt Generator\n    assignmentPromptFormData,\n    updateAssignmentPromptFormData,\n    initializeAssignmentPromptFormData,\n    clearAssignmentPromptFormData,\n    // Grading form data\n    gradingData: gradingFormData,\n    setGradingData: setGradingFormData,\n    clearGradingFormData,\n    persistentFormData: gradingFormData,\n    updatePersistentFormData: setGradingFormData,\n    // Form update functions\n    updateStudentInfo,\n    updateCourseInfo,\n    updateAssignmentInfo,\n    updateFeedbackInfo,\n    updateAttachments,\n    updateVideoLinks,\n    updateLatePolicyInfo,\n    updateRubricGrading,\n    updateMetadata,\n    // Draft and Final Grade Management\n    drafts,\n    finalGrades,\n    saveDraft,\n    loadDraft,\n    saveFinalGrade,\n    loadFinalGrade,\n    getGradeStatus,\n    hasDraft,\n    finalizeGrade,\n    unlockGrade,\n    // Class management\n    classList,\n    setClassList,\n    currentStudent,\n    setCurrentStudent,\n    // Grading session\n    gradingSession,\n    setGradingSession,\n    nextStudentInSession,\n    previousStudentInSession,\n    updateGradingSession,\n    initializeGradingSession,\n    // Rubric form data\n    rubricFormData,\n    setRubricFormData,\n    // Late Policy Management\n    currentLatePolicy,\n    setCurrentLatePolicy,\n    customLatePolicies,\n    setCustomLatePolicies,\n    loadLatePoliciesFromStorage,\n    saveCustomLatePolicy,\n    updateCustomLatePolicy,\n    deleteCustomLatePolicy,\n    calculateScoreWithLatePolicy,\n    // Utility functions\n    transferRubricToGrading,\n    transferRubricToGradingWithDetails,\n    clearSharedRubric,\n    clearRubricFormData,\n    clearAllData,\n    // Session management\n    exportSession,\n    importSession\n  };\n  return /*#__PURE__*/_jsxDEV(AssessmentContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 735,\n    columnNumber: 9\n  }, this);\n};\n_s2(AssessmentProvider, \"kjJBSsQTyKWG5LZ/fi62161QumI=\");\n_c = AssessmentProvider;\nexport default AssessmentProvider;\nvar _c;\n$RefreshReg$(_c, \"AssessmentProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","jsxDEV","_jsxDEV","AssessmentContext","useAssessment","_s","context","Error","DEFAULT_LATE_POLICY","id","name","description","levels","none","multiplier","color","timeframe","within24","after24","AssessmentProvider","children","_s2","sharedRubric","setSharedRubric","sharedCourseDetails","setSharedCourseDetails","activeTab","setActiveTab","aiPromptFormData","setAIPromptFormData","assignmentPromptFormData","setAssignmentPromptFormData","classList","setClassList","currentStudent","setCurrentStudent","drafts","setDrafts","finalGrades","setFinalGrades","currentLatePolicy","setCurrentLatePolicy","customLatePolicies","setCustomLatePolicies","gradingSession","setGradingSession","active","startTime","gradedStudents","totalStudents","currentStudentIndex","rubricFormData","setRubricFormData","course","code","instructor","semester","year","assignment","title","dueDate","totalPoints","passingThreshold","criteria","gradingFormData","setGradingFormData","student","email","maxPoints","rubricGrading","feedback","strengths","improvements","general","attachments","videoLinks","metadata","gradedBy","gradedDate","version","notes","latePolicy","level","penaltyApplied","policyId","originalScore","adjustedScore","updateAIPromptFormData","field","value","prev","initializeAIPromptFormData","courseData","learningObjectives","skillsAssessed","rubricType","customInstructions","clearAIPromptFormData","updateAssignmentPromptFormData","initializeAssignmentPromptFormData","assignmentType","skillsToAssess","deliverables","timeline","duration","milestones","resources","customRequirements","clearAssignmentPromptFormData","updateStudentInfo","updateCourseInfo","updateAssignmentInfo","updateFeedbackInfo","updateAttachments","updateVideoLinks","updateRubricGrading","criterionId","data","updateMetadata","updateLatePolicyInfo","clearGradingFormData","clearRubricFormData","transferRubricToGrading","courseInfo","assignmentInfo","transferRubricToGradingWithDetails","rubricData","clearSharedRubric","saveDraft","studentId","gradeData","draftData","savedAt","Date","toISOString","isDraft","existingDrafts","JSON","parse","localStorage","getItem","setItem","stringify","console","log","loadDraft","draft","saveFinalGrade","finalData","finalizedAt","newDrafts","existingFinal","loadFinalGrade","finalGrade","getGradeStatus","hasDraft","finalizeGrade","unlockGrade","newFinals","loadLatePoliciesFromStorage","saved","policies","currentSaved","current","error","saveCustomLatePolicy","policy","newPolicy","now","isCustom","createdAt","updated","filter","p","push","updateCustomLatePolicy","updates","map","updatedAt","deleteCustomLatePolicy","calculateScoreWithLatePolicy","rawScore","lateLevel","finalScore","Math","round","initializeGradingSession","classListData","students","length","newSession","updateGradingSession","nextStudentInSession","warn","nextIndex","nextStudent","previousStudentInSession","prevIndex","prevStudent","exportSession","sessionData","rubric","courseDetails","gradingData","exportedAt","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","split","body","appendChild","click","removeChild","revokeObjectURL","importSession","alert","clearAllData","setGradingData","persistentFormData","updatePersistentFormData","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/local clones/rubric-creation-app/src/components/SharedContext.js"],"sourcesContent":["// Complete SharedContext.js - Fully Merged with ALL Original Features + Late Policy Enhancement\r\n// This version preserves EVERY function and feature from the original while adding late policy support\r\n\r\nimport React, { createContext, useContext, useState, useCallback } from 'react';\r\n\r\nconst AssessmentContext = createContext();\r\n\r\nexport const useAssessment = () => {\r\n    const context = useContext(AssessmentContext);\r\n    if (!context) {\r\n        throw new Error('useAssessment must be used within AssessmentProvider');\r\n    }\r\n    return context;\r\n};\r\n\r\n// DEFAULT LATE POLICY SYSTEM\r\nconst DEFAULT_LATE_POLICY = {\r\n    id: 'institutional',\r\n    name: 'Institutional Policy',\r\n    description: 'Standard institutional late assignment policy',\r\n    levels: {\r\n        none: {\r\n            name: 'On Time',\r\n            multiplier: 1.0,\r\n            description: 'Assignment submitted on or before due date and time - marked out of 100%',\r\n            color: '#16a34a',\r\n            timeframe: 'On or before due date'\r\n        },\r\n        within24: {\r\n            name: '1-24 Hours Late',\r\n            multiplier: 0.8,\r\n            description: 'Assignment received within 24 hours of due date - 20% reduction (marked out of 80%)',\r\n            color: '#ea580c',\r\n            timeframe: 'Up to 24 hours late'\r\n        },\r\n        after24: {\r\n            name: 'More than 24 Hours Late',\r\n            multiplier: 0.0,\r\n            description: 'Assignment received after 24 hours from due date - mark of zero (0)',\r\n            color: '#dc2626',\r\n            timeframe: 'More than 24 hours late'\r\n        }\r\n    }\r\n};\r\n\r\nexport const AssessmentProvider = ({ children }) => {\r\n    // ORIGINAL: Shared rubric state\r\n    const [sharedRubric, setSharedRubric] = useState(null);\r\n    const [sharedCourseDetails, setSharedCourseDetails] = useState(null);\r\n    const [activeTab, setActiveTab] = useState('assignment-prompt-generator');\r\n\r\n    // ORIGINAL: AI Prompt Generator state (for rubrics)\r\n    const [aiPromptFormData, setAIPromptFormData] = useState(null);\r\n\r\n    // ORIGINAL: Assignment Prompt Generator state\r\n    const [assignmentPromptFormData, setAssignmentPromptFormData] = useState(null);\r\n\r\n    // ORIGINAL: Class list and student management\r\n    const [classList, setClassList] = useState(null);\r\n    const [currentStudent, setCurrentStudent] = useState(null);\r\n\r\n    // ORIGINAL: Separate storage for draft and final grades\r\n    const [drafts, setDrafts] = useState({});\r\n    const [finalGrades, setFinalGrades] = useState({});\r\n\r\n    // NEW: Late Policy State Management\r\n    const [currentLatePolicy, setCurrentLatePolicy] = useState(DEFAULT_LATE_POLICY);\r\n    const [customLatePolicies, setCustomLatePolicies] = useState([]);\r\n\r\n    // ORIGINAL: Batch grading session state\r\n    const [gradingSession, setGradingSession] = useState({\r\n        active: false,\r\n        startTime: null,\r\n        gradedStudents: [],\r\n        totalStudents: 0,\r\n        currentStudent: null,\r\n        currentStudentIndex: 0\r\n    });\r\n\r\n    // ORIGINAL: Rubric form data state\r\n    const [rubricFormData, setRubricFormData] = useState({\r\n        course: { code: '', name: '', instructor: '', semester: '', year: '' },\r\n        assignment: { title: '', description: '', dueDate: '', totalPoints: 100, passingThreshold: 70 },\r\n        criteria: []\r\n    });\r\n\r\n    // ENHANCED: Form data states with late policy support\r\n    const [gradingFormData, setGradingFormData] = useState({\r\n        student: { name: '', id: '', email: '' },\r\n        course: { code: '', name: '', instructor: '', semester: '', year: '' },\r\n        assignment: { title: '', description: '', dueDate: '', totalPoints: 100, maxPoints: 100 },\r\n        rubricGrading: {},\r\n        feedback: { strengths: '', improvements: '', general: '' },\r\n        attachments: [],\r\n        videoLinks: [],\r\n        metadata: { gradedBy: '', gradedDate: '', version: '1.0', notes: '' },\r\n        // NEW: Late policy integration\r\n        latePolicy: {\r\n            level: 'none',\r\n            penaltyApplied: false,\r\n            policyId: null,\r\n            originalScore: null,\r\n            adjustedScore: null,\r\n            multiplier: 1.0\r\n        }\r\n    });\r\n\r\n    // ORIGINAL: AI Prompt form data update function\r\n    const updateAIPromptFormData = useCallback((field, value) => {\r\n        setAIPromptFormData(prev => ({\r\n            ...prev,\r\n            [field]: value\r\n        }));\r\n    }, []);\r\n\r\n    // ORIGINAL: Initialize AI prompt form data\r\n    const initializeAIPromptFormData = useCallback((courseData) => {\r\n        setAIPromptFormData({\r\n            course: courseData || { code: '', name: '', instructor: '', semester: '', year: '' },\r\n            assignment: { title: '', description: '', learningObjectives: [], skillsAssessed: [] },\r\n            rubricType: 'analytical',\r\n            criteria: [],\r\n            customInstructions: ''\r\n        });\r\n    }, []);\r\n\r\n    // ORIGINAL: Clear AI prompt form data\r\n    const clearAIPromptFormData = useCallback(() => {\r\n        setAIPromptFormData(null);\r\n    }, []);\r\n\r\n    // ORIGINAL: Assignment Prompt form data update function\r\n    const updateAssignmentPromptFormData = useCallback((field, value) => {\r\n        setAssignmentPromptFormData(prev => ({\r\n            ...prev,\r\n            [field]: value\r\n        }));\r\n    }, []);\r\n\r\n    // ORIGINAL: Initialize assignment prompt form data\r\n    const initializeAssignmentPromptFormData = useCallback((courseData) => {\r\n        setAssignmentPromptFormData({\r\n            course: courseData || { code: '', name: '', instructor: '', semester: '', year: '' },\r\n            assignmentType: 'project',\r\n            learningObjectives: [],\r\n            skillsToAssess: [],\r\n            deliverables: [],\r\n            timeline: { duration: '', milestones: [] },\r\n            resources: [],\r\n            customRequirements: ''\r\n        });\r\n    }, []);\r\n\r\n    // ORIGINAL: Clear assignment prompt form data  \r\n    const clearAssignmentPromptFormData = useCallback(() => {\r\n        setAssignmentPromptFormData(null);\r\n    }, []);\r\n\r\n    // ORIGINAL: Update student information\r\n    const updateStudentInfo = useCallback((field, value) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            student: { ...prev.student, [field]: value }\r\n        }));\r\n    }, []);\r\n\r\n    // ORIGINAL: Update course information\r\n    const updateCourseInfo = useCallback((field, value) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            course: { ...prev.course, [field]: value }\r\n        }));\r\n    }, []);\r\n\r\n    // ORIGINAL: Update assignment information\r\n    const updateAssignmentInfo = useCallback((field, value) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            assignment: { ...prev.assignment, [field]: value }\r\n        }));\r\n    }, []);\r\n\r\n    // ORIGINAL: Update feedback information\r\n    const updateFeedbackInfo = useCallback((field, value) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            feedback: { ...prev.feedback, [field]: value }\r\n        }));\r\n    }, []);\r\n\r\n    // ORIGINAL: Update attachments\r\n    const updateAttachments = useCallback((attachments) => {\r\n        setGradingFormData(prev => ({ ...prev, attachments }));\r\n    }, []);\r\n\r\n    // ORIGINAL: Update video links\r\n    const updateVideoLinks = useCallback((videoLinks) => {\r\n        setGradingFormData(prev => ({ ...prev, videoLinks }));\r\n    }, []);\r\n\r\n    // ORIGINAL: Update rubric grading\r\n    const updateRubricGrading = useCallback((criterionId, data) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            rubricGrading: { ...prev.rubricGrading, [criterionId]: data }\r\n        }));\r\n    }, []);\r\n\r\n    // ORIGINAL: Update metadata\r\n    const updateMetadata = useCallback((field, value) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            metadata: { ...prev.metadata, [field]: value }\r\n        }));\r\n    }, []);\r\n\r\n    // NEW: Update late policy information\r\n    const updateLatePolicyInfo = useCallback((field, value) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            latePolicy: { ...prev.latePolicy, [field]: value }\r\n        }));\r\n    }, []);\r\n\r\n    // ORIGINAL: Clear grading form data\r\n    const clearGradingFormData = useCallback(() => {\r\n        setGradingFormData({\r\n            student: { name: '', id: '', email: '' },\r\n            course: { code: '', name: '', instructor: '', semester: '', year: '' },\r\n            assignment: { title: '', description: '', dueDate: '', totalPoints: 100, maxPoints: 100 },\r\n            rubricGrading: {},\r\n            feedback: { strengths: '', improvements: '', general: '' },\r\n            attachments: [],\r\n            videoLinks: [],\r\n            metadata: { gradedBy: '', gradedDate: '', version: '1.0', notes: '' },\r\n            latePolicy: {\r\n                level: 'none',\r\n                penaltyApplied: false,\r\n                policyId: null,\r\n                originalScore: null,\r\n                adjustedScore: null,\r\n                multiplier: 1.0\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    // ORIGINAL: Clear rubric form data\r\n    const clearRubricFormData = useCallback(() => {\r\n        setRubricFormData({\r\n            course: { code: '', name: '', instructor: '', semester: '', year: '' },\r\n            assignment: { title: '', description: '', dueDate: '', totalPoints: 100, passingThreshold: 70 },\r\n            criteria: []\r\n        });\r\n    }, []);\r\n\r\n    // ORIGINAL: Transfer rubric to grading\r\n    const transferRubricToGrading = useCallback(() => {\r\n        if (sharedRubric) {\r\n            setGradingFormData(prev => ({\r\n                ...prev,\r\n                course: sharedRubric.courseInfo || prev.course,\r\n                assignment: sharedRubric.assignmentInfo || prev.assignment\r\n            }));\r\n        }\r\n    }, [sharedRubric]);\r\n\r\n    // ORIGINAL: Transfer rubric to grading with details\r\n    const transferRubricToGradingWithDetails = useCallback((rubricData) => {\r\n        if (rubricData) {\r\n            setGradingFormData(prev => ({\r\n                ...prev,\r\n                course: rubricData.courseInfo || prev.course,\r\n                assignment: rubricData.assignmentInfo || prev.assignment,\r\n                rubricGrading: {}\r\n            }));\r\n        }\r\n    }, []);\r\n\r\n    // ORIGINAL: Clear shared rubric\r\n    const clearSharedRubric = useCallback(() => {\r\n        setSharedRubric(null);\r\n    }, []);\r\n\r\n    // ENHANCED: Draft and Final Grade Management with Late Policy\r\n    const saveDraft = useCallback((studentId, gradeData) => {\r\n        const draftData = {\r\n            ...gradeData,\r\n            savedAt: new Date().toISOString(),\r\n            isDraft: true,\r\n            latePolicy: gradeData.latePolicy || gradingFormData.latePolicy\r\n        };\r\n\r\n        setDrafts(prev => ({ ...prev, [studentId]: draftData }));\r\n\r\n        // Also save to localStorage for persistence\r\n        const existingDrafts = JSON.parse(localStorage.getItem('gradingDrafts') || '{}');\r\n        existingDrafts[studentId] = draftData;\r\n        localStorage.setItem('gradingDrafts', JSON.stringify(existingDrafts));\r\n\r\n        console.log('✅ Draft saved for student:', studentId);\r\n    }, [gradingFormData.latePolicy]);\r\n\r\n    const loadDraft = useCallback((studentId) => {\r\n        let draft = drafts[studentId];\r\n\r\n        // Try loading from localStorage if not in memory\r\n        if (!draft) {\r\n            const existingDrafts = JSON.parse(localStorage.getItem('gradingDrafts') || '{}');\r\n            draft = existingDrafts[studentId];\r\n            if (draft) {\r\n                setDrafts(prev => ({ ...prev, [studentId]: draft }));\r\n            }\r\n        }\r\n\r\n        if (draft) {\r\n            setGradingFormData(draft);\r\n            console.log('✅ Draft loaded for student:', studentId);\r\n            return true;\r\n        }\r\n        return false;\r\n    }, [drafts]);\r\n\r\n    const saveFinalGrade = useCallback((studentId, gradeData) => {\r\n        const finalData = {\r\n            ...gradeData,\r\n            finalizedAt: new Date().toISOString(),\r\n            isDraft: false,\r\n            latePolicy: gradeData.latePolicy || gradingFormData.latePolicy\r\n        };\r\n\r\n        setFinalGrades(prev => ({ ...prev, [studentId]: finalData }));\r\n\r\n        // Remove from drafts since it's now final\r\n        setDrafts(prev => {\r\n            const newDrafts = { ...prev };\r\n            delete newDrafts[studentId];\r\n            return newDrafts;\r\n        });\r\n\r\n        // Update localStorage\r\n        const existingFinal = JSON.parse(localStorage.getItem('finalGrades') || '{}');\r\n        existingFinal[studentId] = finalData;\r\n        localStorage.setItem('finalGrades', JSON.stringify(existingFinal));\r\n\r\n        const existingDrafts = JSON.parse(localStorage.getItem('gradingDrafts') || '{}');\r\n        delete existingDrafts[studentId];\r\n        localStorage.setItem('gradingDrafts', JSON.stringify(existingDrafts));\r\n\r\n        console.log('✅ Final grade saved for student:', studentId);\r\n    }, [gradingFormData.latePolicy]);\r\n\r\n    const loadFinalGrade = useCallback((studentId) => {\r\n        let finalGrade = finalGrades[studentId];\r\n\r\n        // Try loading from localStorage if not in memory\r\n        if (!finalGrade) {\r\n            const existingFinal = JSON.parse(localStorage.getItem('finalGrades') || '{}');\r\n            finalGrade = existingFinal[studentId];\r\n            if (finalGrade) {\r\n                setFinalGrades(prev => ({ ...prev, [studentId]: finalGrade }));\r\n            }\r\n        }\r\n\r\n        return finalGrade || null;\r\n    }, [finalGrades]);\r\n\r\n    const getGradeStatus = useCallback((studentId) => {\r\n        if (finalGrades[studentId]) return 'final';\r\n        if (drafts[studentId]) return 'draft';\r\n        return 'not_started';\r\n    }, [drafts, finalGrades]);\r\n\r\n    const hasDraft = useCallback((studentId) => {\r\n        return !!drafts[studentId] || !!(JSON.parse(localStorage.getItem('gradingDrafts') || '{}')[studentId]);\r\n    }, [drafts]);\r\n\r\n    const finalizeGrade = useCallback((studentId) => {\r\n        const draft = drafts[studentId];\r\n        if (draft) {\r\n            saveFinalGrade(studentId, draft);\r\n            return true;\r\n        }\r\n        return false;\r\n    }, [drafts, saveFinalGrade]);\r\n\r\n    const unlockGrade = useCallback((studentId) => {\r\n        const finalGrade = finalGrades[studentId];\r\n        if (finalGrade) {\r\n            saveDraft(studentId, { ...finalGrade, isDraft: true });\r\n\r\n            setFinalGrades(prev => {\r\n                const newFinals = { ...prev };\r\n                delete newFinals[studentId];\r\n                return newFinals;\r\n            });\r\n\r\n            // Update localStorage\r\n            const existingFinal = JSON.parse(localStorage.getItem('finalGrades') || '{}');\r\n            delete existingFinal[studentId];\r\n            localStorage.setItem('finalGrades', JSON.stringify(existingFinal));\r\n\r\n            console.log('✅ Grade unlocked for editing:', studentId);\r\n            return true;\r\n        }\r\n        return false;\r\n    }, [finalGrades, saveDraft]);\r\n\r\n    // NEW: Late Policy Management Functions\r\n    const loadLatePoliciesFromStorage = useCallback(() => {\r\n        try {\r\n            const saved = localStorage.getItem('customLatePolicies');\r\n            if (saved) {\r\n                const policies = JSON.parse(saved);\r\n                setCustomLatePolicies(policies);\r\n            }\r\n\r\n            const currentSaved = localStorage.getItem('currentLatePolicy');\r\n            if (currentSaved) {\r\n                const current = JSON.parse(currentSaved);\r\n                setCurrentLatePolicy(current);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error loading late policies:', error);\r\n        }\r\n    }, []);\r\n\r\n    const saveCustomLatePolicy = useCallback((policy) => {\r\n        const newPolicy = {\r\n            ...policy,\r\n            id: policy.id || `custom_${Date.now()}`,\r\n            isCustom: true,\r\n            createdAt: new Date().toISOString()\r\n        };\r\n\r\n        setCustomLatePolicies(prev => {\r\n            const updated = prev.filter(p => p.id !== newPolicy.id);\r\n            updated.push(newPolicy);\r\n            localStorage.setItem('customLatePolicies', JSON.stringify(updated));\r\n            return updated;\r\n        });\r\n\r\n        return newPolicy;\r\n    }, []);\r\n\r\n    const updateCustomLatePolicy = useCallback((policyId, updates) => {\r\n        setCustomLatePolicies(prev => {\r\n            const updated = prev.map(p =>\r\n                p.id === policyId ? { ...p, ...updates, updatedAt: new Date().toISOString() } : p\r\n            );\r\n            localStorage.setItem('customLatePolicies', JSON.stringify(updated));\r\n            return updated;\r\n        });\r\n    }, []);\r\n\r\n    const deleteCustomLatePolicy = useCallback((policyId) => {\r\n        setCustomLatePolicies(prev => {\r\n            const updated = prev.filter(p => p.id !== policyId);\r\n            localStorage.setItem('customLatePolicies', JSON.stringify(updated));\r\n            return updated;\r\n        });\r\n\r\n        // If deleted policy was current, reset to default\r\n        if (currentLatePolicy?.id === policyId) {\r\n            setCurrentLatePolicy(DEFAULT_LATE_POLICY);\r\n            localStorage.setItem('currentLatePolicy', JSON.stringify(DEFAULT_LATE_POLICY));\r\n        }\r\n    }, [currentLatePolicy]);\r\n\r\n    const calculateScoreWithLatePolicy = useCallback((rawScore, lateLevel) => {\r\n        if (!currentLatePolicy || !lateLevel || lateLevel === 'none') {\r\n            return {\r\n                rawScore,\r\n                finalScore: rawScore,\r\n                penaltyApplied: false,\r\n                multiplier: 1.0\r\n            };\r\n        }\r\n\r\n        const level = currentLatePolicy.levels[lateLevel];\r\n        if (!level) {\r\n            return {\r\n                rawScore,\r\n                finalScore: rawScore,\r\n                penaltyApplied: false,\r\n                multiplier: 1.0\r\n            };\r\n        }\r\n\r\n        const finalScore = Math.round(rawScore * level.multiplier * 100) / 100;\r\n\r\n        return {\r\n            rawScore,\r\n            finalScore,\r\n            penaltyApplied: level.multiplier < 1.0,\r\n            multiplier: level.multiplier\r\n        };\r\n    }, [currentLatePolicy]);\r\n\r\n    // ORIGINAL: Grading session management\r\n    const initializeGradingSession = useCallback((classListData) => {\r\n        if (!classListData || !classListData.students || classListData.students.length === 0) {\r\n            console.error('Cannot initialize grading session: Invalid class list data');\r\n            return false;\r\n        }\r\n\r\n        const newSession = {\r\n            active: true,\r\n            startTime: new Date().toISOString(),\r\n            gradedStudents: [],\r\n            totalStudents: classListData.students.length,\r\n            currentStudent: classListData.students[0],\r\n            currentStudentIndex: 0,\r\n            classListData: classListData\r\n        };\r\n\r\n        setGradingSession(newSession);\r\n        setCurrentStudent(classListData.students[0]);\r\n\r\n        console.log('✅ Grading session initialized:', newSession);\r\n        return true;\r\n    }, []);\r\n\r\n    const updateGradingSession = useCallback((updates) => {\r\n        setGradingSession(prev => ({ ...prev, ...updates }));\r\n    }, []);\r\n\r\n    const nextStudentInSession = useCallback(() => {\r\n        if (!gradingSession.active || !gradingSession.classListData) {\r\n            console.warn('No active grading session');\r\n            return false;\r\n        }\r\n\r\n        const nextIndex = gradingSession.currentStudentIndex + 1;\r\n        if (nextIndex >= gradingSession.totalStudents) {\r\n            console.log('✅ Reached end of class list');\r\n            return false;\r\n        }\r\n\r\n        const nextStudent = gradingSession.classListData.students[nextIndex];\r\n\r\n        setGradingSession(prev => ({\r\n            ...prev,\r\n            currentStudentIndex: nextIndex,\r\n            currentStudent: nextStudent\r\n        }));\r\n\r\n        setCurrentStudent(nextStudent);\r\n\r\n        console.log('✅ Moved to next student:', nextStudent.name);\r\n        return true;\r\n    }, [gradingSession]);\r\n\r\n    const previousStudentInSession = useCallback(() => {\r\n        if (!gradingSession.active || !gradingSession.classListData) {\r\n            console.warn('No active grading session');\r\n            return false;\r\n        }\r\n\r\n        const prevIndex = gradingSession.currentStudentIndex - 1;\r\n        if (prevIndex < 0) {\r\n            console.log('Already at first student');\r\n            return false;\r\n        }\r\n\r\n        const prevStudent = gradingSession.classListData.students[prevIndex];\r\n\r\n        setGradingSession(prev => ({\r\n            ...prev,\r\n            currentStudentIndex: prevIndex,\r\n            currentStudent: prevStudent\r\n        }));\r\n\r\n        setCurrentStudent(prevStudent);\r\n\r\n        console.log('✅ Moved to previous student:', prevStudent.name);\r\n        return true;\r\n    }, [gradingSession]);\r\n\r\n    // ORIGINAL: Session management\r\n    const exportSession = useCallback(() => {\r\n        const sessionData = {\r\n            rubric: sharedRubric,\r\n            courseDetails: sharedCourseDetails,\r\n            gradingData: gradingFormData,\r\n            classList: classList,\r\n            currentStudent: currentStudent,\r\n            drafts: drafts,\r\n            finalGrades: finalGrades,\r\n            customLatePolicies: customLatePolicies,\r\n            currentLatePolicy: currentLatePolicy,\r\n            exportedAt: new Date().toISOString(),\r\n            version: '2.0'\r\n        };\r\n\r\n        const blob = new Blob([JSON.stringify(sessionData, null, 2)], { type: 'application/json' });\r\n        const url = URL.createObjectURL(blob);\r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        link.download = `grading-session-${new Date().toISOString().split('T')[0]}.json`;\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n        URL.revokeObjectURL(url);\r\n    }, [sharedRubric, sharedCourseDetails, gradingFormData, classList, currentStudent, drafts, finalGrades, customLatePolicies, currentLatePolicy]);\r\n\r\n    const importSession = useCallback((sessionData) => {\r\n        try {\r\n            if (sessionData.rubric) setSharedRubric(sessionData.rubric);\r\n            if (sessionData.courseDetails) setSharedCourseDetails(sessionData.courseDetails);\r\n            if (sessionData.gradingData) setGradingFormData(sessionData.gradingData);\r\n            if (sessionData.classList) setClassList(sessionData.classList);\r\n            if (sessionData.currentStudent) setCurrentStudent(sessionData.currentStudent);\r\n            if (sessionData.drafts) setDrafts(sessionData.drafts);\r\n            if (sessionData.finalGrades) setFinalGrades(sessionData.finalGrades);\r\n\r\n            // Import late policy data if available\r\n            if (sessionData.customLatePolicies) setCustomLatePolicies(sessionData.customLatePolicies);\r\n            if (sessionData.currentLatePolicy) setCurrentLatePolicy(sessionData.currentLatePolicy);\r\n\r\n            console.log('✅ Session imported successfully with late policy data');\r\n        } catch (error) {\r\n            console.error(\"Failed to import session:\", error);\r\n            alert(\"Error: Could not load the session file. Please ensure it's a valid session file.\");\r\n        }\r\n    }, []);\r\n\r\n    const clearAllData = useCallback(() => {\r\n        setSharedRubric(null);\r\n        clearGradingFormData();\r\n        clearRubricFormData();\r\n        clearAIPromptFormData();\r\n        clearAssignmentPromptFormData();\r\n        setDrafts({});\r\n        setFinalGrades({});\r\n        setCustomLatePolicies([]);\r\n        setCurrentLatePolicy(DEFAULT_LATE_POLICY);\r\n    }, [clearGradingFormData, clearRubricFormData, clearAIPromptFormData, clearAssignmentPromptFormData]);\r\n\r\n    // Context value with ALL functions\r\n    const value = {\r\n        // Shared state\r\n        sharedRubric,\r\n        setSharedRubric,\r\n        sharedCourseDetails,\r\n        setSharedCourseDetails,\r\n\r\n        // Navigation\r\n        activeTab,\r\n        setActiveTab,\r\n\r\n        // AI Prompt Generator (for rubrics)\r\n        aiPromptFormData,\r\n        updateAIPromptFormData,\r\n        initializeAIPromptFormData,\r\n        clearAIPromptFormData,\r\n\r\n        // Assignment Prompt Generator\r\n        assignmentPromptFormData,\r\n        updateAssignmentPromptFormData,\r\n        initializeAssignmentPromptFormData,\r\n        clearAssignmentPromptFormData,\r\n\r\n        // Grading form data\r\n        gradingData: gradingFormData,\r\n        setGradingData: setGradingFormData,\r\n        clearGradingFormData,\r\n        persistentFormData: gradingFormData,\r\n        updatePersistentFormData: setGradingFormData,\r\n\r\n        // Form update functions\r\n        updateStudentInfo,\r\n        updateCourseInfo,\r\n        updateAssignmentInfo,\r\n        updateFeedbackInfo,\r\n        updateAttachments,\r\n        updateVideoLinks,\r\n        updateLatePolicyInfo,\r\n        updateRubricGrading,\r\n        updateMetadata,\r\n\r\n        // Draft and Final Grade Management\r\n        drafts,\r\n        finalGrades,\r\n        saveDraft,\r\n        loadDraft,\r\n        saveFinalGrade,\r\n        loadFinalGrade,\r\n        getGradeStatus,\r\n        hasDraft,\r\n        finalizeGrade,\r\n        unlockGrade,\r\n\r\n        // Class management\r\n        classList,\r\n        setClassList,\r\n        currentStudent,\r\n        setCurrentStudent,\r\n\r\n        // Grading session\r\n        gradingSession,\r\n        setGradingSession,\r\n        nextStudentInSession,\r\n        previousStudentInSession,\r\n        updateGradingSession,\r\n        initializeGradingSession,\r\n\r\n        // Rubric form data\r\n        rubricFormData,\r\n        setRubricFormData,\r\n\r\n        // Late Policy Management\r\n        currentLatePolicy,\r\n        setCurrentLatePolicy,\r\n        customLatePolicies,\r\n        setCustomLatePolicies,\r\n        loadLatePoliciesFromStorage,\r\n        saveCustomLatePolicy,\r\n        updateCustomLatePolicy,\r\n        deleteCustomLatePolicy,\r\n        calculateScoreWithLatePolicy,\r\n\r\n        // Utility functions\r\n        transferRubricToGrading,\r\n        transferRubricToGradingWithDetails,\r\n        clearSharedRubric,\r\n        clearRubricFormData,\r\n        clearAllData,\r\n\r\n        // Session management\r\n        exportSession,\r\n        importSession\r\n    };\r\n\r\n    return (\r\n        <AssessmentContext.Provider value={value}>\r\n            {children}\r\n        </AssessmentContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AssessmentProvider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}