{"ast":null,"code":"var _jsxFileName = \"C:\\\\local clones\\\\rubric-creation-app\\\\src\\\\MarkupEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\n\n// Basic HTML sanitizer keeping common formatting tags\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sanitizeHtml = html => {\n  const ALLOWED_TAGS = ['b', 'i', 'u', 'strong', 'em', 'p', 'div', 'span', 'br', 'ul', 'ol', 'li', 'h1', 'h2', 'h3', 'code', 'a'];\n  const doc = new DOMParser().parseFromString(html, 'text/html');\n  const frag = document.createDocumentFragment();\n  const cleanNode = node => {\n    if (node.nodeType === Node.TEXT_NODE) {\n      return document.createTextNode(node.textContent);\n    }\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      const tag = node.tagName.toLowerCase();\n      if (ALLOWED_TAGS.includes(tag)) {\n        const el = document.createElement(tag);\n        if (tag === 'a' && node.getAttribute('href')) {\n          el.setAttribute('href', node.getAttribute('href'));\n          el.setAttribute('target', '_blank');\n          el.setAttribute('rel', 'noopener noreferrer');\n        }\n        if (node.getAttribute('style')) {\n          el.setAttribute('style', node.getAttribute('style'));\n        }\n        node.childNodes.forEach(child => {\n          const cleaned = cleanNode(child);\n          if (cleaned) el.appendChild(cleaned);\n        });\n        return el;\n      }\n      // flatten children of disallowed tags\n      const container = document.createDocumentFragment();\n      node.childNodes.forEach(child => {\n        const cleaned = cleanNode(child);\n        if (cleaned) container.appendChild(cleaned);\n      });\n      return container;\n    }\n    return null;\n  };\n  Array.from(doc.body.childNodes).forEach(n => {\n    const cleaned = cleanNode(n);\n    if (cleaned) frag.appendChild(cleaned);\n  });\n  const wrapper = document.createElement('div');\n  wrapper.appendChild(frag);\n  return wrapper.innerHTML.replace(/(<br\\s*\\/?>\\s*){2,}/gi, '<br>');\n};\n\n// Remove MS Word specific markup and normalize\nconst cleanPastedContent = html => {\n  if (!html) return '';\n  let cleaned = html.replace(/<!--StartFragment-->|<!--EndFragment-->/gi, '').replace(/<!--[^]*?-->/g, '').replace(/<(\\/?o:p)[^>]*>/gi, '').replace(/\\sclass=(\"|')?Mso.*?(\"|')/gi, '').replace(/\\s*mso-[^:]+:[^;\"']+;?/gi, '');\n  const doc = new DOMParser().parseFromString(cleaned, 'text/html');\n  const body = doc.body || doc;\n  body.querySelectorAll('[style]').forEach(el => {\n    const style = el.getAttribute('style').replace(/mso-[^:]+:[^;]+;?/gi, '').replace(/margin[^:]*:[^;]+;?/gi, '').replace(/padding[^:]*:[^;]+;?/gi, '');\n    if (style.trim()) {\n      el.setAttribute('style', style.trim());\n    } else {\n      el.removeAttribute('style');\n    }\n  });\n  return sanitizeHtml(body.innerHTML || '').trim();\n};\nconst MarkupEditor = /*#__PURE__*/_s(/*#__PURE__*/React.forwardRef(_c = _s(({\n  initialHTML,\n  onChange\n}, ref) => {\n  _s();\n  const localRef = useRef(null);\n  const editorRef = ref || localRef;\n  useEffect(() => {\n    if (editorRef.current) {\n      editorRef.current.innerHTML = initialHTML || '';\n      setTimeout(() => editorRef.current && editorRef.current.focus(), 0);\n    }\n  }, [initialHTML, editorRef]);\n  const emitChange = () => {\n    if (editorRef.current && onChange) {\n      onChange(editorRef.current.innerHTML);\n    }\n  };\n  const handlePaste = e => {\n    e.preventDefault();\n    const clipboard = e.clipboardData || window.clipboardData;\n    const htmlData = clipboard.getData('text/html');\n    const textData = clipboard.getData('text/plain');\n    let clean;\n    if (htmlData) {\n      clean = cleanPastedContent(htmlData);\n    } else {\n      clean = textData.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\r\\n|\\r|\\n/g, '<br>');\n    }\n    document.execCommand('insertHTML', false, clean);\n    emitChange();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: editorRef,\n    contentEditable: true,\n    onInput: emitChange,\n    onPaste: handlePaste,\n    className: \"w-full p-3 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n    style: {\n      minHeight: '150px',\n      whiteSpace: 'pre-wrap',\n      wordBreak: 'break-word',\n      fontFamily: 'inherit'\n    },\n    suppressContentEditableWarning: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}, \"28K6HmXVpFGf/iqhT8LTjwTKC6E=\")), \"28K6HmXVpFGf/iqhT8LTjwTKC6E=\");\n_c2 = MarkupEditor;\nexport default MarkupEditor;\nvar _c, _c2;\n$RefreshReg$(_c, \"MarkupEditor$React.forwardRef\");\n$RefreshReg$(_c2, \"MarkupEditor\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","sanitizeHtml","html","ALLOWED_TAGS","doc","DOMParser","parseFromString","frag","document","createDocumentFragment","cleanNode","node","nodeType","Node","TEXT_NODE","createTextNode","textContent","ELEMENT_NODE","tag","tagName","toLowerCase","includes","el","createElement","getAttribute","setAttribute","childNodes","forEach","child","cleaned","appendChild","container","Array","from","body","n","wrapper","innerHTML","replace","cleanPastedContent","querySelectorAll","style","trim","removeAttribute","MarkupEditor","_s","forwardRef","_c","initialHTML","onChange","ref","localRef","editorRef","current","setTimeout","focus","emitChange","handlePaste","e","preventDefault","clipboard","clipboardData","window","htmlData","getData","textData","clean","execCommand","contentEditable","onInput","onPaste","className","minHeight","whiteSpace","wordBreak","fontFamily","suppressContentEditableWarning","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/local clones/rubric-creation-app/src/MarkupEditor.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\n// Basic HTML sanitizer keeping common formatting tags\nconst sanitizeHtml = (html) => {\n  const ALLOWED_TAGS = [\n    'b', 'i', 'u', 'strong', 'em', 'p', 'div', 'span', 'br', 'ul', 'ol', 'li',\n    'h1', 'h2', 'h3', 'code', 'a'\n  ];\n\n  const doc = new DOMParser().parseFromString(html, 'text/html');\n  const frag = document.createDocumentFragment();\n\n  const cleanNode = (node) => {\n    if (node.nodeType === Node.TEXT_NODE) {\n      return document.createTextNode(node.textContent);\n    }\n\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      const tag = node.tagName.toLowerCase();\n      if (ALLOWED_TAGS.includes(tag)) {\n        const el = document.createElement(tag);\n        if (tag === 'a' && node.getAttribute('href')) {\n          el.setAttribute('href', node.getAttribute('href'));\n          el.setAttribute('target', '_blank');\n          el.setAttribute('rel', 'noopener noreferrer');\n        }\n        if (node.getAttribute('style')) {\n          el.setAttribute('style', node.getAttribute('style'));\n        }\n        node.childNodes.forEach((child) => {\n          const cleaned = cleanNode(child);\n          if (cleaned) el.appendChild(cleaned);\n        });\n        return el;\n      }\n      // flatten children of disallowed tags\n      const container = document.createDocumentFragment();\n      node.childNodes.forEach((child) => {\n        const cleaned = cleanNode(child);\n        if (cleaned) container.appendChild(cleaned);\n      });\n      return container;\n    }\n    return null;\n  };\n\n  Array.from(doc.body.childNodes).forEach((n) => {\n    const cleaned = cleanNode(n);\n    if (cleaned) frag.appendChild(cleaned);\n  });\n\n  const wrapper = document.createElement('div');\n  wrapper.appendChild(frag);\n  return wrapper.innerHTML.replace(/(<br\\s*\\/?>\\s*){2,}/gi, '<br>');\n};\n\n// Remove MS Word specific markup and normalize\nconst cleanPastedContent = (html) => {\n  if (!html) return '';\n  let cleaned = html\n    .replace(/<!--StartFragment-->|<!--EndFragment-->/gi, '')\n    .replace(/<!--[^]*?-->/g, '')\n    .replace(/<(\\/?o:p)[^>]*>/gi, '')\n    .replace(/\\sclass=(\"|')?Mso.*?(\"|')/gi, '')\n    .replace(/\\s*mso-[^:]+:[^;\"']+;?/gi, '');\n\n  const doc = new DOMParser().parseFromString(cleaned, 'text/html');\n  const body = doc.body || doc;\n\n  body.querySelectorAll('[style]').forEach((el) => {\n    const style = el.getAttribute('style')\n      .replace(/mso-[^:]+:[^;]+;?/gi, '')\n      .replace(/margin[^:]*:[^;]+;?/gi, '')\n      .replace(/padding[^:]*:[^;]+;?/gi, '');\n    if (style.trim()) {\n      el.setAttribute('style', style.trim());\n    } else {\n      el.removeAttribute('style');\n    }\n  });\n\n  return sanitizeHtml(body.innerHTML || '').trim();\n};\n\nconst MarkupEditor = React.forwardRef(({ initialHTML, onChange }, ref) => {\n  const localRef = useRef(null);\n  const editorRef = ref || localRef;\n\n  useEffect(() => {\n    if (editorRef.current) {\n      editorRef.current.innerHTML = initialHTML || '';\n      setTimeout(() => editorRef.current && editorRef.current.focus(), 0);\n    }\n  }, [initialHTML, editorRef]);\n\n  const emitChange = () => {\n    if (editorRef.current && onChange) {\n      onChange(editorRef.current.innerHTML);\n    }\n  };\n\n  const handlePaste = (e) => {\n    e.preventDefault();\n    const clipboard = e.clipboardData || window.clipboardData;\n    const htmlData = clipboard.getData('text/html');\n    const textData = clipboard.getData('text/plain');\n    let clean;\n    if (htmlData) {\n      clean = cleanPastedContent(htmlData);\n    } else {\n      clean = textData\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\\r\\n|\\r|\\n/g, '<br>');\n    }\n    document.execCommand('insertHTML', false, clean);\n    emitChange();\n  };\n\n  return (\n    <div\n      ref={editorRef}\n      contentEditable\n      onInput={emitChange}\n      onPaste={handlePaste}\n      className=\"w-full p-3 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n      style={{ minHeight: '150px', whiteSpace: 'pre-wrap', wordBreak: 'break-word', fontFamily: 'inherit' }}\n      suppressContentEditableWarning\n    />\n  );\n});\n\nexport default MarkupEditor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}