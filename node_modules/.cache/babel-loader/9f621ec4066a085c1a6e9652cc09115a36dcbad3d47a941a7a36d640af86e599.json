{"ast":null,"code":"var _jsxFileName = \"C:\\\\local clones\\\\rubric-creation-app\\\\src\\\\RichTextEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport ReactQuill from 'react-quill';\nimport DOMPurify from 'dompurify';\nimport 'react-quill/dist/quill.snow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modules = {\n  toolbar: [[{\n    font: []\n  }], [{\n    header: [1, 2, 3, false]\n  }], ['bold', 'italic', 'underline', 'strike'], [{\n    color: []\n  }, {\n    background: []\n  }], [{\n    list: 'ordered'\n  }, {\n    list: 'bullet'\n  }], [{\n    indent: '-1'\n  }, {\n    indent: '+1'\n  }], ['blockquote', 'code-block'], ['link', 'image'], ['clean']],\n  clipboard: {\n    matchVisual: false\n  }\n};\nconst formats = ['font', 'header', 'bold', 'italic', 'underline', 'strike', 'color', 'background', 'list', 'bullet', 'indent', 'blockquote', 'code-block', 'link', 'image'];\nfunction sanitizeWordHtml(html) {\n  let cleaned = html.replace(/<!--(Start|End)Fragment-->/g, '');\n  cleaned = cleaned.replace(/class=\"Mso[^\"]*\"/gi, '');\n  cleaned = cleaned.replace(/style=\"[^\"]*mso-[^;]*;?\"/gi, '');\n  return DOMPurify.sanitize(cleaned, {\n    ALLOWED_TAGS: ['p', 'div', 'span', 'br', 'strong', 'b', 'em', 'i', 'u', 'strike', 'ol', 'ul', 'li', 'a', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'pre', 'code', 'img'],\n    ALLOWED_ATTR: ['href', 'src', 'alt', 'style'],\n    ALLOW_ARIA_ATTR: false\n  });\n}\nconst RichTextEditor = /*#__PURE__*/_s(/*#__PURE__*/React.forwardRef(_c = _s(({\n  value,\n  onChange\n}, ref) => {\n  _s();\n  const quillRef = useRef(null);\n  const editorRef = ref || quillRef;\n  useEffect(() => {\n    if (editorRef.current && value !== undefined) {\n      const editor = editorRef.current.getEditor();\n      editor.clipboard.dangerouslyPasteHTML(value);\n    }\n  }, [value, editorRef]);\n  useEffect(() => {\n    var _editorRef$current;\n    const editor = (_editorRef$current = editorRef.current) === null || _editorRef$current === void 0 ? void 0 : _editorRef$current.getEditor();\n    if (!editor) return;\n    const handlePaste = e => {\n      const clipboard = e.clipboardData || window.clipboardData;\n      const htmlData = clipboard.getData('text/html');\n      const textData = clipboard.getData('text/plain');\n      if (htmlData) {\n        e.preventDefault();\n        const clean = sanitizeWordHtml(htmlData);\n        const range = editor.getSelection();\n        const index = range ? range.index : editor.getLength();\n        editor.clipboard.dangerouslyPasteHTML(index, clean);\n        editor.setSelection(index + clean.length);\n      } else if (textData) {\n        e.preventDefault();\n        const escaped = textData.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\r\\n|\\r|\\n/g, '<br>');\n        const range = editor.getSelection();\n        const index = range ? range.index : editor.getLength();\n        editor.clipboard.dangerouslyPasteHTML(index, escaped);\n        editor.setSelection(index + escaped.length);\n      }\n    };\n    editor.root.addEventListener('paste', handlePaste);\n    return () => editor.root.removeEventListener('paste', handlePaste);\n  }, [editorRef]);\n  return /*#__PURE__*/_jsxDEV(ReactQuill, {\n    ref: editorRef,\n    value: value,\n    onChange: onChange,\n    modules: modules,\n    formats: formats,\n    theme: \"snow\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}, \"VxSe0DTIAzDK2ygbOOBpK0ocHIY=\")), \"VxSe0DTIAzDK2ygbOOBpK0ocHIY=\");\n_c2 = RichTextEditor;\nexport default RichTextEditor;\nvar _c, _c2;\n$RefreshReg$(_c, \"RichTextEditor$React.forwardRef\");\n$RefreshReg$(_c2, \"RichTextEditor\");","map":{"version":3,"names":["React","useEffect","useRef","ReactQuill","DOMPurify","jsxDEV","_jsxDEV","modules","toolbar","font","header","color","background","list","indent","clipboard","matchVisual","formats","sanitizeWordHtml","html","cleaned","replace","sanitize","ALLOWED_TAGS","ALLOWED_ATTR","ALLOW_ARIA_ATTR","RichTextEditor","_s","forwardRef","_c","value","onChange","ref","quillRef","editorRef","current","undefined","editor","getEditor","dangerouslyPasteHTML","_editorRef$current","handlePaste","e","clipboardData","window","htmlData","getData","textData","preventDefault","clean","range","getSelection","index","getLength","setSelection","length","escaped","root","addEventListener","removeEventListener","theme","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/local clones/rubric-creation-app/src/RichTextEditor.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport ReactQuill from 'react-quill';\nimport DOMPurify from 'dompurify';\nimport 'react-quill/dist/quill.snow.css';\n\nconst modules = {\n  toolbar: [\n    [{ font: [] }],\n    [{ header: [1, 2, 3, false] }],\n    ['bold', 'italic', 'underline', 'strike'],\n    [{ color: [] }, { background: [] }],\n    [{ list: 'ordered' }, { list: 'bullet' }],\n    [{ indent: '-1' }, { indent: '+1' }],\n    ['blockquote', 'code-block'],\n    ['link', 'image'],\n    ['clean']\n  ],\n  clipboard: {\n    matchVisual: false\n  }\n};\n\nconst formats = [\n  'font', 'header',\n  'bold', 'italic', 'underline', 'strike',\n  'color', 'background',\n  'list', 'bullet', 'indent',\n  'blockquote', 'code-block',\n  'link', 'image'\n];\n\nfunction sanitizeWordHtml(html) {\n  let cleaned = html.replace(/<!--(Start|End)Fragment-->/g, '');\n  cleaned = cleaned.replace(/class=\"Mso[^\"]*\"/gi, '');\n  cleaned = cleaned.replace(/style=\"[^\"]*mso-[^;]*;?\"/gi, '');\n  return DOMPurify.sanitize(cleaned, {\n    ALLOWED_TAGS: [\n      'p','div','span','br','strong','b','em','i','u','strike',\n      'ol','ul','li','a','h1','h2','h3','h4','h5','h6','pre','code','img'\n    ],\n    ALLOWED_ATTR: ['href','src','alt','style'],\n    ALLOW_ARIA_ATTR: false\n  });\n}\n\nconst RichTextEditor = React.forwardRef(({ value, onChange }, ref) => {\n  const quillRef = useRef(null);\n  const editorRef = ref || quillRef;\n\n  useEffect(() => {\n    if (editorRef.current && value !== undefined) {\n      const editor = editorRef.current.getEditor();\n      editor.clipboard.dangerouslyPasteHTML(value);\n    }\n  }, [value, editorRef]);\n\n  useEffect(() => {\n    const editor = editorRef.current?.getEditor();\n    if (!editor) return;\n    const handlePaste = (e) => {\n      const clipboard = e.clipboardData || window.clipboardData;\n      const htmlData = clipboard.getData('text/html');\n      const textData = clipboard.getData('text/plain');\n      if (htmlData) {\n        e.preventDefault();\n        const clean = sanitizeWordHtml(htmlData);\n        const range = editor.getSelection();\n        const index = range ? range.index : editor.getLength();\n        editor.clipboard.dangerouslyPasteHTML(index, clean);\n        editor.setSelection(index + clean.length);\n      } else if (textData) {\n        e.preventDefault();\n        const escaped = textData\n          .replace(/&/g, '&amp;')\n          .replace(/</g, '&lt;')\n          .replace(/>/g, '&gt;')\n          .replace(/\\r\\n|\\r|\\n/g, '<br>');\n        const range = editor.getSelection();\n        const index = range ? range.index : editor.getLength();\n        editor.clipboard.dangerouslyPasteHTML(index, escaped);\n        editor.setSelection(index + escaped.length);\n      }\n    };\n    editor.root.addEventListener('paste', handlePaste);\n    return () => editor.root.removeEventListener('paste', handlePaste);\n  }, [editorRef]);\n\n  return (\n    <ReactQuill\n      ref={editorRef}\n      value={value}\n      onChange={onChange}\n      modules={modules}\n      formats={formats}\n      theme=\"snow\"\n    />\n  );\n});\n\nexport default RichTextEditor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}