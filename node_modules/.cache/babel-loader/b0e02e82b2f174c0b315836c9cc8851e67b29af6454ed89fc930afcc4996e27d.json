{"ast":null,"code":"var _jsxFileName = \"C:\\\\local clones\\\\rubric-creation-app\\\\src\\\\components\\\\SharedContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// SharedContext.js - Enhanced Privacy-Focused Session Management\n// Implements 1-hour session timeout with automatic data cleanup\n\nimport React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssessmentContext = /*#__PURE__*/createContext();\n\n// Session configuration constants\nconst SESSION_TIMEOUT_MS = 60 * 60 * 1000; // 1 hour in milliseconds\nconst SESSION_WARNING_MS = 55 * 60 * 1000; // 55 minutes - warning time\nconst SESSION_KEY = 'gradingSession';\nconst SESSION_DATA_KEY = 'sessionData';\n\n// Privacy-compliant session manager\nclass SessionManager {\n  constructor() {\n    this.sessionTimer = null;\n    this.warningTimer = null;\n    this.onSessionExpired = null;\n    this.onSessionWarning = null;\n  }\n  startSession() {\n    const sessionStart = Date.now();\n    const sessionData = {\n      startTime: sessionStart,\n      expiryTime: sessionStart + SESSION_TIMEOUT_MS,\n      isActive: true\n    };\n\n    // Store session metadata only (no user data)\n    try {\n      sessionStorage.setItem(SESSION_KEY, JSON.stringify(sessionData));\n      console.log('‚úÖ New session started, expires in 1 hour');\n    } catch (error) {\n      console.error('Failed to start session:', error);\n    }\n    this.setTimers();\n    return sessionData;\n  }\n  setTimers() {\n    // Clear existing timers\n    this.clearTimers();\n\n    // Set warning timer (55 minutes)\n    this.warningTimer = setTimeout(() => {\n      this.triggerWarning();\n    }, SESSION_WARNING_MS);\n\n    // Set expiry timer (60 minutes)\n    this.sessionTimer = setTimeout(() => {\n      this.expireSession();\n    }, SESSION_TIMEOUT_MS);\n  }\n  triggerWarning() {\n    console.warn('‚ö†Ô∏è Session expires in 5 minutes');\n    if (this.onSessionWarning) {\n      this.onSessionWarning();\n    }\n  }\n  expireSession() {\n    console.log('üïê Session expired - clearing all data');\n    this.clearAllSessionData();\n    if (this.onSessionExpired) {\n      this.onSessionExpired();\n    }\n  }\n  clearTimers() {\n    if (this.warningTimer) {\n      clearTimeout(this.warningTimer);\n      this.warningTimer = null;\n    }\n    if (this.sessionTimer) {\n      clearTimeout(this.sessionTimer);\n      this.sessionTimer = null;\n    }\n  }\n  isSessionValid() {\n    try {\n      const sessionData = sessionStorage.getItem(SESSION_KEY);\n      if (!sessionData) return false;\n      const session = JSON.parse(sessionData);\n      const now = Date.now();\n      return session.isActive && now < session.expiryTime;\n    } catch (error) {\n      console.error('Session validation error:', error);\n      return false;\n    }\n  }\n  clearAllSessionData() {\n    // Clear session storage\n    try {\n      sessionStorage.clear();\n    } catch (error) {\n      console.error('Failed to clear session storage:', error);\n    }\n\n    // Clear localStorage (legacy data)\n    try {\n      localStorage.removeItem('gradingDrafts');\n      localStorage.removeItem('finalGrades');\n      localStorage.removeItem('customLatePolicies');\n      localStorage.removeItem('currentLatePolicy');\n      localStorage.removeItem('activeGradeBook');\n      localStorage.removeItem('activeClassList');\n      // Clear any other persistent data\n      console.log('‚úÖ All persistent data cleared');\n    } catch (error) {\n      console.error('Failed to clear localStorage:', error);\n    }\n    this.clearTimers();\n  }\n  extendSession() {\n    if (this.isSessionValid()) {\n      this.startSession(); // Restart session with new timer\n      return true;\n    }\n    return false;\n  }\n  getTimeRemaining() {\n    try {\n      const sessionData = sessionStorage.getItem(SESSION_KEY);\n      if (!sessionData) return 0;\n      const session = JSON.parse(sessionData);\n      const now = Date.now();\n      const remaining = session.expiryTime - now;\n      return Math.max(0, remaining);\n    } catch (error) {\n      console.error('Error getting time remaining:', error);\n      return 0;\n    }\n  }\n}\nexport const AssessmentProvider = ({\n  children\n}) => {\n  _s();\n  // Session management\n  const [sessionManager] = useState(() => new SessionManager());\n  const [sessionActive, setSessionActive] = useState(false);\n  const [showSessionWarning, setShowSessionWarning] = useState(false);\n\n  // Navigation state\n  const [activeTab, setActiveTab] = useState('class-manager');\n\n  // Shared rubric state\n  const [sharedRubric, setSharedRubric] = useState(null);\n  const [sharedCourseDetails, setSharedCourseDetails] = useState(null);\n\n  // Form data states - session-only\n  const [gradingFormData, setGradingFormData] = useState({\n    studentInfo: {\n      name: '',\n      id: '',\n      email: ''\n    },\n    courseInfo: {\n      code: '',\n      name: '',\n      instructor: ''\n    },\n    assignmentInfo: {\n      name: '',\n      dueDate: '',\n      maxPoints: 100\n    },\n    feedbackInfo: {\n      overallFeedback: '',\n      privateNotes: ''\n    },\n    attachments: [],\n    videoLinks: [],\n    latePolicy: {\n      isLate: false,\n      penalty: 0,\n      reason: ''\n    },\n    rubricGrading: {},\n    metadata: {\n      submissionDate: '',\n      gradedAt: ''\n    }\n  });\n\n  // AI form states\n  const [aiPromptFormData, setAIPromptFormData] = useState({\n    assignmentType: '',\n    learningObjectives: '',\n    skillLevel: '',\n    rubricLevels: [],\n    criteria: [],\n    additionalInstructions: ''\n  });\n  const [assignmentPromptFormData, setAssignmentPromptFormData] = useState({\n    assignmentType: '',\n    topic: '',\n    difficultyLevel: '',\n    learningObjectives: '',\n    deliverables: '',\n    constraints: '',\n    additionalRequirements: ''\n  });\n\n  // Grade management - session-only, no persistence\n  const [drafts, setDrafts] = useState({});\n  const [finalGrades, setFinalGrades] = useState({});\n\n  // Class and grading session management\n  const [classList, setClassList] = useState(null);\n  const [currentStudent, setCurrentStudent] = useState(null);\n  const [gradingSession, setGradingSession] = useState({\n    active: false,\n    classListData: null,\n    currentStudentIndex: 0,\n    currentStudent: null,\n    startedAt: null\n  });\n\n  // Grade book state - requires manual import\n  const [gradeBook, setGradeBook] = useState(null);\n\n  // Late policy management\n  const [customLatePolicies, setCustomLatePolicies] = useState([]);\n  const [currentLatePolicy, setCurrentLatePolicy] = useState({\n    id: 'default',\n    name: 'Standard Late Policy',\n    type: 'percentage',\n    penaltyRate: 10,\n    gracePeriod: 0,\n    maxPenalty: 100\n  });\n\n  // Initialize session on mount\n  useEffect(() => {\n    // Clear all data on startup - privacy requirement\n    sessionManager.clearAllSessionData();\n\n    // Start new session\n    sessionManager.startSession();\n    setSessionActive(true);\n\n    // Set up session event handlers\n    sessionManager.onSessionWarning = () => {\n      setShowSessionWarning(true);\n    };\n    sessionManager.onSessionExpired = () => {\n      // Clear all application state\n      clearAllData();\n      setSessionActive(false);\n      setShowSessionWarning(false);\n      alert('Session expired after 1 hour. All data has been cleared for privacy.');\n    };\n\n    // Check for existing session validity\n    if (!sessionManager.isSessionValid()) {\n      sessionManager.startSession();\n    }\n    return () => {\n      sessionManager.clearTimers();\n    };\n  }, []);\n\n  // Session management functions\n  const extendSession = useCallback(() => {\n    if (sessionManager.extendSession()) {\n      setShowSessionWarning(false);\n      alert('Session extended for another hour.');\n    } else {\n      alert('Unable to extend session. Please save your work and restart.');\n    }\n  }, [sessionManager]);\n  const getSessionTimeRemaining = useCallback(() => {\n    return sessionManager.getTimeRemaining();\n  }, [sessionManager]);\n\n  // Clear all data function\n  const clearAllData = useCallback(() => {\n    setSharedRubric(null);\n    setSharedCourseDetails(null);\n    setGradingFormData({\n      studentInfo: {\n        name: '',\n        id: '',\n        email: ''\n      },\n      courseInfo: {\n        code: '',\n        name: '',\n        instructor: ''\n      },\n      assignmentInfo: {\n        name: '',\n        dueDate: '',\n        maxPoints: 100\n      },\n      feedbackInfo: {\n        overallFeedback: '',\n        privateNotes: ''\n      },\n      attachments: [],\n      videoLinks: [],\n      latePolicy: {\n        isLate: false,\n        penalty: 0,\n        reason: ''\n      },\n      rubricGrading: {},\n      metadata: {\n        submissionDate: '',\n        gradedAt: ''\n      }\n    });\n    setAIPromptFormData({\n      assignmentType: '',\n      learningObjectives: '',\n      skillLevel: '',\n      rubricLevels: [],\n      criteria: [],\n      additionalInstructions: ''\n    });\n    setAssignmentPromptFormData({\n      assignmentType: '',\n      topic: '',\n      difficultyLevel: '',\n      learningObjectives: '',\n      deliverables: '',\n      constraints: '',\n      additionalRequirements: ''\n    });\n    setDrafts({});\n    setFinalGrades({});\n    setClassList(null);\n    setCurrentStudent(null);\n    setGradingSession({\n      active: false,\n      classListData: null,\n      currentStudentIndex: 0,\n      currentStudent: null,\n      startedAt: null\n    });\n    setGradeBook(null); // Grade book must be manually imported\n    setCustomLatePolicies([]);\n    console.log('‚úÖ All application data cleared');\n  }, []);\n\n  // Form update functions\n  const updateStudentInfo = useCallback((field, value) => {\n    setGradingFormData(prev => ({\n      ...prev,\n      studentInfo: {\n        ...prev.studentInfo,\n        [field]: value\n      }\n    }));\n  }, []);\n  const updateCourseInfo = useCallback((field, value) => {\n    setGradingFormData(prev => ({\n      ...prev,\n      courseInfo: {\n        ...prev.courseInfo,\n        [field]: value\n      }\n    }));\n  }, []);\n  const updateAssignmentInfo = useCallback((field, value) => {\n    setGradingFormData(prev => ({\n      ...prev,\n      assignmentInfo: {\n        ...prev.assignmentInfo,\n        [field]: value\n      }\n    }));\n  }, []);\n  const updateFeedbackInfo = useCallback((field, value) => {\n    setGradingFormData(prev => ({\n      ...prev,\n      feedbackInfo: {\n        ...prev.feedbackInfo,\n        [field]: value\n      }\n    }));\n  }, []);\n  const updateAttachments = useCallback(attachments => {\n    setGradingFormData(prev => ({\n      ...prev,\n      attachments\n    }));\n  }, []);\n  const updateVideoLinks = useCallback(videoLinks => {\n    setGradingFormData(prev => ({\n      ...prev,\n      videoLinks\n    }));\n  }, []);\n  const updateLatePolicyInfo = useCallback((field, value) => {\n    setGradingFormData(prev => ({\n      ...prev,\n      latePolicy: {\n        ...prev.latePolicy,\n        [field]: value\n      }\n    }));\n  }, []);\n  const updateRubricGrading = useCallback((criterionId, data) => {\n    setGradingFormData(prev => ({\n      ...prev,\n      rubricGrading: {\n        ...prev.rubricGrading,\n        [criterionId]: data\n      }\n    }));\n  }, []);\n  const updateMetadata = useCallback((field, value) => {\n    setGradingFormData(prev => ({\n      ...prev,\n      metadata: {\n        ...prev.metadata,\n        [field]: value\n      }\n    }));\n  }, []);\n\n  // AI Prompt form functions\n  const updateAIPromptFormData = useCallback((field, value) => {\n    setAIPromptFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  }, []);\n  const initializeAIPromptFormData = useCallback(data => {\n    setAIPromptFormData(data);\n  }, []);\n  const clearAIPromptFormData = useCallback(() => {\n    setAIPromptFormData({\n      assignmentType: '',\n      learningObjectives: '',\n      skillLevel: '',\n      rubricLevels: [],\n      criteria: [],\n      additionalInstructions: ''\n    });\n  }, []);\n\n  // Assignment Prompt form functions\n  const updateAssignmentPromptFormData = useCallback((field, value) => {\n    setAssignmentPromptFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  }, []);\n  const initializeAssignmentPromptFormData = useCallback(data => {\n    setAssignmentPromptFormData(data);\n  }, []);\n  const clearAssignmentPromptFormData = useCallback(() => {\n    setAssignmentPromptFormData({\n      assignmentType: '',\n      topic: '',\n      difficultyLevel: '',\n      learningObjectives: '',\n      deliverables: '',\n      constraints: '',\n      additionalRequirements: ''\n    });\n  }, []);\n\n  // Grade management - session-only, no localStorage persistence\n  const saveDraft = useCallback((studentId, gradeData) => {\n    if (!sessionActive) {\n      console.warn('Cannot save draft - session inactive');\n      return;\n    }\n    const draftData = {\n      ...gradeData,\n      savedAt: new Date().toISOString(),\n      type: 'draft'\n    };\n    setDrafts(prev => ({\n      ...prev,\n      [studentId]: draftData\n    }));\n    console.log('‚úÖ Draft saved for student:', studentId, '(session only)');\n  }, [sessionActive]);\n  const loadDraft = useCallback(studentId => {\n    return drafts[studentId] || null;\n  }, [drafts]);\n  const saveFinalGrade = useCallback((studentId, gradeData) => {\n    if (!sessionActive) {\n      console.warn('Cannot save final grade - session inactive');\n      return;\n    }\n    const finalData = {\n      ...gradeData,\n      finalizedAt: new Date().toISOString(),\n      type: 'final'\n    };\n    setFinalGrades(prev => ({\n      ...prev,\n      [studentId]: finalData\n    }));\n\n    // Remove from drafts when finalized\n    setDrafts(prev => {\n      const newDrafts = {\n        ...prev\n      };\n      delete newDrafts[studentId];\n      return newDrafts;\n    });\n    console.log('‚úÖ Final grade saved for student:', studentId, '(session only)');\n  }, [sessionActive]);\n  const loadFinalGrade = useCallback(studentId => {\n    return finalGrades[studentId] || null;\n  }, [finalGrades]);\n  const getGradeStatus = useCallback(studentId => {\n    if (finalGrades[studentId]) return 'final';\n    if (drafts[studentId]) return 'draft';\n    return 'none';\n  }, [drafts, finalGrades]);\n  const hasDraft = useCallback(studentId => {\n    return getGradeStatus(studentId) === 'draft';\n  }, [getGradeStatus]);\n  const finalizeGrade = useCallback(studentId => {\n    const draft = loadDraft(studentId);\n    if (draft) {\n      saveFinalGrade(studentId, draft);\n      return true;\n    }\n    return false;\n  }, [loadDraft, saveFinalGrade]);\n  const unlockGrade = useCallback(studentId => {\n    const finalGrade = loadFinalGrade(studentId);\n    if (finalGrade) {\n      saveDraft(studentId, {\n        ...finalGrade,\n        type: 'draft'\n      });\n      setFinalGrades(prev => {\n        const newFinals = {\n          ...prev\n        };\n        delete newFinals[studentId];\n        return newFinals;\n      });\n      console.log('‚úÖ Grade unlocked for student:', studentId);\n      return true;\n    }\n    return false;\n  }, [loadFinalGrade, saveDraft]);\n\n  // Clear form functions\n  const clearGradingFormData = useCallback(() => {\n    setGradingFormData({\n      studentInfo: {\n        name: '',\n        id: '',\n        email: ''\n      },\n      courseInfo: {\n        code: '',\n        name: '',\n        instructor: ''\n      },\n      assignmentInfo: {\n        name: '',\n        dueDate: '',\n        maxPoints: 100\n      },\n      feedbackInfo: {\n        overallFeedback: '',\n        privateNotes: ''\n      },\n      attachments: [],\n      videoLinks: [],\n      latePolicy: {\n        isLate: false,\n        penalty: 0,\n        reason: ''\n      },\n      rubricGrading: {},\n      metadata: {\n        submissionDate: '',\n        gradedAt: ''\n      }\n    });\n  }, []);\n\n  // Context value\n  const value = {\n    // Session management\n    sessionActive,\n    showSessionWarning,\n    extendSession,\n    getSessionTimeRemaining,\n    clearAllData,\n    // Shared state\n    sharedRubric,\n    setSharedRubric,\n    sharedCourseDetails,\n    setSharedCourseDetails,\n    // Navigation\n    activeTab,\n    setActiveTab,\n    // AI Prompt Generator\n    aiPromptFormData,\n    updateAIPromptFormData,\n    initializeAIPromptFormData,\n    clearAIPromptFormData,\n    // Assignment Prompt Generator\n    assignmentPromptFormData,\n    updateAssignmentPromptFormData,\n    initializeAssignmentPromptFormData,\n    clearAssignmentPromptFormData,\n    // Grading form data\n    gradingData: gradingFormData,\n    setGradingData: setGradingFormData,\n    clearGradingFormData,\n    persistentFormData: gradingFormData,\n    updatePersistentFormData: setGradingFormData,\n    // Form update functions\n    updateStudentInfo,\n    updateCourseInfo,\n    updateAssignmentInfo,\n    updateFeedbackInfo,\n    updateAttachments,\n    updateVideoLinks,\n    updateLatePolicyInfo,\n    updateRubricGrading,\n    updateMetadata,\n    // Draft and Final Grade Management\n    drafts,\n    finalGrades,\n    saveDraft,\n    loadDraft,\n    saveFinalGrade,\n    loadFinalGrade,\n    getGradeStatus,\n    hasDraft,\n    finalizeGrade,\n    unlockGrade,\n    // Class management\n    classList,\n    setClassList,\n    currentStudent,\n    setCurrentStudent,\n    gradingSession,\n    setGradingSession,\n    // Grade book - requires manual import\n    gradeBook,\n    setGradeBook,\n    // Late policy management\n    customLatePolicies,\n    setCustomLatePolicies,\n    currentLatePolicy,\n    setCurrentLatePolicy\n  };\n  return /*#__PURE__*/_jsxDEV(AssessmentContext.Provider, {\n    value: value,\n    children: [children, showSessionWarning && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg p-6 max-w-md mx-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold text-orange-600 mb-2\",\n          children: \"\\u26A0\\uFE0F Session Expiring Soon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-700 mb-4\",\n          children: \"Your session will expire in 5 minutes. All data will be cleared for privacy.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: extendSession,\n            className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n            children: \"Extend Session\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowSessionWarning(false),\n            className: \"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\",\n            children: \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 600,\n    columnNumber: 9\n  }, this);\n};\n_s(AssessmentProvider, \"07pf+n+5yvdvQW3uBoY+BtMkLWk=\");\n_c = AssessmentProvider;\nexport const useAssessment = () => {\n  _s2();\n  const context = useContext(AssessmentContext);\n  if (!context) {\n    throw new Error('useAssessment must be used within an AssessmentProvider');\n  }\n  return context;\n};\n_s2(useAssessment, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AssessmentProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","jsxDEV","_jsxDEV","AssessmentContext","SESSION_TIMEOUT_MS","SESSION_WARNING_MS","SESSION_KEY","SESSION_DATA_KEY","SessionManager","constructor","sessionTimer","warningTimer","onSessionExpired","onSessionWarning","startSession","sessionStart","Date","now","sessionData","startTime","expiryTime","isActive","sessionStorage","setItem","JSON","stringify","console","log","error","setTimers","clearTimers","setTimeout","triggerWarning","expireSession","warn","clearAllSessionData","clearTimeout","isSessionValid","getItem","session","parse","clear","localStorage","removeItem","extendSession","getTimeRemaining","remaining","Math","max","AssessmentProvider","children","_s","sessionManager","sessionActive","setSessionActive","showSessionWarning","setShowSessionWarning","activeTab","setActiveTab","sharedRubric","setSharedRubric","sharedCourseDetails","setSharedCourseDetails","gradingFormData","setGradingFormData","studentInfo","name","id","email","courseInfo","code","instructor","assignmentInfo","dueDate","maxPoints","feedbackInfo","overallFeedback","privateNotes","attachments","videoLinks","latePolicy","isLate","penalty","reason","rubricGrading","metadata","submissionDate","gradedAt","aiPromptFormData","setAIPromptFormData","assignmentType","learningObjectives","skillLevel","rubricLevels","criteria","additionalInstructions","assignmentPromptFormData","setAssignmentPromptFormData","topic","difficultyLevel","deliverables","constraints","additionalRequirements","drafts","setDrafts","finalGrades","setFinalGrades","classList","setClassList","currentStudent","setCurrentStudent","gradingSession","setGradingSession","active","classListData","currentStudentIndex","startedAt","gradeBook","setGradeBook","customLatePolicies","setCustomLatePolicies","currentLatePolicy","setCurrentLatePolicy","type","penaltyRate","gracePeriod","maxPenalty","clearAllData","alert","getSessionTimeRemaining","updateStudentInfo","field","value","prev","updateCourseInfo","updateAssignmentInfo","updateFeedbackInfo","updateAttachments","updateVideoLinks","updateLatePolicyInfo","updateRubricGrading","criterionId","data","updateMetadata","updateAIPromptFormData","initializeAIPromptFormData","clearAIPromptFormData","updateAssignmentPromptFormData","initializeAssignmentPromptFormData","clearAssignmentPromptFormData","saveDraft","studentId","gradeData","draftData","savedAt","toISOString","loadDraft","saveFinalGrade","finalData","finalizedAt","newDrafts","loadFinalGrade","getGradeStatus","hasDraft","finalizeGrade","draft","unlockGrade","finalGrade","newFinals","clearGradingFormData","gradingData","setGradingData","persistentFormData","updatePersistentFormData","Provider","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","useAssessment","_s2","context","Error","$RefreshReg$"],"sources":["C:/local clones/rubric-creation-app/src/components/SharedContext.js"],"sourcesContent":["// SharedContext.js - Enhanced Privacy-Focused Session Management\r\n// Implements 1-hour session timeout with automatic data cleanup\r\n\r\nimport React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\r\n\r\nconst AssessmentContext = createContext();\r\n\r\n// Session configuration constants\r\nconst SESSION_TIMEOUT_MS = 60 * 60 * 1000; // 1 hour in milliseconds\r\nconst SESSION_WARNING_MS = 55 * 60 * 1000; // 55 minutes - warning time\r\nconst SESSION_KEY = 'gradingSession';\r\nconst SESSION_DATA_KEY = 'sessionData';\r\n\r\n// Privacy-compliant session manager\r\nclass SessionManager {\r\n    constructor() {\r\n        this.sessionTimer = null;\r\n        this.warningTimer = null;\r\n        this.onSessionExpired = null;\r\n        this.onSessionWarning = null;\r\n    }\r\n\r\n    startSession() {\r\n        const sessionStart = Date.now();\r\n        const sessionData = {\r\n            startTime: sessionStart,\r\n            expiryTime: sessionStart + SESSION_TIMEOUT_MS,\r\n            isActive: true\r\n        };\r\n\r\n        // Store session metadata only (no user data)\r\n        try {\r\n            sessionStorage.setItem(SESSION_KEY, JSON.stringify(sessionData));\r\n            console.log('‚úÖ New session started, expires in 1 hour');\r\n        } catch (error) {\r\n            console.error('Failed to start session:', error);\r\n        }\r\n\r\n        this.setTimers();\r\n        return sessionData;\r\n    }\r\n\r\n    setTimers() {\r\n        // Clear existing timers\r\n        this.clearTimers();\r\n\r\n        // Set warning timer (55 minutes)\r\n        this.warningTimer = setTimeout(() => {\r\n            this.triggerWarning();\r\n        }, SESSION_WARNING_MS);\r\n\r\n        // Set expiry timer (60 minutes)\r\n        this.sessionTimer = setTimeout(() => {\r\n            this.expireSession();\r\n        }, SESSION_TIMEOUT_MS);\r\n    }\r\n\r\n    triggerWarning() {\r\n        console.warn('‚ö†Ô∏è Session expires in 5 minutes');\r\n        if (this.onSessionWarning) {\r\n            this.onSessionWarning();\r\n        }\r\n    }\r\n\r\n    expireSession() {\r\n        console.log('üïê Session expired - clearing all data');\r\n        this.clearAllSessionData();\r\n        if (this.onSessionExpired) {\r\n            this.onSessionExpired();\r\n        }\r\n    }\r\n\r\n    clearTimers() {\r\n        if (this.warningTimer) {\r\n            clearTimeout(this.warningTimer);\r\n            this.warningTimer = null;\r\n        }\r\n        if (this.sessionTimer) {\r\n            clearTimeout(this.sessionTimer);\r\n            this.sessionTimer = null;\r\n        }\r\n    }\r\n\r\n    isSessionValid() {\r\n        try {\r\n            const sessionData = sessionStorage.getItem(SESSION_KEY);\r\n            if (!sessionData) return false;\r\n\r\n            const session = JSON.parse(sessionData);\r\n            const now = Date.now();\r\n\r\n            return session.isActive && now < session.expiryTime;\r\n        } catch (error) {\r\n            console.error('Session validation error:', error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    clearAllSessionData() {\r\n        // Clear session storage\r\n        try {\r\n            sessionStorage.clear();\r\n        } catch (error) {\r\n            console.error('Failed to clear session storage:', error);\r\n        }\r\n\r\n        // Clear localStorage (legacy data)\r\n        try {\r\n            localStorage.removeItem('gradingDrafts');\r\n            localStorage.removeItem('finalGrades');\r\n            localStorage.removeItem('customLatePolicies');\r\n            localStorage.removeItem('currentLatePolicy');\r\n            localStorage.removeItem('activeGradeBook');\r\n            localStorage.removeItem('activeClassList');\r\n            // Clear any other persistent data\r\n            console.log('‚úÖ All persistent data cleared');\r\n        } catch (error) {\r\n            console.error('Failed to clear localStorage:', error);\r\n        }\r\n\r\n        this.clearTimers();\r\n    }\r\n\r\n    extendSession() {\r\n        if (this.isSessionValid()) {\r\n            this.startSession(); // Restart session with new timer\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getTimeRemaining() {\r\n        try {\r\n            const sessionData = sessionStorage.getItem(SESSION_KEY);\r\n            if (!sessionData) return 0;\r\n\r\n            const session = JSON.parse(sessionData);\r\n            const now = Date.now();\r\n            const remaining = session.expiryTime - now;\r\n\r\n            return Math.max(0, remaining);\r\n        } catch (error) {\r\n            console.error('Error getting time remaining:', error);\r\n            return 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport const AssessmentProvider = ({ children }) => {\r\n    // Session management\r\n    const [sessionManager] = useState(() => new SessionManager());\r\n    const [sessionActive, setSessionActive] = useState(false);\r\n    const [showSessionWarning, setShowSessionWarning] = useState(false);\r\n\r\n    // Navigation state\r\n    const [activeTab, setActiveTab] = useState('class-manager');\r\n\r\n    // Shared rubric state\r\n    const [sharedRubric, setSharedRubric] = useState(null);\r\n    const [sharedCourseDetails, setSharedCourseDetails] = useState(null);\r\n\r\n    // Form data states - session-only\r\n    const [gradingFormData, setGradingFormData] = useState({\r\n        studentInfo: { name: '', id: '', email: '' },\r\n        courseInfo: { code: '', name: '', instructor: '' },\r\n        assignmentInfo: { name: '', dueDate: '', maxPoints: 100 },\r\n        feedbackInfo: { overallFeedback: '', privateNotes: '' },\r\n        attachments: [],\r\n        videoLinks: [],\r\n        latePolicy: { isLate: false, penalty: 0, reason: '' },\r\n        rubricGrading: {},\r\n        metadata: { submissionDate: '', gradedAt: '' }\r\n    });\r\n\r\n    // AI form states\r\n    const [aiPromptFormData, setAIPromptFormData] = useState({\r\n        assignmentType: '',\r\n        learningObjectives: '',\r\n        skillLevel: '',\r\n        rubricLevels: [],\r\n        criteria: [],\r\n        additionalInstructions: ''\r\n    });\r\n\r\n    const [assignmentPromptFormData, setAssignmentPromptFormData] = useState({\r\n        assignmentType: '',\r\n        topic: '',\r\n        difficultyLevel: '',\r\n        learningObjectives: '',\r\n        deliverables: '',\r\n        constraints: '',\r\n        additionalRequirements: ''\r\n    });\r\n\r\n    // Grade management - session-only, no persistence\r\n    const [drafts, setDrafts] = useState({});\r\n    const [finalGrades, setFinalGrades] = useState({});\r\n\r\n    // Class and grading session management\r\n    const [classList, setClassList] = useState(null);\r\n    const [currentStudent, setCurrentStudent] = useState(null);\r\n    const [gradingSession, setGradingSession] = useState({\r\n        active: false,\r\n        classListData: null,\r\n        currentStudentIndex: 0,\r\n        currentStudent: null,\r\n        startedAt: null\r\n    });\r\n\r\n    // Grade book state - requires manual import\r\n    const [gradeBook, setGradeBook] = useState(null);\r\n\r\n    // Late policy management\r\n    const [customLatePolicies, setCustomLatePolicies] = useState([]);\r\n    const [currentLatePolicy, setCurrentLatePolicy] = useState({\r\n        id: 'default',\r\n        name: 'Standard Late Policy',\r\n        type: 'percentage',\r\n        penaltyRate: 10,\r\n        gracePeriod: 0,\r\n        maxPenalty: 100\r\n    });\r\n\r\n    // Initialize session on mount\r\n    useEffect(() => {\r\n        // Clear all data on startup - privacy requirement\r\n        sessionManager.clearAllSessionData();\r\n\r\n        // Start new session\r\n        sessionManager.startSession();\r\n        setSessionActive(true);\r\n\r\n        // Set up session event handlers\r\n        sessionManager.onSessionWarning = () => {\r\n            setShowSessionWarning(true);\r\n        };\r\n\r\n        sessionManager.onSessionExpired = () => {\r\n            // Clear all application state\r\n            clearAllData();\r\n            setSessionActive(false);\r\n            setShowSessionWarning(false);\r\n            alert('Session expired after 1 hour. All data has been cleared for privacy.');\r\n        };\r\n\r\n        // Check for existing session validity\r\n        if (!sessionManager.isSessionValid()) {\r\n            sessionManager.startSession();\r\n        }\r\n\r\n        return () => {\r\n            sessionManager.clearTimers();\r\n        };\r\n    }, []);\r\n\r\n    // Session management functions\r\n    const extendSession = useCallback(() => {\r\n        if (sessionManager.extendSession()) {\r\n            setShowSessionWarning(false);\r\n            alert('Session extended for another hour.');\r\n        } else {\r\n            alert('Unable to extend session. Please save your work and restart.');\r\n        }\r\n    }, [sessionManager]);\r\n\r\n    const getSessionTimeRemaining = useCallback(() => {\r\n        return sessionManager.getTimeRemaining();\r\n    }, [sessionManager]);\r\n\r\n    // Clear all data function\r\n    const clearAllData = useCallback(() => {\r\n        setSharedRubric(null);\r\n        setSharedCourseDetails(null);\r\n        setGradingFormData({\r\n            studentInfo: { name: '', id: '', email: '' },\r\n            courseInfo: { code: '', name: '', instructor: '' },\r\n            assignmentInfo: { name: '', dueDate: '', maxPoints: 100 },\r\n            feedbackInfo: { overallFeedback: '', privateNotes: '' },\r\n            attachments: [],\r\n            videoLinks: [],\r\n            latePolicy: { isLate: false, penalty: 0, reason: '' },\r\n            rubricGrading: {},\r\n            metadata: { submissionDate: '', gradedAt: '' }\r\n        });\r\n        setAIPromptFormData({\r\n            assignmentType: '',\r\n            learningObjectives: '',\r\n            skillLevel: '',\r\n            rubricLevels: [],\r\n            criteria: [],\r\n            additionalInstructions: ''\r\n        });\r\n        setAssignmentPromptFormData({\r\n            assignmentType: '',\r\n            topic: '',\r\n            difficultyLevel: '',\r\n            learningObjectives: '',\r\n            deliverables: '',\r\n            constraints: '',\r\n            additionalRequirements: ''\r\n        });\r\n        setDrafts({});\r\n        setFinalGrades({});\r\n        setClassList(null);\r\n        setCurrentStudent(null);\r\n        setGradingSession({\r\n            active: false,\r\n            classListData: null,\r\n            currentStudentIndex: 0,\r\n            currentStudent: null,\r\n            startedAt: null\r\n        });\r\n        setGradeBook(null); // Grade book must be manually imported\r\n        setCustomLatePolicies([]);\r\n        console.log('‚úÖ All application data cleared');\r\n    }, []);\r\n\r\n    // Form update functions\r\n    const updateStudentInfo = useCallback((field, value) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            studentInfo: { ...prev.studentInfo, [field]: value }\r\n        }));\r\n    }, []);\r\n\r\n    const updateCourseInfo = useCallback((field, value) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            courseInfo: { ...prev.courseInfo, [field]: value }\r\n        }));\r\n    }, []);\r\n\r\n    const updateAssignmentInfo = useCallback((field, value) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            assignmentInfo: { ...prev.assignmentInfo, [field]: value }\r\n        }));\r\n    }, []);\r\n\r\n    const updateFeedbackInfo = useCallback((field, value) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            feedbackInfo: { ...prev.feedbackInfo, [field]: value }\r\n        }));\r\n    }, []);\r\n\r\n    const updateAttachments = useCallback((attachments) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            attachments\r\n        }));\r\n    }, []);\r\n\r\n    const updateVideoLinks = useCallback((videoLinks) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            videoLinks\r\n        }));\r\n    }, []);\r\n\r\n    const updateLatePolicyInfo = useCallback((field, value) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            latePolicy: { ...prev.latePolicy, [field]: value }\r\n        }));\r\n    }, []);\r\n\r\n    const updateRubricGrading = useCallback((criterionId, data) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            rubricGrading: { ...prev.rubricGrading, [criterionId]: data }\r\n        }));\r\n    }, []);\r\n\r\n    const updateMetadata = useCallback((field, value) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            metadata: { ...prev.metadata, [field]: value }\r\n        }));\r\n    }, []);\r\n\r\n    // AI Prompt form functions\r\n    const updateAIPromptFormData = useCallback((field, value) => {\r\n        setAIPromptFormData(prev => ({ ...prev, [field]: value }));\r\n    }, []);\r\n\r\n    const initializeAIPromptFormData = useCallback((data) => {\r\n        setAIPromptFormData(data);\r\n    }, []);\r\n\r\n    const clearAIPromptFormData = useCallback(() => {\r\n        setAIPromptFormData({\r\n            assignmentType: '',\r\n            learningObjectives: '',\r\n            skillLevel: '',\r\n            rubricLevels: [],\r\n            criteria: [],\r\n            additionalInstructions: ''\r\n        });\r\n    }, []);\r\n\r\n    // Assignment Prompt form functions\r\n    const updateAssignmentPromptFormData = useCallback((field, value) => {\r\n        setAssignmentPromptFormData(prev => ({ ...prev, [field]: value }));\r\n    }, []);\r\n\r\n    const initializeAssignmentPromptFormData = useCallback((data) => {\r\n        setAssignmentPromptFormData(data);\r\n    }, []);\r\n\r\n    const clearAssignmentPromptFormData = useCallback(() => {\r\n        setAssignmentPromptFormData({\r\n            assignmentType: '',\r\n            topic: '',\r\n            difficultyLevel: '',\r\n            learningObjectives: '',\r\n            deliverables: '',\r\n            constraints: '',\r\n            additionalRequirements: ''\r\n        });\r\n    }, []);\r\n\r\n    // Grade management - session-only, no localStorage persistence\r\n    const saveDraft = useCallback((studentId, gradeData) => {\r\n        if (!sessionActive) {\r\n            console.warn('Cannot save draft - session inactive');\r\n            return;\r\n        }\r\n\r\n        const draftData = {\r\n            ...gradeData,\r\n            savedAt: new Date().toISOString(),\r\n            type: 'draft'\r\n        };\r\n        setDrafts(prev => ({ ...prev, [studentId]: draftData }));\r\n        console.log('‚úÖ Draft saved for student:', studentId, '(session only)');\r\n    }, [sessionActive]);\r\n\r\n    const loadDraft = useCallback((studentId) => {\r\n        return drafts[studentId] || null;\r\n    }, [drafts]);\r\n\r\n    const saveFinalGrade = useCallback((studentId, gradeData) => {\r\n        if (!sessionActive) {\r\n            console.warn('Cannot save final grade - session inactive');\r\n            return;\r\n        }\r\n\r\n        const finalData = {\r\n            ...gradeData,\r\n            finalizedAt: new Date().toISOString(),\r\n            type: 'final'\r\n        };\r\n        setFinalGrades(prev => ({ ...prev, [studentId]: finalData }));\r\n\r\n        // Remove from drafts when finalized\r\n        setDrafts(prev => {\r\n            const newDrafts = { ...prev };\r\n            delete newDrafts[studentId];\r\n            return newDrafts;\r\n        });\r\n\r\n        console.log('‚úÖ Final grade saved for student:', studentId, '(session only)');\r\n    }, [sessionActive]);\r\n\r\n    const loadFinalGrade = useCallback((studentId) => {\r\n        return finalGrades[studentId] || null;\r\n    }, [finalGrades]);\r\n\r\n    const getGradeStatus = useCallback((studentId) => {\r\n        if (finalGrades[studentId]) return 'final';\r\n        if (drafts[studentId]) return 'draft';\r\n        return 'none';\r\n    }, [drafts, finalGrades]);\r\n\r\n    const hasDraft = useCallback((studentId) => {\r\n        return getGradeStatus(studentId) === 'draft';\r\n    }, [getGradeStatus]);\r\n\r\n    const finalizeGrade = useCallback((studentId) => {\r\n        const draft = loadDraft(studentId);\r\n        if (draft) {\r\n            saveFinalGrade(studentId, draft);\r\n            return true;\r\n        }\r\n        return false;\r\n    }, [loadDraft, saveFinalGrade]);\r\n\r\n    const unlockGrade = useCallback((studentId) => {\r\n        const finalGrade = loadFinalGrade(studentId);\r\n        if (finalGrade) {\r\n            saveDraft(studentId, { ...finalGrade, type: 'draft' });\r\n            setFinalGrades(prev => {\r\n                const newFinals = { ...prev };\r\n                delete newFinals[studentId];\r\n                return newFinals;\r\n            });\r\n            console.log('‚úÖ Grade unlocked for student:', studentId);\r\n            return true;\r\n        }\r\n        return false;\r\n    }, [loadFinalGrade, saveDraft]);\r\n\r\n    // Clear form functions\r\n    const clearGradingFormData = useCallback(() => {\r\n        setGradingFormData({\r\n            studentInfo: { name: '', id: '', email: '' },\r\n            courseInfo: { code: '', name: '', instructor: '' },\r\n            assignmentInfo: { name: '', dueDate: '', maxPoints: 100 },\r\n            feedbackInfo: { overallFeedback: '', privateNotes: '' },\r\n            attachments: [],\r\n            videoLinks: [],\r\n            latePolicy: { isLate: false, penalty: 0, reason: '' },\r\n            rubricGrading: {},\r\n            metadata: { submissionDate: '', gradedAt: '' }\r\n        });\r\n    }, []);\r\n\r\n    // Context value\r\n    const value = {\r\n        // Session management\r\n        sessionActive,\r\n        showSessionWarning,\r\n        extendSession,\r\n        getSessionTimeRemaining,\r\n        clearAllData,\r\n\r\n        // Shared state\r\n        sharedRubric,\r\n        setSharedRubric,\r\n        sharedCourseDetails,\r\n        setSharedCourseDetails,\r\n\r\n        // Navigation\r\n        activeTab,\r\n        setActiveTab,\r\n\r\n        // AI Prompt Generator\r\n        aiPromptFormData,\r\n        updateAIPromptFormData,\r\n        initializeAIPromptFormData,\r\n        clearAIPromptFormData,\r\n\r\n        // Assignment Prompt Generator\r\n        assignmentPromptFormData,\r\n        updateAssignmentPromptFormData,\r\n        initializeAssignmentPromptFormData,\r\n        clearAssignmentPromptFormData,\r\n\r\n        // Grading form data\r\n        gradingData: gradingFormData,\r\n        setGradingData: setGradingFormData,\r\n        clearGradingFormData,\r\n        persistentFormData: gradingFormData,\r\n        updatePersistentFormData: setGradingFormData,\r\n\r\n        // Form update functions\r\n        updateStudentInfo,\r\n        updateCourseInfo,\r\n        updateAssignmentInfo,\r\n        updateFeedbackInfo,\r\n        updateAttachments,\r\n        updateVideoLinks,\r\n        updateLatePolicyInfo,\r\n        updateRubricGrading,\r\n        updateMetadata,\r\n\r\n        // Draft and Final Grade Management\r\n        drafts,\r\n        finalGrades,\r\n        saveDraft,\r\n        loadDraft,\r\n        saveFinalGrade,\r\n        loadFinalGrade,\r\n        getGradeStatus,\r\n        hasDraft,\r\n        finalizeGrade,\r\n        unlockGrade,\r\n\r\n        // Class management\r\n        classList,\r\n        setClassList,\r\n        currentStudent,\r\n        setCurrentStudent,\r\n        gradingSession,\r\n        setGradingSession,\r\n\r\n        // Grade book - requires manual import\r\n        gradeBook,\r\n        setGradeBook,\r\n\r\n        // Late policy management\r\n        customLatePolicies,\r\n        setCustomLatePolicies,\r\n        currentLatePolicy,\r\n        setCurrentLatePolicy\r\n    };\r\n\r\n    return (\r\n        <AssessmentContext.Provider value={value}>\r\n            {children}\r\n            {/* Session warning modal */}\r\n            {showSessionWarning && (\r\n                <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n                    <div className=\"bg-white rounded-lg p-6 max-w-md mx-4\">\r\n                        <h3 className=\"text-lg font-semibold text-orange-600 mb-2\">\r\n                            ‚ö†Ô∏è Session Expiring Soon\r\n                        </h3>\r\n                        <p className=\"text-gray-700 mb-4\">\r\n                            Your session will expire in 5 minutes. All data will be cleared for privacy.\r\n                        </p>\r\n                        <div className=\"flex gap-3\">\r\n                            <button\r\n                                onClick={extendSession}\r\n                                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\r\n                            >\r\n                                Extend Session\r\n                            </button>\r\n                            <button\r\n                                onClick={() => setShowSessionWarning(false)}\r\n                                className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\"\r\n                            >\r\n                                Continue\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </AssessmentContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAssessment = () => {\r\n    const context = useContext(AssessmentContext);\r\n    if (!context) {\r\n        throw new Error('useAssessment must be used within an AssessmentProvider');\r\n    }\r\n    return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}