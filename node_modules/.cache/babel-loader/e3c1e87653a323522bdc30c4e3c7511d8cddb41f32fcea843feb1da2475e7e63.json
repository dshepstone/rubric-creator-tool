{"ast":null,"code":"var _jsxFileName = \"C:\\\\local clones\\\\rubric-creation-app\\\\src\\\\RichTextEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Bold, Italic, Underline, Strikethrough, Heading1, Heading2, Heading3, List, ListOrdered, Link as LinkIcon, Undo2, Redo2, Eraser } from 'lucide-react';\n\n// Sanitize pasted HTML, keeping only allowed tags and flattening everything else\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sanitizeHtml = html => {\n  const ALLOWED_TAGS = ['b', 'i', 'u', 'strong', 'em', 'p', 'div', 'span', 'br', 'ul', 'ol', 'li', 'h1', 'h2', 'h3', 'code', 'a'];\n  const doc = new DOMParser().parseFromString(html, 'text/html');\n  const frag = document.createDocumentFragment();\n  const cleanNode = node => {\n    if (node.nodeType === Node.TEXT_NODE) {\n      return document.createTextNode(node.textContent);\n    }\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      const tag = node.tagName.toLowerCase();\n      if (ALLOWED_TAGS.includes(tag)) {\n        const el = document.createElement(tag);\n        if (tag === 'a' && node.getAttribute('href')) {\n          el.setAttribute('href', node.getAttribute('href'));\n          el.setAttribute('target', '_blank');\n          el.setAttribute('rel', 'noopener noreferrer');\n        }\n        if (node.getAttribute('style')) {\n          el.setAttribute('style', node.getAttribute('style'));\n        }\n        node.childNodes.forEach(child => {\n          const cleaned = cleanNode(child);\n          if (cleaned) el.appendChild(cleaned);\n        });\n        return el;\n      }\n\n      // Flatten children of disallowed tags\n      const container = document.createDocumentFragment();\n      node.childNodes.forEach(child => {\n        const cleaned = cleanNode(child);\n        if (cleaned) container.appendChild(cleaned);\n      });\n      return container;\n    }\n    return null;\n  };\n  Array.from(doc.body.childNodes).forEach(n => {\n    const cleaned = cleanNode(n);\n    if (cleaned) frag.appendChild(cleaned);\n  });\n  const wrapper = document.createElement('div');\n  wrapper.appendChild(frag);\n  return wrapper.innerHTML.replace(/(<br\\s*\\/?>\\s*){2,}/gi, '<br>');\n};\n\n// Remove Microsoft Word specific markup and normalize blocks\nconst cleanPastedContent = html => {\n  if (!html) return '';\n  let cleaned = html.replace(/<!--StartFragment-->|<!--EndFragment-->/gi, '').replace(/<!--[^]*?-->/g, '').replace(/<(\\/)?o:p[^>]*>/gi, '').replace(/\\sclass=(\"|')?Mso.*?(\"|')/gi, '').replace(/\\s*mso-[^:]+:[^;\"']+;?/gi, '');\n  const doc = new DOMParser().parseFromString(cleaned, 'text/html');\n  const body = doc.body || doc;\n  body.querySelectorAll('[style]').forEach(el => {\n    const style = el.getAttribute('style').replace(/mso-[^:]+:[^;]+;?/gi, '').replace(/margin[^:]*:[^;]+;?/gi, '').replace(/padding[^:]*:[^;]+;?/gi, '');\n    if (style.trim()) {\n      el.setAttribute('style', style.trim());\n    } else {\n      el.removeAttribute('style');\n    }\n  });\n\n  // Replace <p> with <div> to avoid Word margins\n  body.querySelectorAll('p').forEach(p => {\n    const div = doc.createElement('div');\n    div.innerHTML = p.innerHTML;\n    p.replaceWith(div);\n  });\n  return sanitizeHtml(body.innerHTML || '').replace(/(<div>\\s*<br>\\s*<\\/div>)+/gi, '<br>').replace(/(<br\\s*\\/?>\\s*){2,}/gi, '<br>');\n};\nconst ToolbarButton = ({\n  icon: Icon,\n  onClick,\n  title\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  type: \"button\",\n  onClick: onClick,\n  title: title,\n  className: \"p-1 hover:bg-gray-200 rounded\",\n  children: /*#__PURE__*/_jsxDEV(Icon, {\n    size: 16\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 134,\n  columnNumber: 3\n}, this);\n_c = ToolbarButton;\nconst RichTextEditor = /*#__PURE__*/_s(/*#__PURE__*/React.forwardRef(_c2 = _s(({\n  initialHTML,\n  onChange\n}, ref) => {\n  _s();\n  const localRef = useRef(null);\n  const editorRef = ref || localRef;\n  useEffect(() => {\n    if (editorRef.current) {\n      editorRef.current.innerHTML = initialHTML || '';\n      // focus after mount\n      setTimeout(() => editorRef.current && editorRef.current.focus(), 0);\n    }\n  }, [initialHTML, editorRef]);\n  const emitChange = () => {\n    if (editorRef.current && onChange) {\n      onChange(editorRef.current.innerHTML);\n    }\n  };\n  const handlePaste = e => {\n    e.preventDefault();\n    const clipboard = e.clipboardData || window.clipboardData;\n    const htmlData = clipboard.getData('text/html');\n    const textData = clipboard.getData('text/plain');\n    let clean;\n    if (htmlData) {\n      clean = cleanPastedContent(htmlData);\n    } else {\n      clean = textData.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\r\\n|\\r|\\n/g, '<br>');\n    }\n    document.execCommand('insertHTML', false, clean);\n    emitChange();\n  };\n  const exec = (command, value = null) => {\n    document.execCommand(command, false, value);\n    emitChange();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap gap-1 border-b border-gray-200 bg-gray-50 p-2 mb-2 overflow-x-auto\",\n      children: [/*#__PURE__*/_jsxDEV(ToolbarButton, {\n        icon: Bold,\n        onClick: () => exec('bold'),\n        title: \"Bold\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToolbarButton, {\n        icon: Italic,\n        onClick: () => exec('italic'),\n        title: \"Italic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToolbarButton, {\n        icon: Underline,\n        onClick: () => exec('underline'),\n        title: \"Underline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToolbarButton, {\n        icon: Strikethrough,\n        onClick: () => exec('strikeThrough'),\n        title: \"Strikethrough\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mx-1 border-l border-gray-300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToolbarButton, {\n        icon: Heading1,\n        onClick: () => exec('formatBlock', 'h1'),\n        title: \"Heading 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToolbarButton, {\n        icon: Heading2,\n        onClick: () => exec('formatBlock', 'h2'),\n        title: \"Heading 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToolbarButton, {\n        icon: Heading3,\n        onClick: () => exec('formatBlock', 'h3'),\n        title: \"Heading 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mx-1 border-l border-gray-300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToolbarButton, {\n        icon: List,\n        onClick: () => exec('insertUnorderedList'),\n        title: \"Bulleted List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToolbarButton, {\n        icon: ListOrdered,\n        onClick: () => exec('insertOrderedList'),\n        title: \"Numbered List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mx-1 border-l border-gray-300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToolbarButton, {\n        icon: LinkIcon,\n        onClick: () => {\n          const url = prompt('Enter URL');\n          if (url) exec('createLink', url);\n        },\n        title: \"Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToolbarButton, {\n        icon: Undo2,\n        onClick: () => exec('undo'),\n        title: \"Undo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToolbarButton, {\n        icon: Redo2,\n        onClick: () => exec('redo'),\n        title: \"Redo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToolbarButton, {\n        icon: Eraser,\n        onClick: () => exec('removeFormat'),\n        title: \"Clear Formatting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        .rich-text-editor h1 { font-size: 1.5em; font-weight: bold; margin: 0.5em 0; }\n        .rich-text-editor h2 { font-size: 1.3em; font-weight: bold; margin: 0.4em 0; }\n        .rich-text-editor h3 { font-size: 1.1em; font-weight: bold; margin: 0.3em 0; }\n        .rich-text-editor p { margin: 0.5em 0; }\n        .rich-text-editor ul, .rich-text-editor ol { margin: 0.5em 0; padding-left: 1.5em; }\n        .rich-text-editor li { margin: 0.2em 0; }\n        .rich-text-editor blockquote {\n          margin: 0.5em 0;\n          padding: 0.5em 1em;\n          border-left: 4px solid #e5e7eb;\n          background: #f9fafb;\n          font-style: italic;\n        }\n        .rich-text-editor pre {\n          background: #f3f4f6;\n          padding: 0.5em;\n          border-radius: 4px;\n          font-family: monospace;\n          font-size: 0.9em;\n          white-space: pre-wrap;\n        }\n        .rich-text-editor a { color: #3b82f6; text-decoration: underline; }\n        .rich-text-editor hr { margin: 1em 0; border: none; border-top: 1px solid #d1d5db; }\n        .rich-text-editor br { line-height: 1.8; }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: editorRef,\n      contentEditable: true,\n      onInput: emitChange,\n      onPaste: handlePaste,\n      className: \"w-full p-4 border rounded-lg resize-none focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 rich-text-editor\",\n      style: {\n        minHeight: '150px',\n        backgroundColor: '#fff',\n        fontSize: '14px',\n        lineHeight: '1.8',\n        fontFamily: 'inherit',\n        whiteSpace: 'pre-wrap',\n        wordBreak: 'break-word'\n      },\n      suppressContentEditableWarning: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n}, \"28K6HmXVpFGf/iqhT8LTjwTKC6E=\")), \"28K6HmXVpFGf/iqhT8LTjwTKC6E=\");\n_c3 = RichTextEditor;\nexport default RichTextEditor;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ToolbarButton\");\n$RefreshReg$(_c2, \"RichTextEditor$React.forwardRef\");\n$RefreshReg$(_c3, \"RichTextEditor\");","map":{"version":3,"names":["React","useEffect","useRef","Bold","Italic","Underline","Strikethrough","Heading1","Heading2","Heading3","List","ListOrdered","Link","LinkIcon","Undo2","Redo2","Eraser","jsxDEV","_jsxDEV","sanitizeHtml","html","ALLOWED_TAGS","doc","DOMParser","parseFromString","frag","document","createDocumentFragment","cleanNode","node","nodeType","Node","TEXT_NODE","createTextNode","textContent","ELEMENT_NODE","tag","tagName","toLowerCase","includes","el","createElement","getAttribute","setAttribute","childNodes","forEach","child","cleaned","appendChild","container","Array","from","body","n","wrapper","innerHTML","replace","cleanPastedContent","querySelectorAll","style","trim","removeAttribute","p","div","replaceWith","ToolbarButton","icon","Icon","onClick","title","type","className","children","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","RichTextEditor","_s","forwardRef","_c2","initialHTML","onChange","ref","localRef","editorRef","current","setTimeout","focus","emitChange","handlePaste","e","preventDefault","clipboard","clipboardData","window","htmlData","getData","textData","clean","execCommand","exec","command","value","url","prompt","contentEditable","onInput","onPaste","minHeight","backgroundColor","fontSize","lineHeight","fontFamily","whiteSpace","wordBreak","suppressContentEditableWarning","_c3","$RefreshReg$"],"sources":["C:/local clones/rubric-creation-app/src/RichTextEditor.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport {\n  Bold,\n  Italic,\n  Underline,\n  Strikethrough,\n  Heading1,\n  Heading2,\n  Heading3,\n  List,\n  ListOrdered,\n  Link as LinkIcon,\n  Undo2,\n  Redo2,\n  Eraser\n} from 'lucide-react';\n\n// Sanitize pasted HTML, keeping only allowed tags and flattening everything else\nconst sanitizeHtml = (html) => {\n  const ALLOWED_TAGS = [\n    'b',\n    'i',\n    'u',\n    'strong',\n    'em',\n    'p',\n    'div',\n    'span',\n    'br',\n    'ul',\n    'ol',\n    'li',\n    'h1',\n    'h2',\n    'h3',\n    'code',\n    'a'\n  ];\n\n  const doc = new DOMParser().parseFromString(html, 'text/html');\n  const frag = document.createDocumentFragment();\n\n  const cleanNode = (node) => {\n    if (node.nodeType === Node.TEXT_NODE) {\n      return document.createTextNode(node.textContent);\n    }\n\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      const tag = node.tagName.toLowerCase();\n\n      if (ALLOWED_TAGS.includes(tag)) {\n        const el = document.createElement(tag);\n\n        if (tag === 'a' && node.getAttribute('href')) {\n          el.setAttribute('href', node.getAttribute('href'));\n          el.setAttribute('target', '_blank');\n          el.setAttribute('rel', 'noopener noreferrer');\n        }\n\n        if (node.getAttribute('style')) {\n          el.setAttribute('style', node.getAttribute('style'));\n        }\n\n        node.childNodes.forEach((child) => {\n          const cleaned = cleanNode(child);\n          if (cleaned) el.appendChild(cleaned);\n        });\n\n        return el;\n      }\n\n      // Flatten children of disallowed tags\n      const container = document.createDocumentFragment();\n      node.childNodes.forEach((child) => {\n        const cleaned = cleanNode(child);\n        if (cleaned) container.appendChild(cleaned);\n      });\n      return container;\n    }\n\n    return null;\n  };\n\n  Array.from(doc.body.childNodes).forEach((n) => {\n    const cleaned = cleanNode(n);\n    if (cleaned) frag.appendChild(cleaned);\n  });\n\n  const wrapper = document.createElement('div');\n  wrapper.appendChild(frag);\n\n  return wrapper.innerHTML.replace(/(<br\\s*\\/?>\\s*){2,}/gi, '<br>');\n};\n\n// Remove Microsoft Word specific markup and normalize blocks\nconst cleanPastedContent = (html) => {\n  if (!html) return '';\n\n  let cleaned = html\n    .replace(/<!--StartFragment-->|<!--EndFragment-->/gi, '')\n    .replace(/<!--[^]*?-->/g, '')\n    .replace(/<(\\/)?o:p[^>]*>/gi, '')\n    .replace(/\\sclass=(\"|')?Mso.*?(\"|')/gi, '')\n    .replace(/\\s*mso-[^:]+:[^;\"']+;?/gi, '');\n\n  const doc = new DOMParser().parseFromString(cleaned, 'text/html');\n  const body = doc.body || doc;\n\n  body.querySelectorAll('[style]').forEach((el) => {\n    const style = el.getAttribute('style')\n      .replace(/mso-[^:]+:[^;]+;?/gi, '')\n      .replace(/margin[^:]*:[^;]+;?/gi, '')\n      .replace(/padding[^:]*:[^;]+;?/gi, '');\n    if (style.trim()) {\n      el.setAttribute('style', style.trim());\n    } else {\n      el.removeAttribute('style');\n    }\n  });\n\n  // Replace <p> with <div> to avoid Word margins\n  body.querySelectorAll('p').forEach((p) => {\n    const div = doc.createElement('div');\n    div.innerHTML = p.innerHTML;\n    p.replaceWith(div);\n  });\n\n  return sanitizeHtml((body.innerHTML || ''))\n    .replace(/(<div>\\s*<br>\\s*<\\/div>)+/gi, '<br>')\n    .replace(/(<br\\s*\\/?>\\s*){2,}/gi, '<br>');\n};\n\nconst ToolbarButton = ({ icon: Icon, onClick, title }) => (\n  <button\n    type=\"button\"\n    onClick={onClick}\n    title={title}\n    className=\"p-1 hover:bg-gray-200 rounded\"\n  >\n    <Icon size={16} />\n  </button>\n);\n\nconst RichTextEditor = React.forwardRef(({ initialHTML, onChange }, ref) => {\n  const localRef = useRef(null);\n  const editorRef = ref || localRef;\n\n  useEffect(() => {\n    if (editorRef.current) {\n      editorRef.current.innerHTML = initialHTML || '';\n      // focus after mount\n      setTimeout(() => editorRef.current && editorRef.current.focus(), 0);\n    }\n  }, [initialHTML, editorRef]);\n\n  const emitChange = () => {\n    if (editorRef.current && onChange) {\n      onChange(editorRef.current.innerHTML);\n    }\n  };\n\n  const handlePaste = (e) => {\n    e.preventDefault();\n\n    const clipboard = e.clipboardData || window.clipboardData;\n    const htmlData = clipboard.getData('text/html');\n    const textData = clipboard.getData('text/plain');\n\n    let clean;\n    if (htmlData) {\n      clean = cleanPastedContent(htmlData);\n    } else {\n      clean = textData\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\\r\\n|\\r|\\n/g, '<br>');\n    }\n\n    document.execCommand('insertHTML', false, clean);\n    emitChange();\n  };\n\n  const exec = (command, value = null) => {\n    document.execCommand(command, false, value);\n    emitChange();\n  };\n\n  return (\n    <div>\n      <div className=\"flex flex-wrap gap-1 border-b border-gray-200 bg-gray-50 p-2 mb-2 overflow-x-auto\">\n        <ToolbarButton icon={Bold} onClick={() => exec('bold')} title=\"Bold\" />\n        <ToolbarButton icon={Italic} onClick={() => exec('italic')} title=\"Italic\" />\n        <ToolbarButton icon={Underline} onClick={() => exec('underline')} title=\"Underline\" />\n        <ToolbarButton icon={Strikethrough} onClick={() => exec('strikeThrough')} title=\"Strikethrough\" />\n        <span className=\"mx-1 border-l border-gray-300\" />\n        <ToolbarButton icon={Heading1} onClick={() => exec('formatBlock', 'h1')} title=\"Heading 1\" />\n        <ToolbarButton icon={Heading2} onClick={() => exec('formatBlock', 'h2')} title=\"Heading 2\" />\n        <ToolbarButton icon={Heading3} onClick={() => exec('formatBlock', 'h3')} title=\"Heading 3\" />\n        <span className=\"mx-1 border-l border-gray-300\" />\n        <ToolbarButton icon={List} onClick={() => exec('insertUnorderedList')} title=\"Bulleted List\" />\n        <ToolbarButton icon={ListOrdered} onClick={() => exec('insertOrderedList')} title=\"Numbered List\" />\n        <span className=\"mx-1 border-l border-gray-300\" />\n        <ToolbarButton icon={LinkIcon} onClick={() => { const url = prompt('Enter URL'); if (url) exec('createLink', url); }} title=\"Link\" />\n        <ToolbarButton icon={Undo2} onClick={() => exec('undo')} title=\"Undo\" />\n        <ToolbarButton icon={Redo2} onClick={() => exec('redo')} title=\"Redo\" />\n        <ToolbarButton icon={Eraser} onClick={() => exec('removeFormat')} title=\"Clear Formatting\" />\n      </div>\n      <style>{`\n        .rich-text-editor h1 { font-size: 1.5em; font-weight: bold; margin: 0.5em 0; }\n        .rich-text-editor h2 { font-size: 1.3em; font-weight: bold; margin: 0.4em 0; }\n        .rich-text-editor h3 { font-size: 1.1em; font-weight: bold; margin: 0.3em 0; }\n        .rich-text-editor p { margin: 0.5em 0; }\n        .rich-text-editor ul, .rich-text-editor ol { margin: 0.5em 0; padding-left: 1.5em; }\n        .rich-text-editor li { margin: 0.2em 0; }\n        .rich-text-editor blockquote {\n          margin: 0.5em 0;\n          padding: 0.5em 1em;\n          border-left: 4px solid #e5e7eb;\n          background: #f9fafb;\n          font-style: italic;\n        }\n        .rich-text-editor pre {\n          background: #f3f4f6;\n          padding: 0.5em;\n          border-radius: 4px;\n          font-family: monospace;\n          font-size: 0.9em;\n          white-space: pre-wrap;\n        }\n        .rich-text-editor a { color: #3b82f6; text-decoration: underline; }\n        .rich-text-editor hr { margin: 1em 0; border: none; border-top: 1px solid #d1d5db; }\n        .rich-text-editor br { line-height: 1.8; }\n      `}</style>\n      <div\n        ref={editorRef}\n        contentEditable\n        onInput={emitChange}\n        onPaste={handlePaste}\n        className=\"w-full p-4 border rounded-lg resize-none focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 rich-text-editor\"\n        style={{\n          minHeight: '150px',\n          backgroundColor: '#fff',\n          fontSize: '14px',\n          lineHeight: '1.8',\n          fontFamily: 'inherit',\n          whiteSpace: 'pre-wrap',\n          wordBreak: 'break-word'\n        }}\n        suppressContentEditableWarning={true}\n      />\n    </div>\n  );\n});\n\nexport default RichTextEditor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}