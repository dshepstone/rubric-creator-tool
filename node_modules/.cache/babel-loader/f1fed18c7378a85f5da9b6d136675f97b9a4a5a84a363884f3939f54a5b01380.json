{"ast":null,"code":"var _jsxFileName = \"C:\\\\local clones\\\\rubric-creation-app\\\\src\\\\RichTextEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport ReactQuill from 'react-quill';\nimport DOMPurify from 'dompurify';\nimport 'react-quill/dist/quill.snow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modules = {\n  toolbar: {\n    container: [[{\n      font: []\n    }, {\n      size: []\n    }], ['bold', 'italic', 'underline', 'strike'], [{\n      color: []\n    }, {\n      background: []\n    }], [{\n      list: 'ordered'\n    }, {\n      list: 'bullet'\n    }], [{\n      indent: '-1'\n    }, {\n      indent: '+1'\n    }], ['blockquote', 'code-block'], ['link', 'image'], ['clean'], ['undo', 'redo']],\n    handlers: {\n      undo() {\n        this.quill.history.undo();\n      },\n      redo() {\n        this.quill.history.redo();\n      }\n    }\n  },\n  history: {\n    delay: 500,\n    maxStack: 100,\n    userOnly: true\n  }\n};\nconst formats = ['font', 'size', 'bold', 'italic', 'underline', 'strike', 'color', 'background', 'list', 'indent', 'blockquote', 'code-block', 'link', 'image', 'clean'];\nconst cleanPastedContent = html => {\n  if (!html) return '';\n  let cleaned = html.replace(/<!--StartFragment-->|<!--EndFragment-->/gi, '').replace(/<!--[^]*?-->/g, '').replace(/<(\\/?o:p)[^>]*>/gi, '').replace(/\\sclass=(\"|')?Mso.*?(\"|')/gi, '').replace(/\\s*mso-[^:]+:[^;\"']+;?/gi, '');\n  return DOMPurify.sanitize(cleaned, {\n    USE_PROFILES: {\n      html: true\n    }\n  });\n};\nconst RichTextEditor = /*#__PURE__*/_s(/*#__PURE__*/React.forwardRef(_c = _s(({\n  value,\n  onChange\n}, ref) => {\n  _s();\n  const quillRef = ref || useRef(null);\n  useEffect(() => {\n    const quill = quillRef.current ? quillRef.current.getEditor() : null;\n    if (!quill) return;\n    const root = quill.root;\n    const handlePaste = e => {\n      const clipboard = e.clipboardData || window.clipboardData;\n      const htmlData = clipboard.getData('text/html');\n      if (htmlData) {\n        e.preventDefault();\n        const range = quill.getSelection(true);\n        const sanitized = cleanPastedContent(htmlData);\n        quill.clipboard.dangerouslyPasteHTML(range.index, sanitized, 'user');\n      }\n    };\n    root.addEventListener('paste', handlePaste);\n    return () => root.removeEventListener('paste', handlePaste);\n  }, [quillRef]);\n  const handleChange = content => {\n    if (onChange) {\n      const sanitized = DOMPurify.sanitize(content, {\n        USE_PROFILES: {\n          html: true\n        }\n      });\n      onChange(sanitized);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ReactQuill, {\n    ref: quillRef,\n    value: value,\n    onChange: handleChange,\n    modules: modules,\n    formats: formats,\n    theme: \"snow\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}, \"HI2rmkDStaXKpoO1B+Q8/ihvhA0=\")), \"HI2rmkDStaXKpoO1B+Q8/ihvhA0=\");\n_c2 = RichTextEditor;\nexport default RichTextEditor;\nvar _c, _c2;\n$RefreshReg$(_c, \"RichTextEditor$React.forwardRef\");\n$RefreshReg$(_c2, \"RichTextEditor\");","map":{"version":3,"names":["React","useEffect","useRef","ReactQuill","DOMPurify","jsxDEV","_jsxDEV","modules","toolbar","container","font","size","color","background","list","indent","handlers","undo","quill","history","redo","delay","maxStack","userOnly","formats","cleanPastedContent","html","cleaned","replace","sanitize","USE_PROFILES","RichTextEditor","_s","forwardRef","_c","value","onChange","ref","quillRef","current","getEditor","root","handlePaste","e","clipboard","clipboardData","window","htmlData","getData","preventDefault","range","getSelection","sanitized","dangerouslyPasteHTML","index","addEventListener","removeEventListener","handleChange","content","theme","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/local clones/rubric-creation-app/src/RichTextEditor.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport ReactQuill from 'react-quill';\nimport DOMPurify from 'dompurify';\nimport 'react-quill/dist/quill.snow.css';\n\nconst modules = {\n  toolbar: {\n    container: [\n      [{ font: [] }, { size: [] }],\n      ['bold', 'italic', 'underline', 'strike'],\n      [{ color: [] }, { background: [] }],\n      [{ list: 'ordered' }, { list: 'bullet' }],\n      [{ indent: '-1' }, { indent: '+1' }],\n      ['blockquote', 'code-block'],\n      ['link', 'image'],\n      ['clean'],\n      ['undo', 'redo']\n    ],\n    handlers: {\n      undo() { this.quill.history.undo(); },\n      redo() { this.quill.history.redo(); }\n    }\n  },\n  history: { delay: 500, maxStack: 100, userOnly: true }\n};\n\nconst formats = [\n  'font','size','bold','italic','underline','strike',\n  'color','background','list','indent','blockquote','code-block',\n  'link','image','clean'\n];\n\nconst cleanPastedContent = (html) => {\n  if (!html) return '';\n  let cleaned = html\n    .replace(/<!--StartFragment-->|<!--EndFragment-->/gi, '')\n    .replace(/<!--[^]*?-->/g, '')\n    .replace(/<(\\/?o:p)[^>]*>/gi, '')\n    .replace(/\\sclass=(\"|')?Mso.*?(\"|')/gi, '')\n    .replace(/\\s*mso-[^:]+:[^;\"']+;?/gi, '');\n  return DOMPurify.sanitize(cleaned, { USE_PROFILES: { html: true } });\n};\n\nconst RichTextEditor = React.forwardRef(({ value, onChange }, ref) => {\n  const quillRef = ref || useRef(null);\n\n  useEffect(() => {\n    const quill = quillRef.current ? quillRef.current.getEditor() : null;\n    if (!quill) return;\n    const root = quill.root;\n    const handlePaste = (e) => {\n      const clipboard = e.clipboardData || window.clipboardData;\n      const htmlData = clipboard.getData('text/html');\n      if (htmlData) {\n        e.preventDefault();\n        const range = quill.getSelection(true);\n        const sanitized = cleanPastedContent(htmlData);\n        quill.clipboard.dangerouslyPasteHTML(range.index, sanitized, 'user');\n      }\n    };\n    root.addEventListener('paste', handlePaste);\n    return () => root.removeEventListener('paste', handlePaste);\n  }, [quillRef]);\n\n  const handleChange = (content) => {\n    if (onChange) {\n      const sanitized = DOMPurify.sanitize(content, { USE_PROFILES: { html: true } });\n      onChange(sanitized);\n    }\n  };\n\n  return (\n    <ReactQuill\n      ref={quillRef}\n      value={value}\n      onChange={handleChange}\n      modules={modules}\n      formats={formats}\n      theme=\"snow\"\n    />\n  );\n});\n\nexport default RichTextEditor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}