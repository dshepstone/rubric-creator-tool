{"ast":null,"code":"var _jsxFileName = \"C:\\\\local clones\\\\rubric-creation-app\\\\src\\\\components\\\\SharedContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssessmentContext = /*#__PURE__*/createContext();\nexport const useAssessment = () => {\n  _s();\n  const context = useContext(AssessmentContext);\n  if (!context) {\n    throw new Error('useAssessment must be used within AssessmentProvider');\n  }\n  return context;\n};\n_s(useAssessment, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AssessmentProvider = ({\n  children\n}) => {\n  _s2();\n  // Shared rubric state\n  const [sharedRubric, setSharedRubric] = useState(null);\n\n  // Active tab state\n  const [activeTab, setActiveTab] = useState('rubric-creator');\n\n  // Comprehensive persistent form data for grading tool\n  const [gradingFormData, setGradingFormData] = useState({\n    student: {\n      name: '',\n      id: '',\n      email: ''\n    },\n    course: {\n      code: '',\n      name: '',\n      instructor: '',\n      term: ''\n    },\n    assignment: {\n      name: '',\n      dueDate: '',\n      maxPoints: 100\n    },\n    feedback: {\n      general: '',\n      strengths: '',\n      improvements: ''\n    },\n    attachments: [],\n    videoLinks: [],\n    latePolicy: {\n      level: 'none',\n      penaltyApplied: false\n    },\n    rubricGrading: {},\n    metadata: {\n      gradedBy: '',\n      gradedDate: '',\n      aiAssisted: false,\n      rubricIntegrated: false\n    }\n  });\n\n  // Persistent form data for rubric creator\n  const [rubricFormData, setRubricFormData] = useState({\n    assignmentInfo: {\n      title: '',\n      description: '',\n      weight: 25,\n      passingThreshold: 60,\n      totalPoints: 100\n    },\n    rubricLevels: [{\n      level: 'incomplete',\n      name: 'Incomplete',\n      description: 'No submission or unusable',\n      color: '#95a5a6',\n      multiplier: 0\n    }, {\n      level: 'unacceptable',\n      name: 'Unacceptable',\n      description: 'Below minimum standards',\n      color: '#e74c3c',\n      multiplier: 0.3\n    }, {\n      level: 'developing',\n      name: 'Developing',\n      description: 'Approaching standards',\n      color: '#f39c12',\n      multiplier: 0.55\n    }, {\n      level: 'acceptable',\n      name: 'Acceptable (PASS)',\n      description: 'Meets minimum standards',\n      color: '#27ae60',\n      multiplier: 0.7\n    }, {\n      level: 'emerging',\n      name: 'Emerging',\n      description: 'Above standard expectations',\n      color: '#2980b9',\n      multiplier: 0.82\n    }, {\n      level: 'accomplished',\n      name: 'Accomplished',\n      description: 'Strong professional quality',\n      color: '#16a085',\n      multiplier: 0.92\n    }, {\n      level: 'exceptional',\n      name: 'Exceptional',\n      description: 'Outstanding professional quality',\n      color: '#8e44ad',\n      multiplier: 1.0\n    }],\n    criteria: [{\n      id: 'criterion-1',\n      name: '',\n      description: '',\n      maxPoints: 20,\n      weight: 20,\n      levels: {},\n      feedbackLibrary: {\n        strengths: [],\n        improvements: [],\n        general: []\n      }\n    }],\n    pointingSystem: 'multiplier',\n    reversedOrder: false,\n    expandedFeedback: {},\n    modalEdit: {\n      show: false,\n      content: '',\n      field: null,\n      onSave: null\n    }\n  });\n\n  // Transfer rubric to grading tool and switch tabs\n  const transferRubricToGrading = useCallback(rubricData => {\n    setSharedRubric(rubricData);\n\n    // Update grading form data with rubric information\n    setGradingFormData(prev => {\n      var _rubricData$assignmen, _rubricData$assignmen2;\n      return {\n        ...prev,\n        assignment: {\n          ...prev.assignment,\n          name: ((_rubricData$assignmen = rubricData.assignmentInfo) === null || _rubricData$assignmen === void 0 ? void 0 : _rubricData$assignmen.title) || prev.assignment.name,\n          maxPoints: ((_rubricData$assignmen2 = rubricData.assignmentInfo) === null || _rubricData$assignmen2 === void 0 ? void 0 : _rubricData$assignmen2.totalPoints) || prev.assignment.maxPoints\n        },\n        metadata: {\n          ...prev.metadata,\n          rubricIntegrated: true\n        }\n      };\n    });\n    setActiveTab('grading-tool');\n  }, []);\n\n  // Enhanced transfer function that preserves all form data\n  const transferRubricToGradingWithDetails = useCallback(rubricData => {\n    setSharedRubric(rubricData);\n\n    // Update grading form data with rubric information\n    setGradingFormData(prev => {\n      var _rubricData$assignmen3, _rubricData$assignmen4;\n      return {\n        ...prev,\n        assignment: {\n          ...prev.assignment,\n          name: ((_rubricData$assignmen3 = rubricData.assignmentInfo) === null || _rubricData$assignmen3 === void 0 ? void 0 : _rubricData$assignmen3.title) || prev.assignment.name,\n          maxPoints: ((_rubricData$assignmen4 = rubricData.assignmentInfo) === null || _rubricData$assignmen4 === void 0 ? void 0 : _rubricData$assignmen4.totalPoints) || prev.assignment.maxPoints\n        },\n        metadata: {\n          ...prev.metadata,\n          rubricIntegrated: true\n        }\n      };\n    });\n    setActiveTab('grading-tool');\n  }, []);\n\n  // Update functions for grading form data\n  const updateGradingFormData = useCallback(updates => {\n    setGradingFormData(prev => ({\n      ...prev,\n      ...updates\n    }));\n  }, []);\n  const updateStudentInfo = useCallback(studentInfo => {\n    setGradingFormData(prev => ({\n      ...prev,\n      student: {\n        ...prev.student,\n        ...studentInfo\n      }\n    }));\n  }, []);\n  const updateCourseInfo = useCallback(courseInfo => {\n    setGradingFormData(prev => ({\n      ...prev,\n      course: {\n        ...prev.course,\n        ...courseInfo\n      }\n    }));\n  }, []);\n  const updateAssignmentInfo = useCallback(assignmentInfo => {\n    setGradingFormData(prev => ({\n      ...prev,\n      assignment: {\n        ...prev.assignment,\n        ...assignmentInfo\n      }\n    }));\n  }, []);\n  const updateFeedbackInfo = useCallback(feedbackInfo => {\n    setGradingFormData(prev => ({\n      ...prev,\n      feedback: {\n        ...prev.feedback,\n        ...feedbackInfo\n      }\n    }));\n  }, []);\n  const updateAttachments = useCallback(attachments => {\n    setGradingFormData(prev => ({\n      ...prev,\n      attachments\n    }));\n  }, []);\n  const updateVideoLinks = useCallback(videoLinks => {\n    setGradingFormData(prev => ({\n      ...prev,\n      videoLinks\n    }));\n  }, []);\n  const updateLatePolicy = useCallback(latePolicy => {\n    setGradingFormData(prev => ({\n      ...prev,\n      latePolicy\n    }));\n  }, []);\n  const updateRubricGrading = useCallback(rubricGrading => {\n    setGradingFormData(prev => ({\n      ...prev,\n      rubricGrading\n    }));\n  }, []);\n  const updateMetadata = useCallback(metadata => {\n    setGradingFormData(prev => ({\n      ...prev,\n      metadata: {\n        ...prev.metadata,\n        ...metadata\n      }\n    }));\n  }, []);\n\n  // Update functions for rubric form data\n  const updateRubricFormData = useCallback(updates => {\n    setRubricFormData(prev => ({\n      ...prev,\n      ...updates\n    }));\n  }, []);\n  const updateRubricAssignmentInfo = useCallback(assignmentInfo => {\n    setRubricFormData(prev => ({\n      ...prev,\n      assignmentInfo: {\n        ...prev.assignmentInfo,\n        ...assignmentInfo\n      }\n    }));\n  }, []);\n  const updateRubricCriteria = useCallback(criteria => {\n    setRubricFormData(prev => ({\n      ...prev,\n      criteria\n    }));\n  }, []);\n  const updateRubricLevels = useCallback(rubricLevels => {\n    setRubricFormData(prev => ({\n      ...prev,\n      rubricLevels\n    }));\n  }, []);\n  const updateRubricSettings = useCallback(settings => {\n    setRubricFormData(prev => ({\n      ...prev,\n      ...settings\n    }));\n  }, []);\n\n  // Clear functions\n  const clearSharedRubric = useCallback(() => {\n    setSharedRubric(null);\n  }, []);\n  const clearGradingFormData = useCallback(() => {\n    setGradingFormData({\n      student: {\n        name: '',\n        id: '',\n        email: ''\n      },\n      course: {\n        code: '',\n        name: '',\n        instructor: '',\n        term: ''\n      },\n      assignment: {\n        name: '',\n        dueDate: '',\n        maxPoints: 100\n      },\n      feedback: {\n        general: '',\n        strengths: '',\n        improvements: ''\n      },\n      attachments: [],\n      videoLinks: [],\n      latePolicy: {\n        level: 'none',\n        penaltyApplied: false\n      },\n      rubricGrading: {},\n      metadata: {\n        gradedBy: '',\n        gradedDate: '',\n        aiAssisted: false,\n        rubricIntegrated: false\n      }\n    });\n  }, []);\n  const clearRubricFormData = useCallback(() => {\n    setRubricFormData({\n      assignmentInfo: {\n        title: '',\n        description: '',\n        weight: 25,\n        passingThreshold: 60,\n        totalPoints: 100\n      },\n      rubricLevels: [{\n        level: 'incomplete',\n        name: 'Incomplete',\n        description: 'No submission or unusable',\n        color: '#95a5a6',\n        multiplier: 0\n      }, {\n        level: 'unacceptable',\n        name: 'Unacceptable',\n        description: 'Below minimum standards',\n        color: '#e74c3c',\n        multiplier: 0.3\n      }, {\n        level: 'developing',\n        name: 'Developing',\n        description: 'Approaching standards',\n        color: '#f39c12',\n        multiplier: 0.55\n      }, {\n        level: 'acceptable',\n        name: 'Acceptable (PASS)',\n        description: 'Meets minimum standards',\n        color: '#27ae60',\n        multiplier: 0.7\n      }, {\n        level: 'emerging',\n        name: 'Emerging',\n        description: 'Above standard expectations',\n        color: '#2980b9',\n        multiplier: 0.82\n      }, {\n        level: 'accomplished',\n        name: 'Accomplished',\n        description: 'Strong professional quality',\n        color: '#16a085',\n        multiplier: 0.92\n      }, {\n        level: 'exceptional',\n        name: 'Exceptional',\n        description: 'Outstanding professional quality',\n        color: '#8e44ad',\n        multiplier: 1.0\n      }],\n      criteria: [{\n        id: 'criterion-1',\n        name: '',\n        description: '',\n        maxPoints: 20,\n        weight: 20,\n        levels: {},\n        feedbackLibrary: {\n          strengths: [],\n          improvements: [],\n          general: []\n        }\n      }],\n      pointingSystem: 'multiplier',\n      reversedOrder: false,\n      expandedFeedback: {},\n      modalEdit: {\n        show: false,\n        content: '',\n        field: null,\n        onSave: null\n      }\n    });\n  }, []);\n  const clearAllData = useCallback(() => {\n    setSharedRubric(null);\n    clearGradingFormData();\n    clearRubricFormData();\n  }, [clearGradingFormData, clearRubricFormData]);\n\n  // Legacy compatibility - map persistent form data\n  const persistentFormData = gradingFormData;\n  const updatePersistentFormData = updateGradingFormData;\n  const value = {\n    // Shared state\n    sharedRubric,\n    setSharedRubric,\n    // Navigation\n    activeTab,\n    setActiveTab,\n    // Grading form data\n    gradingFormData,\n    setGradingFormData,\n    updateGradingFormData,\n    updateStudentInfo,\n    updateCourseInfo,\n    updateAssignmentInfo,\n    updateFeedbackInfo,\n    updateAttachments,\n    updateVideoLinks,\n    updateLatePolicy,\n    updateRubricGrading,\n    updateMetadata,\n    // Rubric form data\n    rubricFormData,\n    setRubricFormData,\n    updateRubricFormData,\n    updateRubricAssignmentInfo,\n    updateRubricCriteria,\n    updateRubricLevels,\n    updateRubricSettings,\n    // Actions - rubric management\n    transferRubricToGrading,\n    transferRubricToGradingWithDetails,\n    clearSharedRubric,\n    // Actions - clear functions\n    clearGradingFormData,\n    clearRubricFormData,\n    clearAllData,\n    // Legacy compatibility\n    persistentFormData,\n    updatePersistentFormData,\n    sharedCourseDetails: null,\n    // Legacy - not used anymore\n    setSharedCourseDetails: () => {},\n    // Legacy - not used anymore\n    clearSharedCourseDetails: () => {},\n    // Legacy\n    updateCourseDetails: updateCourseInfo,\n    // Legacy\n    extractCourseDetailsFromRubric: () => {},\n    // Legacy\n    clearPersistentFormData: clearGradingFormData // Legacy\n  };\n  return /*#__PURE__*/_jsxDEV(AssessmentContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 372,\n    columnNumber: 9\n  }, this);\n};\n_s2(AssessmentProvider, \"K4YdH9TVnnDt7UlqiQGQA88dtXc=\");\n_c = AssessmentProvider;\nvar _c;\n$RefreshReg$(_c, \"AssessmentProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","jsxDEV","_jsxDEV","AssessmentContext","useAssessment","_s","context","Error","AssessmentProvider","children","_s2","sharedRubric","setSharedRubric","activeTab","setActiveTab","gradingFormData","setGradingFormData","student","name","id","email","course","code","instructor","term","assignment","dueDate","maxPoints","feedback","general","strengths","improvements","attachments","videoLinks","latePolicy","level","penaltyApplied","rubricGrading","metadata","gradedBy","gradedDate","aiAssisted","rubricIntegrated","rubricFormData","setRubricFormData","assignmentInfo","title","description","weight","passingThreshold","totalPoints","rubricLevels","color","multiplier","criteria","levels","feedbackLibrary","pointingSystem","reversedOrder","expandedFeedback","modalEdit","show","content","field","onSave","transferRubricToGrading","rubricData","prev","_rubricData$assignmen","_rubricData$assignmen2","transferRubricToGradingWithDetails","_rubricData$assignmen3","_rubricData$assignmen4","updateGradingFormData","updates","updateStudentInfo","studentInfo","updateCourseInfo","courseInfo","updateAssignmentInfo","updateFeedbackInfo","feedbackInfo","updateAttachments","updateVideoLinks","updateLatePolicy","updateRubricGrading","updateMetadata","updateRubricFormData","updateRubricAssignmentInfo","updateRubricCriteria","updateRubricLevels","updateRubricSettings","settings","clearSharedRubric","clearGradingFormData","clearRubricFormData","clearAllData","persistentFormData","updatePersistentFormData","value","sharedCourseDetails","setSharedCourseDetails","clearSharedCourseDetails","updateCourseDetails","extractCourseDetailsFromRubric","clearPersistentFormData","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/local clones/rubric-creation-app/src/components/SharedContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback } from 'react';\r\n\r\nconst AssessmentContext = createContext();\r\n\r\nexport const useAssessment = () => {\r\n    const context = useContext(AssessmentContext);\r\n    if (!context) {\r\n        throw new Error('useAssessment must be used within AssessmentProvider');\r\n    }\r\n    return context;\r\n};\r\n\r\nexport const AssessmentProvider = ({ children }) => {\r\n    // Shared rubric state\r\n    const [sharedRubric, setSharedRubric] = useState(null);\r\n\r\n    // Active tab state\r\n    const [activeTab, setActiveTab] = useState('rubric-creator');\r\n\r\n    // Comprehensive persistent form data for grading tool\r\n    const [gradingFormData, setGradingFormData] = useState({\r\n        student: { name: '', id: '', email: '' },\r\n        course: { code: '', name: '', instructor: '', term: '' },\r\n        assignment: { name: '', dueDate: '', maxPoints: 100 },\r\n        feedback: { general: '', strengths: '', improvements: '' },\r\n        attachments: [],\r\n        videoLinks: [],\r\n        latePolicy: { level: 'none', penaltyApplied: false },\r\n        rubricGrading: {},\r\n        metadata: {\r\n            gradedBy: '',\r\n            gradedDate: '',\r\n            aiAssisted: false,\r\n            rubricIntegrated: false\r\n        }\r\n    });\r\n\r\n    // Persistent form data for rubric creator\r\n    const [rubricFormData, setRubricFormData] = useState({\r\n        assignmentInfo: {\r\n            title: '',\r\n            description: '',\r\n            weight: 25,\r\n            passingThreshold: 60,\r\n            totalPoints: 100\r\n        },\r\n        rubricLevels: [\r\n            { level: 'incomplete', name: 'Incomplete', description: 'No submission or unusable', color: '#95a5a6', multiplier: 0 },\r\n            { level: 'unacceptable', name: 'Unacceptable', description: 'Below minimum standards', color: '#e74c3c', multiplier: 0.3 },\r\n            { level: 'developing', name: 'Developing', description: 'Approaching standards', color: '#f39c12', multiplier: 0.55 },\r\n            { level: 'acceptable', name: 'Acceptable (PASS)', description: 'Meets minimum standards', color: '#27ae60', multiplier: 0.7 },\r\n            { level: 'emerging', name: 'Emerging', description: 'Above standard expectations', color: '#2980b9', multiplier: 0.82 },\r\n            { level: 'accomplished', name: 'Accomplished', description: 'Strong professional quality', color: '#16a085', multiplier: 0.92 },\r\n            { level: 'exceptional', name: 'Exceptional', description: 'Outstanding professional quality', color: '#8e44ad', multiplier: 1.0 }\r\n        ],\r\n        criteria: [\r\n            {\r\n                id: 'criterion-1',\r\n                name: '',\r\n                description: '',\r\n                maxPoints: 20,\r\n                weight: 20,\r\n                levels: {},\r\n                feedbackLibrary: {\r\n                    strengths: [],\r\n                    improvements: [],\r\n                    general: []\r\n                }\r\n            }\r\n        ],\r\n        pointingSystem: 'multiplier',\r\n        reversedOrder: false,\r\n        expandedFeedback: {},\r\n        modalEdit: { show: false, content: '', field: null, onSave: null }\r\n    });\r\n\r\n    // Transfer rubric to grading tool and switch tabs\r\n    const transferRubricToGrading = useCallback((rubricData) => {\r\n        setSharedRubric(rubricData);\r\n\r\n        // Update grading form data with rubric information\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            assignment: {\r\n                ...prev.assignment,\r\n                name: rubricData.assignmentInfo?.title || prev.assignment.name,\r\n                maxPoints: rubricData.assignmentInfo?.totalPoints || prev.assignment.maxPoints\r\n            },\r\n            metadata: {\r\n                ...prev.metadata,\r\n                rubricIntegrated: true\r\n            }\r\n        }));\r\n\r\n        setActiveTab('grading-tool');\r\n    }, []);\r\n\r\n    // Enhanced transfer function that preserves all form data\r\n    const transferRubricToGradingWithDetails = useCallback((rubricData) => {\r\n        setSharedRubric(rubricData);\r\n\r\n        // Update grading form data with rubric information\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            assignment: {\r\n                ...prev.assignment,\r\n                name: rubricData.assignmentInfo?.title || prev.assignment.name,\r\n                maxPoints: rubricData.assignmentInfo?.totalPoints || prev.assignment.maxPoints\r\n            },\r\n            metadata: {\r\n                ...prev.metadata,\r\n                rubricIntegrated: true\r\n            }\r\n        }));\r\n\r\n        setActiveTab('grading-tool');\r\n    }, []);\r\n\r\n    // Update functions for grading form data\r\n    const updateGradingFormData = useCallback((updates) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            ...updates\r\n        }));\r\n    }, []);\r\n\r\n    const updateStudentInfo = useCallback((studentInfo) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            student: {\r\n                ...prev.student,\r\n                ...studentInfo\r\n            }\r\n        }));\r\n    }, []);\r\n\r\n    const updateCourseInfo = useCallback((courseInfo) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            course: {\r\n                ...prev.course,\r\n                ...courseInfo\r\n            }\r\n        }));\r\n    }, []);\r\n\r\n    const updateAssignmentInfo = useCallback((assignmentInfo) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            assignment: {\r\n                ...prev.assignment,\r\n                ...assignmentInfo\r\n            }\r\n        }));\r\n    }, []);\r\n\r\n    const updateFeedbackInfo = useCallback((feedbackInfo) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            feedback: {\r\n                ...prev.feedback,\r\n                ...feedbackInfo\r\n            }\r\n        }));\r\n    }, []);\r\n\r\n    const updateAttachments = useCallback((attachments) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            attachments\r\n        }));\r\n    }, []);\r\n\r\n    const updateVideoLinks = useCallback((videoLinks) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            videoLinks\r\n        }));\r\n    }, []);\r\n\r\n    const updateLatePolicy = useCallback((latePolicy) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            latePolicy\r\n        }));\r\n    }, []);\r\n\r\n    const updateRubricGrading = useCallback((rubricGrading) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            rubricGrading\r\n        }));\r\n    }, []);\r\n\r\n    const updateMetadata = useCallback((metadata) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            metadata: {\r\n                ...prev.metadata,\r\n                ...metadata\r\n            }\r\n        }));\r\n    }, []);\r\n\r\n    // Update functions for rubric form data\r\n    const updateRubricFormData = useCallback((updates) => {\r\n        setRubricFormData(prev => ({\r\n            ...prev,\r\n            ...updates\r\n        }));\r\n    }, []);\r\n\r\n    const updateRubricAssignmentInfo = useCallback((assignmentInfo) => {\r\n        setRubricFormData(prev => ({\r\n            ...prev,\r\n            assignmentInfo: {\r\n                ...prev.assignmentInfo,\r\n                ...assignmentInfo\r\n            }\r\n        }));\r\n    }, []);\r\n\r\n    const updateRubricCriteria = useCallback((criteria) => {\r\n        setRubricFormData(prev => ({\r\n            ...prev,\r\n            criteria\r\n        }));\r\n    }, []);\r\n\r\n    const updateRubricLevels = useCallback((rubricLevels) => {\r\n        setRubricFormData(prev => ({\r\n            ...prev,\r\n            rubricLevels\r\n        }));\r\n    }, []);\r\n\r\n    const updateRubricSettings = useCallback((settings) => {\r\n        setRubricFormData(prev => ({\r\n            ...prev,\r\n            ...settings\r\n        }));\r\n    }, []);\r\n\r\n    // Clear functions\r\n    const clearSharedRubric = useCallback(() => {\r\n        setSharedRubric(null);\r\n    }, []);\r\n\r\n    const clearGradingFormData = useCallback(() => {\r\n        setGradingFormData({\r\n            student: { name: '', id: '', email: '' },\r\n            course: { code: '', name: '', instructor: '', term: '' },\r\n            assignment: { name: '', dueDate: '', maxPoints: 100 },\r\n            feedback: { general: '', strengths: '', improvements: '' },\r\n            attachments: [],\r\n            videoLinks: [],\r\n            latePolicy: { level: 'none', penaltyApplied: false },\r\n            rubricGrading: {},\r\n            metadata: {\r\n                gradedBy: '',\r\n                gradedDate: '',\r\n                aiAssisted: false,\r\n                rubricIntegrated: false\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const clearRubricFormData = useCallback(() => {\r\n        setRubricFormData({\r\n            assignmentInfo: {\r\n                title: '',\r\n                description: '',\r\n                weight: 25,\r\n                passingThreshold: 60,\r\n                totalPoints: 100\r\n            },\r\n            rubricLevels: [\r\n                { level: 'incomplete', name: 'Incomplete', description: 'No submission or unusable', color: '#95a5a6', multiplier: 0 },\r\n                { level: 'unacceptable', name: 'Unacceptable', description: 'Below minimum standards', color: '#e74c3c', multiplier: 0.3 },\r\n                { level: 'developing', name: 'Developing', description: 'Approaching standards', color: '#f39c12', multiplier: 0.55 },\r\n                { level: 'acceptable', name: 'Acceptable (PASS)', description: 'Meets minimum standards', color: '#27ae60', multiplier: 0.7 },\r\n                { level: 'emerging', name: 'Emerging', description: 'Above standard expectations', color: '#2980b9', multiplier: 0.82 },\r\n                { level: 'accomplished', name: 'Accomplished', description: 'Strong professional quality', color: '#16a085', multiplier: 0.92 },\r\n                { level: 'exceptional', name: 'Exceptional', description: 'Outstanding professional quality', color: '#8e44ad', multiplier: 1.0 }\r\n            ],\r\n            criteria: [\r\n                {\r\n                    id: 'criterion-1',\r\n                    name: '',\r\n                    description: '',\r\n                    maxPoints: 20,\r\n                    weight: 20,\r\n                    levels: {},\r\n                    feedbackLibrary: {\r\n                        strengths: [],\r\n                        improvements: [],\r\n                        general: []\r\n                    }\r\n                }\r\n            ],\r\n            pointingSystem: 'multiplier',\r\n            reversedOrder: false,\r\n            expandedFeedback: {},\r\n            modalEdit: { show: false, content: '', field: null, onSave: null }\r\n        });\r\n    }, []);\r\n\r\n    const clearAllData = useCallback(() => {\r\n        setSharedRubric(null);\r\n        clearGradingFormData();\r\n        clearRubricFormData();\r\n    }, [clearGradingFormData, clearRubricFormData]);\r\n\r\n    // Legacy compatibility - map persistent form data\r\n    const persistentFormData = gradingFormData;\r\n    const updatePersistentFormData = updateGradingFormData;\r\n\r\n    const value = {\r\n        // Shared state\r\n        sharedRubric,\r\n        setSharedRubric,\r\n\r\n        // Navigation\r\n        activeTab,\r\n        setActiveTab,\r\n\r\n        // Grading form data\r\n        gradingFormData,\r\n        setGradingFormData,\r\n        updateGradingFormData,\r\n        updateStudentInfo,\r\n        updateCourseInfo,\r\n        updateAssignmentInfo,\r\n        updateFeedbackInfo,\r\n        updateAttachments,\r\n        updateVideoLinks,\r\n        updateLatePolicy,\r\n        updateRubricGrading,\r\n        updateMetadata,\r\n\r\n        // Rubric form data\r\n        rubricFormData,\r\n        setRubricFormData,\r\n        updateRubricFormData,\r\n        updateRubricAssignmentInfo,\r\n        updateRubricCriteria,\r\n        updateRubricLevels,\r\n        updateRubricSettings,\r\n\r\n        // Actions - rubric management\r\n        transferRubricToGrading,\r\n        transferRubricToGradingWithDetails,\r\n        clearSharedRubric,\r\n\r\n        // Actions - clear functions\r\n        clearGradingFormData,\r\n        clearRubricFormData,\r\n        clearAllData,\r\n\r\n        // Legacy compatibility\r\n        persistentFormData,\r\n        updatePersistentFormData,\r\n        sharedCourseDetails: null, // Legacy - not used anymore\r\n        setSharedCourseDetails: () => { }, // Legacy - not used anymore\r\n        clearSharedCourseDetails: () => { }, // Legacy\r\n        updateCourseDetails: updateCourseInfo, // Legacy\r\n        extractCourseDetailsFromRubric: () => { }, // Legacy\r\n        clearPersistentFormData: clearGradingFormData // Legacy\r\n    };\r\n\r\n    return (\r\n        <AssessmentContext.Provider value={value}>\r\n            {children}\r\n        </AssessmentContext.Provider>\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}