{"ast":null,"code":"var _jsxFileName = \"C:\\\\local clones\\\\rubric-creation-app\\\\src\\\\components\\\\ClassListManager.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport { Upload, Users, BookOpen, GraduationCap, Play, Download, CheckCircle, Clock, AlertCircle, Unlock, FileText, ExternalLink, FileSpreadsheet } from 'lucide-react';\nimport { useAssessment } from './SharedContext';\nimport { parseExcelFile, validateStudentData } from '../utils/excelParser';\n\n/**\r\n * Map a percentage to a letter grade, per programType\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getLetterGrade = (percentage, programType) => {\n  // Example scales — customize these thresholds to match your policy!\n  const scales = {\n    degree: [{\n      min: 90,\n      grade: 'A+'\n    }, {\n      min: 80,\n      grade: 'A'\n    }, {\n      min: 70,\n      grade: 'B'\n    }, {\n      min: 60,\n      grade: 'C'\n    }, {\n      min: 50,\n      grade: 'D'\n    }, {\n      min: 0,\n      grade: 'F'\n    }],\n    diploma: [{\n      min: 70,\n      grade: 'PASS'\n    }, {\n      min: 0,\n      grade: 'FAIL'\n    }],\n    certificate: [{\n      min: 50,\n      grade: 'P'\n    }, {\n      min: 0,\n      grade: 'F'\n    }]\n    // …add other programType scales as needed\n  };\n  const scale = scales[programType] || scales.diploma;\n  for (let tier of scale) {\n    if (percentage >= tier.min) return tier.grade;\n  }\n  return 'N/A';\n};\nconst ClassListManager = () => {\n  _s();\n  var _classList$courseMeta10, _classList$courseMeta11, _classList$courseMeta12, _classList$courseMeta13, _classList$courseMeta14, _classList$validation;\n  const fileInputRef = useRef(null);\n  const [importStatus, setImportStatus] = useState('');\n\n  /*\r\n   * FIXES COMPLETED IN THIS UPDATE:\r\n   * ===============================\r\n   * ✅ Excel import functionality (instead of CSV)\r\n   * ✅ Start batch grading session with pause/resume functionality\r\n   * ✅ Enhanced status indicators with proper draft/final states\r\n   * ✅ Export entire class grades as CSV, HTML, and PDF with Final Grade column\r\n   * ✅ Action buttons properly handle Edit/View, Finalize, Export Grade, Unlock\r\n   * ✅ Grade calculation function added for exports\r\n   * ✅ CSV and HTML exports now include calculated final grades and percentages\r\n   *\r\n   * PENDING FIX (requires GradingTemplate update):\r\n   * ==============================================\r\n   * ❌ View action still opens empty grade sheet for saved grades\r\n   *\r\n   * SOLUTION: Add the useEffect from gradingtemplate_fix artifact to GradingTemplate.js\r\n   * and add loadFinalGrade + finalGrades to SharedContext value object.\r\n   *\r\n   * Once implemented, the View action will properly load saved rubric selections,\r\n   * feedback, attachments, video links, and late policy for both draft and final grades.\r\n   */\n\n  const {\n    classList,\n    setClassList,\n    gradingSession,\n    setGradingSession,\n    initializeGradingSession,\n    setActiveTab,\n    setCurrentStudent,\n    hasDraft,\n    getGradeStatus,\n    saveFinalGrade,\n    loadDraft,\n    saveDraft,\n    drafts,\n    sharedRubric,\n    updateStudentInfo,\n    updateAssignmentInfo,\n    loadFinalGrade,\n    // This should be available after SharedContext fix\n    finalGrades,\n    // This should be available after SharedContext fix\n    rubricFormData\n  } = useAssessment();\n\n  // NEW: Handler to change the program type for grading\n  const handleProgramTypeChange = e => {\n    const newType = e.target.value;\n    setClassList(prev => ({\n      ...prev,\n      courseMetadata: {\n        ...prev.courseMetadata,\n        programType: newType\n      }\n    }));\n  };\n\n  // Helper function for status display\n  const getStatusDisplay = (progress, studentId) => {\n    const gradeStatus = getGradeStatus(studentId);\n    if (gradeStatus === 'final') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"w-4 h-4 text-green-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs bg-green-100 text-green-800 px-2 py-1 rounded-full font-medium\",\n          children: \"Final\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this);\n    } else if (gradeStatus === 'draft') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(Clock, {\n          className: \"w-4 h-4 text-yellow-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs bg-yellow-100 text-yellow-800 px-2 py-1 rounded-full font-medium\",\n          children: \"Draft\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this);\n    } else if ((progress === null || progress === void 0 ? void 0 : progress.status) === 'in-progress') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-4 h-4 border-2 border-blue-600 border-t-transparent rounded-full animate-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded-full font-medium\",\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-4 h-4 bg-gray-300 rounded-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs bg-gray-100 text-gray-600 px-2 py-1 rounded-full\",\n          children: \"Not Started\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  // Helper function to finalize a draft grade\n  const finalizeGrade = studentId => {\n    const draftData = drafts[studentId];\n    if (draftData) {\n      saveFinalGrade(studentId, draftData);\n\n      // Update class list progress\n      const studentIndex = classList.students.findIndex(s => s.id === studentId);\n      if (studentIndex >= 0) {\n        const updatedProgress = [...classList.gradingProgress];\n        updatedProgress[studentIndex] = {\n          ...updatedProgress[studentIndex],\n          status: 'completed_final',\n          lastModified: new Date().toISOString(),\n          gradeType: 'final'\n        };\n        setClassList(prev => ({\n          ...prev,\n          gradingProgress: updatedProgress\n        }));\n      }\n    }\n  };\n\n  // Helper function to unlock a final grade\n  const unlockGrade = studentId => {\n    // For now, we'll implement this by updating the class list progress\n    // The actual unlocking logic should be implemented in SharedContext\n    const studentIndex = classList.students.findIndex(s => s.id === studentId);\n    if (studentIndex >= 0) {\n      const updatedProgress = [...classList.gradingProgress];\n      updatedProgress[studentIndex] = {\n        ...updatedProgress[studentIndex],\n        status: 'completed_draft',\n        lastModified: new Date().toISOString(),\n        gradeType: 'draft'\n      };\n      setClassList(prev => ({\n        ...prev,\n        gradingProgress: updatedProgress\n      }));\n    }\n\n    // Note: Full unlock functionality requires additional implementation in SharedContext\n    console.log('Unlock grade for student:', studentId);\n  };\n\n  // Helper function to load final grade data\n  const loadFinalGradeData = studentId => {\n    // Use loadFinalGrade if available, otherwise fallback to checking finalGrades directly\n    if (typeof loadFinalGrade === 'function') {\n      return loadFinalGrade(studentId);\n    }\n    // Fallback: check finalGrades directly if available\n    if (finalGrades && finalGrades[studentId]) {\n      // FIX: Corrected 'finalGrdes' to 'finalGrades'\n      return finalGrades[studentId];\n    }\n    // Last resort: check drafts (this maintains current behavior)\n    return drafts[studentId] || null;\n  };\n\n  // **FIXED**: This function now correctly calculates the grade based on the rubric structure.\n  const calculateStudentGrade = studentId => {\n    var _classList$courseMeta;\n    const gradeStatus = getGradeStatus(studentId);\n    let gradeData = null;\n    if (gradeStatus === 'final') {\n      gradeData = loadFinalGradeData(studentId);\n    } else if (gradeStatus === 'draft') {\n      gradeData = loadDraft(studentId);\n    }\n\n    // The grade calculation relies on having the student's saved grade data AND the rubric structure.\n    // If any part is missing, we can't calculate the grade.\n    if (!gradeData || !gradeData.rubricGrading || !sharedRubric || !sharedRubric.criteria || !sharedRubric.rubricLevels) {\n      return {\n        score: 'N/A',\n        maxPossible: 'N/A',\n        percentage: 'N/A',\n        letterGrade: 'N/A'\n      };\n    }\n    let totalScore = 0;\n    let maxPossible = 0;\n\n    // Correctly calculate score based on criterion points and level multipliers\n    sharedRubric.criteria.forEach(criterion => {\n      const gradingSelection = gradeData.rubricGrading[criterion.id];\n      const criterionMaxPoints = Number(criterion.maxPoints) || 0;\n      maxPossible += criterionMaxPoints;\n      if (gradingSelection && gradingSelection.selectedLevel) {\n        const levelData = sharedRubric.rubricLevels.find(l => l.level === gradingSelection.selectedLevel);\n        if (levelData) {\n          const levelMultiplier = Number(levelData.multiplier) || 0;\n          totalScore += criterionMaxPoints * levelMultiplier;\n        }\n      }\n    });\n\n    // Apply late penalty if applicable\n    if (gradeData.latePolicy && gradeData.latePolicy.level !== 'none') {\n      const latePenalties = {\n        within24: 0.8,\n        after24: 0.0\n      };\n      const multiplier = latePenalties[gradeData.latePolicy.level] || 1.0;\n      totalScore *= multiplier;\n    }\n    const numericScore = Math.round(totalScore * 10) / 10;\n    const maxScore = Math.round(maxPossible * 10) / 10;\n    const percentage = maxScore > 0 ? Math.round(numericScore / maxScore * 100) : 0;\n    const letterGrade = getLetterGrade(percentage, (_classList$courseMeta = classList.courseMetadata) === null || _classList$courseMeta === void 0 ? void 0 : _classList$courseMeta.programType);\n    return {\n      score: numericScore,\n      maxPossible: maxScore,\n      percentage,\n      letterGrade\n    };\n  };\n\n  // Helper function to load student for grading\n  const loadStudentForGrading = student => {\n    const gradeStatus = getGradeStatus(student.id);\n\n    // Set the current student first\n    setCurrentStudent(student);\n\n    // Load the student info into the grading form\n    updateStudentInfo({\n      name: student.name,\n      id: student.id,\n      email: student.email\n    });\n\n    // Load rubric assignment info if available\n    if (sharedRubric) {\n      var _sharedRubric$assignm, _sharedRubric$assignm2;\n      updateAssignmentInfo({\n        name: ((_sharedRubric$assignm = sharedRubric.assignmentInfo) === null || _sharedRubric$assignm === void 0 ? void 0 : _sharedRubric$assignm.title) || '',\n        maxPoints: ((_sharedRubric$assignm2 = sharedRubric.assignmentInfo) === null || _sharedRubric$assignm2 === void 0 ? void 0 : _sharedRubric$assignm2.totalPoints) || 100\n      });\n    }\n\n    // Provide user feedback and load appropriate data\n    if (gradeStatus === 'final') {\n      const finalData = loadFinalGradeData(student.id);\n      console.log(`Loading final grade for ${student.name}:`, finalData ? 'Found' : 'Not found');\n    } else if (gradeStatus === 'draft') {\n      const draftData = loadDraft(student.id);\n      console.log(`Loading draft for ${student.name}:`, draftData ? 'Found' : 'Not found');\n    } else {\n      console.log(`Starting new grade for ${student.name}`);\n    }\n\n    // Switch to grading tool - the GradingTemplate useEffect will handle loading the data\n    setActiveTab('grading-tool');\n\n    // Note: The actual data loading happens in GradingTemplate's useEffect for currentStudent\n  };\n\n  // Helper function to get grading progress statistics\n  const getGradingProgress = () => {\n    if (!classList) return {\n      completed: 0,\n      total: 0,\n      percentage: 0,\n      final: 0,\n      draft: 0\n    };\n    const final = classList.gradingProgress.filter(p => {\n      var _p$status;\n      return (_p$status = p.status) === null || _p$status === void 0 ? void 0 : _p$status.startsWith('completed_final');\n    }).length;\n    const draft = classList.gradingProgress.filter(p => {\n      var _p$status2;\n      return (_p$status2 = p.status) === null || _p$status2 === void 0 ? void 0 : _p$status2.startsWith('completed_draft');\n    }).length;\n    const completed = final + draft;\n    const total = classList.students.length;\n    const percentage = total > 0 ? Math.round(completed / total * 100) : 0;\n    return {\n      completed,\n      total,\n      percentage,\n      final,\n      draft\n    };\n  };\n\n  // ── Build a portrait-friendly Class Grade Report ───────────────────────────────\n  const getPortraitClassReportHTML = () => {\n    var _sharedRubric$assignm3, _classList$courseMeta2, _classList$courseMeta3, _classList$courseMeta4;\n    const now = new Date();\n    const currentDate = now.toLocaleDateString('en-CA'); // YYYY-MM-DD\n    const currentTime = now.toLocaleTimeString('en-CA');\n    // Grab the rubric title from context\n    const rubricName = (sharedRubric === null || sharedRubric === void 0 ? void 0 : (_sharedRubric$assignm3 = sharedRubric.assignmentInfo) === null || _sharedRubric$assignm3 === void 0 ? void 0 : _sharedRubric$assignm3.title) || 'Unnamed Rubric';\n    // Calculate grades\n    const rowsHtml = classList.students.map((student, idx) => {\n      const info = calculateStudentGrade(student.id);\n      const num = info.score !== 'N/A' ? `${info.score}/${info.maxPossible}` : 'N/A';\n      return `\n      <tr>\n        <td>${idx + 1}</td>\n        <td>${student.id}</td>\n        <td>${student.name}</td>\n        <td>${num}</td>\n        <td>${info.letterGrade || 'N/A'}</td>\n        <td>${info.percentage !== 'N/A' ? info.percentage + '%' : 'N/A'}</td>\n      </tr>`;\n    }).join('');\n    return `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Portrait Class Report</title>\n  <style>\n    /* Force portrait and small margins */\n    @page { size: A4 portrait; margin: 15mm }\n    body {\n      font-family: sans-serif;\n      font-size: 12px;\n      margin: 0; padding: 0;\n      color: #333;\n    }\n    .header {\n      text-align: center;\n      margin-bottom: 8px;\n    }\n    .header h1 {\n      font-size: 18px; margin: 4px 0;\n    }\n    .header .meta {\n      font-size: 14px; color: #555;\n    }\n    table {\n      width: 100%; \n      border-collapse: collapse;\n      page-break-inside: auto;\n    }\n    thead {\n      display: table-header-group;\n    }\n    tbody {\n      display: table-row-group;\n    }\n    th, td {\n      border: 1px solid #bbb;\n      padding: 4px 6px;\n      text-align: left;\n    }\n    th {\n      background: #f0f0f0;\n      font-size: 12px;\n    }\n    td {\n      font-size: 11px;\n    }\n    tbody tr:nth-child(even) {\n      background: #fafafa;\n    }\n    .footer {\n      margin-top: 6px;\n      font-size: 10px;\n      text-align: center;\n      color: #666;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"header\">\n    <h1>Class Grade Report</h1>\n    <div class=\"meta\">\n      ${((_classList$courseMeta2 = classList.courseMetadata) === null || _classList$courseMeta2 === void 0 ? void 0 : _classList$courseMeta2.courseCode) || ''} –\n      ${((_classList$courseMeta3 = classList.courseMetadata) === null || _classList$courseMeta3 === void 0 ? void 0 : _classList$courseMeta3.courseName) || ''} |\n      Section: ${((_classList$courseMeta4 = classList.courseMetadata) === null || _classList$courseMeta4 === void 0 ? void 0 : _classList$courseMeta4.section) || ''}<br>\n      Rubric: ${rubricName}\n      Generated: ${currentDate} ${currentTime}\n    </div>\n  </div>\n\n  <table>\n    <thead>\n      <tr>\n        <th style=\"width:4%\">#</th>\n        <th style=\"width:15%\">Student ID</th>\n        <th style=\"width:40%\">Name</th>\n        <th style=\"width:15%\">Numeric Grade</th>\n        <th style=\"width:12%\">Letter Grade</th>\n        <th style=\"width:14%\">%</th>\n      </tr>\n    </thead>\n    <tbody>\n      ${rowsHtml}\n    </tbody>\n  </table>\n\n  <div class=\"footer\">\n    Imported from: ${classList.fileName}\n  </div>\n</body>\n</html>`;\n  };\n  // ───────────────────────────────────────────────────────────────────────────────\n\n  // ── Generate the full HTML for class‐grades report ─────────────────────────────\n  const getClassGradesHTML = () => {\n    var _classList$courseMeta5, _classList$courseMeta6, _classList$courseMeta7, _classList$courseMeta8;\n    const progress = getGradingProgress();\n    const currentDate = new Date().toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n    const currentTime = new Date().toLocaleTimeString();\n    return `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Class Grade Report - ${((_classList$courseMeta5 = classList.courseMetadata) === null || _classList$courseMeta5 === void 0 ? void 0 : _classList$courseMeta5.courseCode) || ''}</title>\n  <style>\n        body {\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n            line-height: 1.6;\n            margin: 0;\n            padding: 20px;\n            background-color: #f8fafc;\n        }\n        .container {\n            max-width: 1200px;\n            margin: 0 auto;\n            background: white;\n            border-radius: 8px;\n            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n            padding: 30px;\n        }\n        .header {\n            border-bottom: 3px solid #3b82f6;\n            padding-bottom: 20px;\n            margin-bottom: 30px;\n        }\n        .header h1 {\n            color: #1e40af;\n            margin: 0 0 10px 0;\n            font-size: 2rem;\n        }\n        .header .course-info {\n            color: #6b7280;\n            font-size: 1.1rem;\n        }\n        .stats-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n            gap: 20px;\n            margin-bottom: 30px;\n        }\n        .stat-card {\n            background: #f1f5f9;\n            padding: 20px;\n            border-radius: 8px;\n            text-align: center;\n            border-left: 4px solid #3b82f6;\n        }\n        .stat-card .number {\n            font-size: 2rem;\n            font-weight: bold;\n            color: #1e40af;\n            margin-bottom: 5px;\n        }\n        .stat-card .label {\n            color: #64748b;\n            font-size: 0.9rem;\n        }\n        .table-container {\n            overflow-x: auto;\n            margin-bottom: 30px;\n        }\n        table {\n            width: 100%;\n            border-collapse: collapse;\n            background: white;\n        }\n        th, td {\n            padding: 12px;\n            text-align: left;\n            border-bottom: 1px solid #e5e7eb;\n        }\n        th {\n            background-color: #f8fafc;\n            font-weight: 600;\n            color: #374151;\n            position: sticky;\n            top: 0;\n        }\n        tr:hover {\n            background-color: #f9fafb;\n        }\n        .status-badge {\n            padding: 4px 8px;\n            border-radius: 12px;\n            font-size: 0.75rem;\n            font-weight: 500;\n        }\n        .status-final {\n            background-color: #dcfce7;\n            color: #166534;\n        }\n        .status-draft {\n            background-color: #fef3c7;\n            color: #92400e;\n        }\n        .status-pending {\n            background-color: #f3f4f6;\n            color: #6b7280;\n        }\n        .footer {\n            text-align: center;\n            color: #6b7280;\n            font-size: 0.9rem;\n            border-top: 1px solid #e5e7eb;\n            padding-top: 20px;\n        }\n        @media print {\n            body { background: white; }\n            .container { box-shadow: none; }\n        }\n    </style>\n</head>\n<body>\n  <div class=\"container\">\n    <!-- header -->\n    <div class=\"header\">\n      <h1>📊 Class Grade Report</h1>\n      <div class=\"course-info\">\n        <strong>${(_classList$courseMeta6 = classList.courseMetadata) === null || _classList$courseMeta6 === void 0 ? void 0 : _classList$courseMeta6.courseCode}</strong> –\n        ${(_classList$courseMeta7 = classList.courseMetadata) === null || _classList$courseMeta7 === void 0 ? void 0 : _classList$courseMeta7.courseName} |\n        Section: ${(_classList$courseMeta8 = classList.courseMetadata) === null || _classList$courseMeta8 === void 0 ? void 0 : _classList$courseMeta8.section}\n      </div>\n    </div>\n    <!-- stats -->\n    <div class=\"stats-grid\">\n      <div class=\"stat-card\"><div class=\"number\">${progress.total}</div><div class=\"label\">Total Students</div></div>\n      <div class=\"stat-card\"><div class=\"number\">${progress.final}</div><div class=\"label\">Final Grades</div></div>\n      <div class=\"stat-card\"><div class=\"number\">${progress.draft}</div><div class=\"label\">Draft Grades</div></div>\n      <div class=\"stat-card\"><div class=\"number\">${progress.percentage}%</div><div class=\"label\">Completion Rate</div></div>\n    </div>\n    <!-- table -->\n    <div class=\"table-container\">\n      <table>\n        <thead>\n          <tr>\n            <th>#</th><th>Student ID</th><th>Name</th><th>Email</th>\n            <th>Program</th><th>Status</th><th>Grade Type</th>\n            <th>Final Grade</th><th>Percentage</th><th>Last Modified</th>\n          </tr>\n        </thead>\n        <tbody>\n          ${classList.students.map((student, i) => {\n      const prog = classList.gradingProgress[i];\n      const info = calculateStudentGrade(student.id);\n      const status = prog.status || 'pending';\n      const type = prog.gradeType || 'none';\n      const lm = prog.lastModified ? new Date(prog.lastModified).toLocaleDateString() : 'Never';\n      const statusClass = status.includes('final') ? 'status-final' : status.includes('draft') ? 'status-draft' : 'status-pending';\n      return `\n              <tr>\n                <td>${i + 1}</td>\n                <td>${student.id}</td>\n                <td>${student.name}</td>\n                <td>${student.email}</td>\n                <td>${student.program || ''}</td>\n                <td><span class=\"status-badge ${statusClass}\">${status}</span></td>\n                <td>${type}</td>\n                <td>${info.score !== 'N/A' ? `${info.score}/${info.maxPossible}` : 'N/A'}</td>\n                <td>${info.percentage !== 'N/A' ? `${info.percentage}%` : 'N/A'}</td>\n                <td>${lm}</td>\n              </tr>`;\n    }).join('')}\n        </tbody>\n      </table>\n    </div>\n    <!-- footer -->\n    <div class=\"footer\">\n      <p><strong>Class Grade Report Generated</strong></p>\n      <p>${currentDate} | ${currentTime}</p>\n      <p>Imported from: ${classList.fileName}</p>\n    </div>\n  </div>\n</body>\n</html>`;\n  };\n  // ───────────────────────────────────────────────────────────────────────────────\n\n  // Export class grades as CSV\n  const exportClassGradesCSV = () => {\n    var _classList$courseMeta9;\n    if (!classList) return;\n    const csvContent = [['Student ID', 'Student Name', 'Email', 'Program', 'Status', 'Grade Type', 'Numeric Grade', 'Letter Grade', 'Percentage', 'Last Modified'], ...classList.students.map((student, index) => {\n      const progress = classList.gradingProgress[index];\n      const gradeInfo = calculateStudentGrade(student.id);\n      return [student.id, student.name, student.email, student.program || 'N/A', (progress === null || progress === void 0 ? void 0 : progress.status) || 'pending', (progress === null || progress === void 0 ? void 0 : progress.gradeType) || 'none', gradeInfo.score !== 'N/A' ? `${gradeInfo.score}/${gradeInfo.maxPossible}` : 'N/A', gradeInfo.letterGrade || 'N/A', gradeInfo.percentage !== 'N/A' ? `${gradeInfo.percentage}%` : 'N/A', progress !== null && progress !== void 0 && progress.lastModified ? new Date(progress.lastModified).toLocaleDateString() : 'Never'];\n    })].map(row => row.join(',')).join('\\n');\n    const blob = new Blob([csvContent], {\n      type: 'text/csv'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `${((_classList$courseMeta9 = classList.courseMetadata) === null || _classList$courseMeta9 === void 0 ? void 0 : _classList$courseMeta9.courseCode) || 'class'}_grades_${new Date().toISOString().split('T')[0]}.csv`;\n    link.click();\n    URL.revokeObjectURL(url);\n  };\n\n  // Export class grades as HTML\n  // ── Export class grades as HTML via download ─────────────────────────────────\n  const exportClassGradesHTML = () => {\n    var _classList$courseMeta0;\n    if (!classList) return;\n    const htmlContent = getClassGradesHTML();\n    const blob = new Blob([htmlContent], {\n      type: 'text/html'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `${((_classList$courseMeta0 = classList.courseMetadata) === null || _classList$courseMeta0 === void 0 ? void 0 : _classList$courseMeta0.courseCode) || 'Class'}_grades.html`;\n    link.style.display = 'none';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  };\n  // ───────────────────────────────────────────────────────────────────────────────\n\n  // ── Export Class Grades as a portrait PDF ────────────────────────────────────\n  const exportClassGradesPortraitPDF = () => {\n    if (!classList) return;\n\n    // Open a new window with our portrait HTML\n    const printWin = window.open('', '_blank', 'width=800,height=600');\n    printWin.document.write(getPortraitClassReportHTML());\n    printWin.document.close();\n    printWin.focus();\n\n    // When it loads, trigger the print dialog\n    printWin.onload = () => {\n      printWin.print();\n      // Optionally close after printing:\n      // printWin.close();\n    };\n  };\n  // ───────────────────────────────────────────────────────────────────────────────\n\n  // ──────────────────────────────\n\n  // ── New: Export a single student's grade as CSV ───────────────────────────────\n  const exportStudentGrade = studentId => {\n    var _classList$courseMeta1;\n    // 1. Make sure we have a classList\n    if (!classList) return;\n\n    // 2. Find the student record\n    const student = classList.students.find(s => s.id === studentId);\n    if (!student) return;\n\n    // 3. Calculate their grade (score, percentage, etc.)\n    const gradeInfo = calculateStudentGrade(studentId);\n\n    // 4. Build a 2-row CSV: headers + this student's data\n    const rows = [['Student ID', 'Name', 'Email', 'Program', 'Status', 'Grade Type', 'Numeric Grade', 'Letter Grade', 'Percentage', 'Last Modified'], [student.id, student.name, student.email, student.program || 'N/A', progress.status || 'pending', progress.gradeType || 'none', `${gradeInfo.score}/${gradeInfo.maxPossible}`, gradeInfo.letterGrade || 'N/A', `${gradeInfo.percentage}%`, lastModified]];\n\n    // helper to quote & escape\n    const quote = cell => `\"${String(cell).trim().replace(/\"/g, '\"\"')}\"`;\n    const csvContent = rows.map(row => row.map(quote).join(',')).join('\\r\\n');\n\n    // 5. Trigger download\n    const blob = new Blob([csvContent], {\n      type: 'text/csv'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `${((_classList$courseMeta1 = classList.courseMetadata) === null || _classList$courseMeta1 === void 0 ? void 0 : _classList$courseMeta1.courseCode) || 'grade'}_${student.id}.csv`;\n    link.click();\n    URL.revokeObjectURL(url);\n  };\n  // ────────────────────────────\n\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    setImportStatus('processing');\n    try {\n      var _result$courseMetadat, _result$courseMetadat2, _result$courseMetadat3, _result$courseMetadat4, _result$courseMetadat5, _result$courseMetadat6, _result$courseMetadat7;\n      // Use Excel parser instead of manual CSV parsing\n      const result = await parseExcelFile(file);\n      if (!result.success) {\n        throw new Error(result.error || 'Failed to parse Excel file');\n      }\n\n      // Validate the parsed student data\n      const validation = validateStudentData(result.students);\n      if (result.students.length === 0) {\n        throw new Error('No valid student records found in Excel file');\n      }\n\n      // Create grading progress tracking for each student\n      const gradingProgress = result.students.map(() => ({\n        status: 'pending',\n        lastModified: null,\n        gradeType: null\n      }));\n      const classListData = {\n        students: result.students,\n        gradingProgress,\n        fileName: file.name,\n        fileSize: file.size,\n        importTime: new Date().toISOString(),\n        // Now include \"instructor\" (falls back to 'TBD' if none)\n        courseMetadata: {\n          courseCode: ((_result$courseMetadat = result.courseMetadata) === null || _result$courseMetadat === void 0 ? void 0 : _result$courseMetadat.courseCode) || 'IMPORTED',\n          courseName: ((_result$courseMetadat2 = result.courseMetadata) === null || _result$courseMetadat2 === void 0 ? void 0 : _result$courseMetadat2.courseName) || 'Excel Import',\n          section: ((_result$courseMetadat3 = result.courseMetadata) === null || _result$courseMetadat3 === void 0 ? void 0 : _result$courseMetadat3.section) || 'DEFAULT',\n          programType: ((_result$courseMetadat4 = result.courseMetadata) === null || _result$courseMetadat4 === void 0 ? void 0 : _result$courseMetadat4.programType) || 'degree',\n          // e.g. 'degree' | 'diploma' | 'certificate'\n          // ← Try .instructor first, then .professors (your Excel parser writes the names there)\n          instructor: ((_result$courseMetadat5 = result.courseMetadata) === null || _result$courseMetadat5 === void 0 ? void 0 : _result$courseMetadat5.instructor // if you manually had an \"Instructor\" column\n          ) || ((_result$courseMetadat6 = result.courseMetadata) === null || _result$courseMetadat6 === void 0 ? void 0 : _result$courseMetadat6.professors) // fall back to your \"Professors\" column\n          || 'TBD',\n          term: ((_result$courseMetadat7 = result.courseMetadata) === null || _result$courseMetadat7 === void 0 ? void 0 : _result$courseMetadat7.term) || 'TBD'\n        },\n        validation: {\n          validationScore: validation.validationScore || 100,\n          issues: validation.issues || []\n        }\n      };\n      setClassList(classListData);\n      setImportStatus('success');\n      setTimeout(() => setImportStatus(''), 3000);\n    } catch (error) {\n      console.error('Excel import error:', error);\n      setImportStatus('error');\n      setTimeout(() => setImportStatus(''), 3000);\n    }\n  };\n  const startGradingSession = () => {\n    if (!classList || classList.students.length === 0) {\n      alert('No students available for grading.');\n      return;\n    }\n    if (!sharedRubric) {\n      alert('Please load a rubric before starting batch grading.');\n      return;\n    }\n\n    // Initialize the grading session (this will set up the first student)\n    const success = initializeGradingSession(classList);\n    if (success) {\n      setActiveTab('grading-tool');\n    }\n  };\n\n  // Pause the grading session\n  const pauseGradingSession = () => {\n    setGradingSession(prev => ({\n      ...prev,\n      active: false\n    }));\n  };\n\n  // Resume the grading session\n  const resumeGradingSession = () => {\n    setGradingSession(prev => ({\n      ...prev,\n      active: true\n    }));\n    setActiveTab('grading-tool');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gradient-to-r text-gray-800 p-6 rounded-t-lg shadow-lg\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-3xl font-bold mb-2\",\n              children: \"Class List Manager\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 881,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600\",\n              children: \"Import, manage, and grade entire classes efficiently\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 882,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 880,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-4\",\n            children: [classList && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-2xl font-bold\",\n                children: classList.students.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 889,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-700\",\n                children: \"Students\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 892,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 888,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Users, {\n              size: 48,\n              className: \"text-gray-700\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 897,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 886,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 879,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 878,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-b-lg shadow-lg\",\n        children: [!classList && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-8\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"max-w-2xl mx-auto text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-blue-50 border border-blue-200 rounded-lg p-8 mb-6\",\n              children: [/*#__PURE__*/_jsxDEV(FileSpreadsheet, {\n                size: 48,\n                className: \"mx-auto text-blue-600 mb-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 908,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-2xl font-bold text-gray-800 mb-4\",\n                children: \"Import Student List\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 909,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-600 mb-6\",\n                children: \"Upload an Excel file (.xls or .xlsx) containing your student roster to begin class management.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 912,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: fileInputRef,\n                type: \"file\",\n                accept: \".xls,.xlsx\",\n                onChange: handleFileUpload,\n                className: \"hidden\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 916,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  var _fileInputRef$current;\n                  return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n                },\n                disabled: importStatus === 'processing',\n                className: \"bg-blue-600 hover:bg-blue-700 text-white px-8 py-3 rounded-lg font-medium transition-colors inline-flex items-center gap-2 disabled:opacity-50 disabled:cursor-not-allowed\",\n                children: [/*#__PURE__*/_jsxDEV(FileSpreadsheet, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 929,\n                  columnNumber: 41\n                }, this), importStatus === 'processing' ? 'Processing...' : 'Choose Excel File']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 924,\n                columnNumber: 37\n              }, this), importStatus === 'success' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-4 text-green-600 font-medium\",\n                children: \"\\u2713 Excel file imported successfully!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 934,\n                columnNumber: 41\n              }, this), importStatus === 'error' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-4 text-red-600 font-medium\",\n                children: \"\\u2717 Error importing Excel file. Please check format and try again.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 940,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 907,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-50 rounded-lg p-6 text-left\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"font-semibold text-gray-800 mb-3\",\n                children: \"Expected Excel Format:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 947,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600 space-y-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Required columns:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 949,\n                    columnNumber: 46\n                  }, this), \" ID, Name, Email\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 949,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Optional columns:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 950,\n                    columnNumber: 46\n                  }, this), \" Program, Campus, Level, Status\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 950,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"File types:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 951,\n                    columnNumber: 46\n                  }, this), \" .xls or .xlsx\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 951,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Note:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 952,\n                    columnNumber: 46\n                  }, this), \" First row should contain column headers\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 952,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 948,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 946,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 906,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 905,\n          columnNumber: 25\n        }, this), classList && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gradient-to-r from-blue-50 to-indigo-50 border border-blue-200 rounded-lg p-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center gap-3 mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(BookOpen, {\n                  className: \"text-blue-600\",\n                  size: 24\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 967,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-lg font-semibold text-blue-800\",\n                  children: \"Course Information\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 968,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 966,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-2 text-sm\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Code:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 974,\n                    columnNumber: 45\n                  }, this), ' ', ((_classList$courseMeta10 = classList.courseMetadata) === null || _classList$courseMeta10 === void 0 ? void 0 : _classList$courseMeta10.courseCode) || 'N/A']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 973,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Name:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 978,\n                    columnNumber: 45\n                  }, this), ' ', ((_classList$courseMeta11 = classList.courseMetadata) === null || _classList$courseMeta11 === void 0 ? void 0 : _classList$courseMeta11.courseName) || 'N/A']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 977,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Section:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 982,\n                    columnNumber: 45\n                  }, this), ' ', ((_classList$courseMeta12 = classList.courseMetadata) === null || _classList$courseMeta12 === void 0 ? void 0 : _classList$courseMeta12.section) || 'N/A']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 981,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Professor:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 986,\n                    columnNumber: 45\n                  }, this), ' ', ((_classList$courseMeta13 = classList.courseMetadata) === null || _classList$courseMeta13 === void 0 ? void 0 : _classList$courseMeta13.instructor) || 'N/A']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 985,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"programType\",\n                    className: \"block text-sm font-bold text-gray-700\",\n                    children: \"Program Type:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 991,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    id: \"programType\",\n                    name: \"programType\",\n                    value: ((_classList$courseMeta14 = classList.courseMetadata) === null || _classList$courseMeta14 === void 0 ? void 0 : _classList$courseMeta14.programType) || 'degree',\n                    onChange: handleProgramTypeChange,\n                    className: \"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"degree\",\n                      children: \"Degree\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 999,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"diploma\",\n                      children: \"Diploma\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1000,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"certificate\",\n                      children: \"Certificate\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1001,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 992,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 990,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 972,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 965,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gradient-to-r from-green-50 to-emerald-50 border border-green-200 rounded-lg p-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center gap-3 mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(GraduationCap, {\n                  className: \"text-green-600\",\n                  size: 24\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1010,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-lg font-semibold text-green-800\",\n                  children: \"Grading Progress\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1011,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1009,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-2 text-sm\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Total Students:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1017,\n                    columnNumber: 45\n                  }, this), \" \", classList.students.length]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1016,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Final Grades:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1020,\n                    columnNumber: 45\n                  }, this), ' ', getGradingProgress().final]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1019,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Draft Grades:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1024,\n                    columnNumber: 45\n                  }, this), ' ', getGradingProgress().draft]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1023,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Completion:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1028,\n                    columnNumber: 45\n                  }, this), ' ', getGradingProgress().percentage, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1027,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1015,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1008,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gradient-to-r from-purple-50 to-pink-50 border border-purple-200 rounded-lg p-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center gap-3 mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(Play, {\n                  className: \"text-purple-600\",\n                  size: 24\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1037,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-lg font-semibold text-purple-800\",\n                  children: \"Batch Grading Session\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1038,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1036,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-3\",\n                children: !(gradingSession !== null && gradingSession !== void 0 && gradingSession.active) ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm text-purple-600 mb-2\",\n                    children: (gradingSession === null || gradingSession === void 0 ? void 0 : gradingSession.currentStudentIndex) > 0 ? `Paused at student ${gradingSession.currentStudentIndex + 1} of ${classList.students.length}` : 'Ready to start batch grading'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1045,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex gap-2\",\n                    children: [(gradingSession === null || gradingSession === void 0 ? void 0 : gradingSession.currentStudentIndex) > 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: resumeGradingSession,\n                      className: \"flex items-center gap-2 px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg font-medium transition-colors\",\n                      children: [/*#__PURE__*/_jsxDEV(Play, {\n                        size: 16\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1057,\n                        columnNumber: 61\n                      }, this), \"Resume Session\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1053,\n                      columnNumber: 57\n                    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: startGradingSession,\n                      disabled: !sharedRubric,\n                      className: \"flex items-center gap-2 px-4 py-2 bg-purple-600 hover:bg-purple-700 text-white rounded-lg font-medium transition-colors disabled:opacity-50 disabled:cursor-not-allowed\",\n                      children: [/*#__PURE__*/_jsxDEV(Play, {\n                        size: 16\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1066,\n                        columnNumber: 61\n                      }, this), \"Start Batch Grading\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1061,\n                      columnNumber: 57\n                    }, this), !sharedRubric && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-xs text-purple-600 mt-1\",\n                      children: \"Load a rubric first\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1071,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1051,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1044,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm text-green-600 font-medium mb-2\",\n                    children: [\"\\u2713 Session Active - Student \", gradingSession.currentStudentIndex + 1, \" of \", classList.students.length]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1079,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: pauseGradingSession,\n                    className: \"flex items-center gap-2 px-4 py-2 bg-orange-600 hover:bg-orange-700 text-white rounded-lg font-medium transition-colors\",\n                    children: [/*#__PURE__*/_jsxDEV(Clock, {\n                      size: 16\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1086,\n                      columnNumber: 53\n                    }, this), \"Pause Session\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1082,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1078,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1042,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1035,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 963,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white border border-gray-200 rounded-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"px-6 py-4 bg-gray-50 border-b border-gray-200 flex justify-between items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-lg font-semibold text-gray-800\",\n                children: \"Student Roster\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1098,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: exportClassGradesCSV,\n                  className: \"px-2 py-1 rounded text-xs font-medium text-white bg-green-500 hover:bg-green-700 focus:ring-2 focus:ring-green-500 transition-colors duration-150\",\n                  children: [/*#__PURE__*/_jsxDEV(Download, {\n                    size: 14\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1106,\n                    columnNumber: 45\n                  }, this), \"CSV\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1102,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: exportClassGradesHTML,\n                  className: \"flex items-center gap-1 px-3 py-1 bg-green-600 hover:bg-green-700 text-white rounded text-sm font-medium transition-colors\",\n                  children: [/*#__PURE__*/_jsxDEV(FileText, {\n                    size: 14\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1113,\n                    columnNumber: 45\n                  }, this), \"HTML\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1109,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: exportClassGradesPortraitPDF,\n                  className: \"flex items-center gap-1 px-3 py-1 bg-red-600 hover:bg-red-700 text-white rounded text-sm font-medium transition-colors\",\n                  children: [/*#__PURE__*/_jsxDEV(FileText, {\n                    size: 14\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1120,\n                    columnNumber: 45\n                  }, this), \"PDF\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1116,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1101,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1097,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"overflow-x-auto\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"table-auto w-max mx-auto\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  className: \"bg-gray-50\",\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                      children: \"#\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1131,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                      children: \"Status\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1134,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                      children: \"Student ID\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1137,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                      children: \"Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1140,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                      children: \"Email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1143,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                      children: \"Program\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1146,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"w-48 px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                      children: \"Actions\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1150,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1130,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1129,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  className: \"bg-white divide-y divide-gray-200\",\n                  children: classList.students.map((student, index) => {\n                    const progress = classList.gradingProgress[index];\n                    const isCurrentStudent = gradingSession.active && index === gradingSession.currentStudentIndex;\n                    const gradeStatus = getGradeStatus(student.id);\n                    return /*#__PURE__*/_jsxDEV(\"tr\", {\n                      className: `${isCurrentStudent ? 'bg-blue-50 border-l-4 border-blue-500' : 'hover:bg-gray-50'} transition-colors`,\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"px-4 py-2 whitespace-normal break-words text-sm text-gray-900 max-w-xs\",\n                        children: index + 1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1169,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"px-6 py-4 whitespace-nowrap\",\n                        children: getStatusDisplay(progress, student.id)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1172,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\",\n                        children: student.id\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1175,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"px-4 py-2 whitespace-normal break-words text-sm text-gray-900 max-w-xs\",\n                        children: student.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1178,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"px-4 py-2 whitespace-normal break-words text-sm text-gray-500 max-w-xs\",\n                        children: student.email\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1181,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-500\",\n                        children: student.program\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1184,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"w-48 px-4 py-2 text-sm whitespace-normal\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"flex flex-wrap items-center gap-2\",\n                          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                            onClick: () => loadStudentForGrading(student),\n                            className: \"flex items-center gap-1 px-3 py-1 bg-blue-500 hover:bg-blue-700 text-white rounded text-sm font-medium transition-colors focus:ring-2 focus:ring-blue-500 duration-150\",\n                            children: gradeStatus === 'final' ? 'View' : 'Edit'\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1193,\n                            columnNumber: 65\n                          }, this), gradeStatus === 'draft' && /*#__PURE__*/_jsxDEV(\"button\", {\n                            onClick: () => finalizeGrade(student.id),\n                            className: \"flex items-center gap-1 px-3 py-1 bg-green-500 hover:bg-green-700 text-white rounded text-sm font-medium transition-colors focus:ring-2 focus:ring-green-500 duration-150\",\n                            children: \"Finalize\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1202,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            onClick: () => exportStudentGrade(student.id),\n                            className: \"flex items-center gap-1 px-3 py-1 bg-purple-500 hover:bg-purple-700 text-white rounded text-sm font-medium transition-colors focus:ring-2 focus:ring-purple-500 duration-150\",\n                            children: [/*#__PURE__*/_jsxDEV(ExternalLink, {\n                              size: 14\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1215,\n                              columnNumber: 69\n                            }, this), \"Export Grade\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1211,\n                            columnNumber: 65\n                          }, this), gradeStatus === 'final' && /*#__PURE__*/_jsxDEV(\"button\", {\n                            onClick: () => unlockGrade(student.id),\n                            className: \"flex items-center gap-1 px-3 py-1 bg-orange-500 hover:bg-orange-700 text-white rounded text-sm font-medium transition-colors focus:ring-2 focus:ring-orange-500 duration-150\",\n                            children: [/*#__PURE__*/_jsxDEV(Unlock, {\n                              size: 14\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1225,\n                              columnNumber: 73\n                            }, this), \"Unlock\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1221,\n                            columnNumber: 69\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1191,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1190,\n                        columnNumber: 57\n                      }, this)]\n                    }, student.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1162,\n                      columnNumber: 53\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1155,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1128,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1126,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1096,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-8 bg-gray-50 rounded-lg p-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold text-gray-800 mb-4\",\n              children: \"Import Summary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1241,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-600\",\n                  children: \"File:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1244,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-medium\",\n                  children: classList.fileName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1245,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1243,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-600\",\n                  children: \"Import Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1248,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-medium\",\n                  children: new Date(classList.importTime).toLocaleDateString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1249,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1247,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-600\",\n                  children: \"Data Quality:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1254,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-medium\",\n                  children: [((_classList$validation = classList.validation) === null || _classList$validation === void 0 ? void 0 : _classList$validation.validationScore) || 0, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1255,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1253,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-600\",\n                  children: \"Total Students:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1260,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-medium\",\n                  children: classList.students.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1261,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1259,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1242,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1240,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 961,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 902,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 876,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 875,\n    columnNumber: 9\n  }, this);\n};\n_s(ClassListManager, \"KU8/Cyj3w5vnIrtozvc/vMSWaJM=\", false, function () {\n  return [useAssessment];\n});\n_c = ClassListManager;\nexport default ClassListManager;\nvar _c;\n$RefreshReg$(_c, \"ClassListManager\");","map":{"version":3,"names":["React","useRef","useState","Upload","Users","BookOpen","GraduationCap","Play","Download","CheckCircle","Clock","AlertCircle","Unlock","FileText","ExternalLink","FileSpreadsheet","useAssessment","parseExcelFile","validateStudentData","jsxDEV","_jsxDEV","getLetterGrade","percentage","programType","scales","degree","min","grade","diploma","certificate","scale","tier","ClassListManager","_s","_classList$courseMeta10","_classList$courseMeta11","_classList$courseMeta12","_classList$courseMeta13","_classList$courseMeta14","_classList$validation","fileInputRef","importStatus","setImportStatus","classList","setClassList","gradingSession","setGradingSession","initializeGradingSession","setActiveTab","setCurrentStudent","hasDraft","getGradeStatus","saveFinalGrade","loadDraft","saveDraft","drafts","sharedRubric","updateStudentInfo","updateAssignmentInfo","loadFinalGrade","finalGrades","rubricFormData","handleProgramTypeChange","e","newType","target","value","prev","courseMetadata","getStatusDisplay","progress","studentId","gradeStatus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","status","finalizeGrade","draftData","studentIndex","students","findIndex","s","id","updatedProgress","gradingProgress","lastModified","Date","toISOString","gradeType","unlockGrade","console","log","loadFinalGradeData","calculateStudentGrade","_classList$courseMeta","gradeData","rubricGrading","criteria","rubricLevels","score","maxPossible","letterGrade","totalScore","forEach","criterion","gradingSelection","criterionMaxPoints","Number","maxPoints","selectedLevel","levelData","find","l","level","levelMultiplier","multiplier","latePolicy","latePenalties","within24","after24","numericScore","Math","round","maxScore","loadStudentForGrading","student","name","email","_sharedRubric$assignm","_sharedRubric$assignm2","assignmentInfo","title","totalPoints","finalData","getGradingProgress","completed","total","final","draft","filter","p","_p$status","startsWith","length","_p$status2","getPortraitClassReportHTML","_sharedRubric$assignm3","_classList$courseMeta2","_classList$courseMeta3","_classList$courseMeta4","now","currentDate","toLocaleDateString","currentTime","toLocaleTimeString","rubricName","rowsHtml","map","idx","info","num","join","courseCode","courseName","section","getClassGradesHTML","_classList$courseMeta5","_classList$courseMeta6","_classList$courseMeta7","_classList$courseMeta8","weekday","year","month","day","i","prog","type","lm","statusClass","includes","program","exportClassGradesCSV","_classList$courseMeta9","csvContent","index","gradeInfo","row","blob","Blob","url","URL","createObjectURL","link","document","createElement","href","download","split","click","revokeObjectURL","exportClassGradesHTML","_classList$courseMeta0","htmlContent","style","display","body","appendChild","removeChild","exportClassGradesPortraitPDF","printWin","window","open","write","close","focus","onload","print","exportStudentGrade","_classList$courseMeta1","rows","quote","cell","String","trim","replace","handleFileUpload","event","file","files","_result$courseMetadat","_result$courseMetadat2","_result$courseMetadat3","_result$courseMetadat4","_result$courseMetadat5","_result$courseMetadat6","_result$courseMetadat7","result","success","Error","error","validation","classListData","fileSize","size","importTime","instructor","professors","term","validationScore","issues","setTimeout","startGradingSession","alert","pauseGradingSession","active","resumeGradingSession","ref","accept","onChange","onClick","_fileInputRef$current","current","disabled","htmlFor","currentStudentIndex","isCurrentStudent","_c","$RefreshReg$"],"sources":["C:/local clones/rubric-creation-app/src/components/ClassListManager.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport {\r\n    Upload,\r\n    Users,\r\n    BookOpen,\r\n    GraduationCap,\r\n    Play,\r\n    Download,\r\n    CheckCircle,\r\n    Clock,\r\n    AlertCircle,\r\n    Unlock,\r\n    FileText,\r\n    ExternalLink,\r\n    FileSpreadsheet\r\n} from 'lucide-react';\r\nimport { useAssessment } from './SharedContext';\r\nimport { parseExcelFile, validateStudentData } from '../utils/excelParser';\r\n\r\n/**\r\n * Map a percentage to a letter grade, per programType\r\n */\r\nconst getLetterGrade = (percentage, programType) => {\r\n    // Example scales — customize these thresholds to match your policy!\r\n    const scales = {\r\n        degree: [\r\n            { min: 90, grade: 'A+' },\r\n            { min: 80, grade: 'A' },\r\n            { min: 70, grade: 'B' },\r\n            { min: 60, grade: 'C' },\r\n            { min: 50, grade: 'D' },\r\n            { min: 0, grade: 'F' },\r\n        ],\r\n        diploma: [\r\n            { min: 70, grade: 'PASS' },\r\n            { min: 0, grade: 'FAIL' }\r\n        ],\r\n        certificate: [\r\n            { min: 50, grade: 'P' },\r\n            { min: 0, grade: 'F' }\r\n        ]\r\n        // …add other programType scales as needed\r\n    };\r\n\r\n    const scale = scales[programType] || scales.diploma;\r\n    for (let tier of scale) {\r\n        if (percentage >= tier.min) return tier.grade;\r\n    }\r\n    return 'N/A';\r\n};\r\n\r\n\r\nconst ClassListManager = () => {\r\n    const fileInputRef = useRef(null);\r\n    const [importStatus, setImportStatus] = useState('');\r\n\r\n    /*\r\n     * FIXES COMPLETED IN THIS UPDATE:\r\n     * ===============================\r\n     * ✅ Excel import functionality (instead of CSV)\r\n     * ✅ Start batch grading session with pause/resume functionality\r\n     * ✅ Enhanced status indicators with proper draft/final states\r\n     * ✅ Export entire class grades as CSV, HTML, and PDF with Final Grade column\r\n     * ✅ Action buttons properly handle Edit/View, Finalize, Export Grade, Unlock\r\n     * ✅ Grade calculation function added for exports\r\n     * ✅ CSV and HTML exports now include calculated final grades and percentages\r\n     *\r\n     * PENDING FIX (requires GradingTemplate update):\r\n     * ==============================================\r\n     * ❌ View action still opens empty grade sheet for saved grades\r\n     *\r\n     * SOLUTION: Add the useEffect from gradingtemplate_fix artifact to GradingTemplate.js\r\n     * and add loadFinalGrade + finalGrades to SharedContext value object.\r\n     *\r\n     * Once implemented, the View action will properly load saved rubric selections,\r\n     * feedback, attachments, video links, and late policy for both draft and final grades.\r\n     */\r\n\r\n    const {\r\n        classList,\r\n        setClassList,\r\n        gradingSession,\r\n        setGradingSession,\r\n        initializeGradingSession,\r\n        setActiveTab,\r\n        setCurrentStudent,\r\n        hasDraft,\r\n        getGradeStatus,\r\n        saveFinalGrade,\r\n        loadDraft,\r\n        saveDraft,\r\n        drafts,\r\n        sharedRubric,\r\n        updateStudentInfo,\r\n        updateAssignmentInfo,\r\n        loadFinalGrade, // This should be available after SharedContext fix\r\n        finalGrades, // This should be available after SharedContext fix\r\n        rubricFormData,\r\n    } = useAssessment();\r\n\r\n    // NEW: Handler to change the program type for grading\r\n    const handleProgramTypeChange = (e) => {\r\n        const newType = e.target.value;\r\n        setClassList(prev => ({\r\n            ...prev,\r\n            courseMetadata: {\r\n                ...prev.courseMetadata,\r\n                programType: newType,\r\n            },\r\n        }));\r\n    };\r\n\r\n    // Helper function for status display\r\n    const getStatusDisplay = (progress, studentId) => {\r\n        const gradeStatus = getGradeStatus(studentId);\r\n\r\n        if (gradeStatus === 'final') {\r\n            return (\r\n                <div className=\"flex items-center gap-2\">\r\n                    <CheckCircle className=\"w-4 h-4 text-green-600\" />\r\n                    <span className=\"text-xs bg-green-100 text-green-800 px-2 py-1 rounded-full font-medium\">\r\n                        Final\r\n                    </span>\r\n                </div>\r\n            );\r\n        } else if (gradeStatus === 'draft') {\r\n            return (\r\n                <div className=\"flex items-center gap-2\">\r\n                    <Clock className=\"w-4 h-4 text-yellow-600\" />\r\n                    <span className=\"text-xs bg-yellow-100 text-yellow-800 px-2 py-1 rounded-full font-medium\">\r\n                        Draft\r\n                    </span>\r\n                </div>\r\n            );\r\n        } else if (progress?.status === 'in-progress') {\r\n            return (\r\n                <div className=\"flex items-center gap-2\">\r\n                    <div className=\"w-4 h-4 border-2 border-blue-600 border-t-transparent rounded-full animate-spin\"></div>\r\n                    <span className=\"text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded-full font-medium\">\r\n                        In Progress\r\n                    </span>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className=\"flex items-center gap-2\">\r\n                    <div className=\"w-4 h-4 bg-gray-300 rounded-full\"></div>\r\n                    <span className=\"text-xs bg-gray-100 text-gray-600 px-2 py-1 rounded-full\">\r\n                        Not Started\r\n                    </span>\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    // Helper function to finalize a draft grade\r\n    const finalizeGrade = (studentId) => {\r\n        const draftData = drafts[studentId];\r\n        if (draftData) {\r\n            saveFinalGrade(studentId, draftData);\r\n\r\n            // Update class list progress\r\n            const studentIndex = classList.students.findIndex(s => s.id === studentId);\r\n            if (studentIndex >= 0) {\r\n                const updatedProgress = [...classList.gradingProgress];\r\n                updatedProgress[studentIndex] = {\r\n                    ...updatedProgress[studentIndex],\r\n                    status: 'completed_final',\r\n                    lastModified: new Date().toISOString(),\r\n                    gradeType: 'final'\r\n                };\r\n                setClassList(prev => ({\r\n                    ...prev,\r\n                    gradingProgress: updatedProgress\r\n                }));\r\n            }\r\n        }\r\n    };\r\n\r\n    // Helper function to unlock a final grade\r\n    const unlockGrade = (studentId) => {\r\n        // For now, we'll implement this by updating the class list progress\r\n        // The actual unlocking logic should be implemented in SharedContext\r\n        const studentIndex = classList.students.findIndex(s => s.id === studentId);\r\n        if (studentIndex >= 0) {\r\n            const updatedProgress = [...classList.gradingProgress];\r\n            updatedProgress[studentIndex] = {\r\n                ...updatedProgress[studentIndex],\r\n                status: 'completed_draft',\r\n                lastModified: new Date().toISOString(),\r\n                gradeType: 'draft'\r\n            };\r\n            setClassList(prev => ({\r\n                ...prev,\r\n                gradingProgress: updatedProgress\r\n            }));\r\n        }\r\n\r\n        // Note: Full unlock functionality requires additional implementation in SharedContext\r\n        console.log('Unlock grade for student:', studentId);\r\n    };\r\n\r\n    // Helper function to load final grade data\r\n    const loadFinalGradeData = (studentId) => {\r\n        // Use loadFinalGrade if available, otherwise fallback to checking finalGrades directly\r\n        if (typeof loadFinalGrade === 'function') {\r\n            return loadFinalGrade(studentId);\r\n        }\r\n        // Fallback: check finalGrades directly if available\r\n        if (finalGrades && finalGrades[studentId]) { // FIX: Corrected 'finalGrdes' to 'finalGrades'\r\n            return finalGrades[studentId];\r\n        }\r\n        // Last resort: check drafts (this maintains current behavior)\r\n        return drafts[studentId] || null;\r\n    };\r\n\r\n    // **FIXED**: This function now correctly calculates the grade based on the rubric structure.\r\n    const calculateStudentGrade = (studentId) => {\r\n        const gradeStatus = getGradeStatus(studentId);\r\n        let gradeData = null;\r\n\r\n        if (gradeStatus === 'final') {\r\n            gradeData = loadFinalGradeData(studentId);\r\n        } else if (gradeStatus === 'draft') {\r\n            gradeData = loadDraft(studentId);\r\n        }\r\n\r\n        // The grade calculation relies on having the student's saved grade data AND the rubric structure.\r\n        // If any part is missing, we can't calculate the grade.\r\n        if (!gradeData || !gradeData.rubricGrading || !sharedRubric || !sharedRubric.criteria || !sharedRubric.rubricLevels) {\r\n            return { score: 'N/A', maxPossible: 'N/A', percentage: 'N/A', letterGrade: 'N/A' };\r\n        }\r\n\r\n        let totalScore = 0;\r\n        let maxPossible = 0;\r\n\r\n        // Correctly calculate score based on criterion points and level multipliers\r\n        sharedRubric.criteria.forEach(criterion => {\r\n            const gradingSelection = gradeData.rubricGrading[criterion.id];\r\n            const criterionMaxPoints = Number(criterion.maxPoints) || 0;\r\n            maxPossible += criterionMaxPoints;\r\n\r\n            if (gradingSelection && gradingSelection.selectedLevel) {\r\n                const levelData = sharedRubric.rubricLevels.find(l => l.level === gradingSelection.selectedLevel);\r\n                if (levelData) {\r\n                    const levelMultiplier = Number(levelData.multiplier) || 0;\r\n                    totalScore += criterionMaxPoints * levelMultiplier;\r\n                }\r\n            }\r\n        });\r\n\r\n        // Apply late penalty if applicable\r\n        if (gradeData.latePolicy && gradeData.latePolicy.level !== 'none') {\r\n            const latePenalties = { within24: 0.8, after24: 0.0 };\r\n            const multiplier = latePenalties[gradeData.latePolicy.level] || 1.0;\r\n            totalScore *= multiplier;\r\n        }\r\n\r\n        const numericScore = Math.round(totalScore * 10) / 10;\r\n        const maxScore = Math.round(maxPossible * 10) / 10;\r\n        const percentage = maxScore > 0 ? Math.round((numericScore / maxScore) * 100) : 0;\r\n\r\n        const letterGrade = getLetterGrade(\r\n            percentage,\r\n            classList.courseMetadata?.programType\r\n        );\r\n\r\n        return {\r\n            score: numericScore,\r\n            maxPossible: maxScore,\r\n            percentage,\r\n            letterGrade\r\n        };\r\n    };\r\n\r\n\r\n    // Helper function to load student for grading\r\n    const loadStudentForGrading = (student) => {\r\n        const gradeStatus = getGradeStatus(student.id);\r\n\r\n        // Set the current student first\r\n        setCurrentStudent(student);\r\n\r\n        // Load the student info into the grading form\r\n        updateStudentInfo({\r\n            name: student.name,\r\n            id: student.id,\r\n            email: student.email\r\n        });\r\n\r\n        // Load rubric assignment info if available\r\n        if (sharedRubric) {\r\n            updateAssignmentInfo({\r\n                name: sharedRubric.assignmentInfo?.title || '',\r\n                maxPoints: sharedRubric.assignmentInfo?.totalPoints || 100\r\n            });\r\n        }\r\n\r\n        // Provide user feedback and load appropriate data\r\n        if (gradeStatus === 'final') {\r\n            const finalData = loadFinalGradeData(student.id);\r\n            console.log(`Loading final grade for ${student.name}:`, finalData ? 'Found' : 'Not found');\r\n        } else if (gradeStatus === 'draft') {\r\n            const draftData = loadDraft(student.id);\r\n            console.log(`Loading draft for ${student.name}:`, draftData ? 'Found' : 'Not found');\r\n        } else {\r\n            console.log(`Starting new grade for ${student.name}`);\r\n        }\r\n\r\n        // Switch to grading tool - the GradingTemplate useEffect will handle loading the data\r\n        setActiveTab('grading-tool');\r\n\r\n        // Note: The actual data loading happens in GradingTemplate's useEffect for currentStudent\r\n    };\r\n\r\n    // Helper function to get grading progress statistics\r\n    const getGradingProgress = () => {\r\n        if (!classList) return { completed: 0, total: 0, percentage: 0, final: 0, draft: 0 };\r\n\r\n        const final = classList.gradingProgress.filter(p =>\r\n            p.status?.startsWith('completed_final')\r\n        ).length;\r\n\r\n        const draft = classList.gradingProgress.filter(p =>\r\n            p.status?.startsWith('completed_draft')\r\n        ).length;\r\n\r\n        const completed = final + draft;\r\n        const total = classList.students.length;\r\n        const percentage = total > 0 ? Math.round((completed / total) * 100) : 0;\r\n\r\n        return { completed, total, percentage, final, draft };\r\n    };\r\n\r\n    // ── Build a portrait-friendly Class Grade Report ───────────────────────────────\r\n    const getPortraitClassReportHTML = () => {\r\n        const now = new Date();\r\n        const currentDate = now.toLocaleDateString('en-CA');  // YYYY-MM-DD\r\n        const currentTime = now.toLocaleTimeString('en-CA');\r\n         // Grab the rubric title from context\r\n        const rubricName = sharedRubric?.assignmentInfo?.title || 'Unnamed Rubric';\r\n        // Calculate grades\r\n        const rowsHtml = classList.students.map((student, idx) => {\r\n            const info = calculateStudentGrade(student.id);\r\n            const num = info.score !== 'N/A'\r\n                ? `${info.score}/${info.maxPossible}`\r\n                : 'N/A';\r\n            return `\r\n      <tr>\r\n        <td>${idx + 1}</td>\r\n        <td>${student.id}</td>\r\n        <td>${student.name}</td>\r\n        <td>${num}</td>\r\n        <td>${info.letterGrade || 'N/A'}</td>\r\n        <td>${info.percentage !== 'N/A' ? info.percentage + '%' : 'N/A'}</td>\r\n      </tr>`;\r\n        }).join('');\r\n\r\n        return `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <title>Portrait Class Report</title>\r\n  <style>\r\n    /* Force portrait and small margins */\r\n    @page { size: A4 portrait; margin: 15mm }\r\n    body {\r\n      font-family: sans-serif;\r\n      font-size: 12px;\r\n      margin: 0; padding: 0;\r\n      color: #333;\r\n    }\r\n    .header {\r\n      text-align: center;\r\n      margin-bottom: 8px;\r\n    }\r\n    .header h1 {\r\n      font-size: 18px; margin: 4px 0;\r\n    }\r\n    .header .meta {\r\n      font-size: 14px; color: #555;\r\n    }\r\n    table {\r\n      width: 100%; \r\n      border-collapse: collapse;\r\n      page-break-inside: auto;\r\n    }\r\n    thead {\r\n      display: table-header-group;\r\n    }\r\n    tbody {\r\n      display: table-row-group;\r\n    }\r\n    th, td {\r\n      border: 1px solid #bbb;\r\n      padding: 4px 6px;\r\n      text-align: left;\r\n    }\r\n    th {\r\n      background: #f0f0f0;\r\n      font-size: 12px;\r\n    }\r\n    td {\r\n      font-size: 11px;\r\n    }\r\n    tbody tr:nth-child(even) {\r\n      background: #fafafa;\r\n    }\r\n    .footer {\r\n      margin-top: 6px;\r\n      font-size: 10px;\r\n      text-align: center;\r\n      color: #666;\r\n    }\r\n  </style>\r\n</head>\r\n<body>\r\n  <div class=\"header\">\r\n    <h1>Class Grade Report</h1>\r\n    <div class=\"meta\">\r\n      ${classList.courseMetadata?.courseCode || ''} –\r\n      ${classList.courseMetadata?.courseName || ''} |\r\n      Section: ${classList.courseMetadata?.section || ''}<br>\r\n      Rubric: ${rubricName}\r\n      Generated: ${currentDate} ${currentTime}\r\n    </div>\r\n  </div>\r\n\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th style=\"width:4%\">#</th>\r\n        <th style=\"width:15%\">Student ID</th>\r\n        <th style=\"width:40%\">Name</th>\r\n        <th style=\"width:15%\">Numeric Grade</th>\r\n        <th style=\"width:12%\">Letter Grade</th>\r\n        <th style=\"width:14%\">%</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      ${rowsHtml}\r\n    </tbody>\r\n  </table>\r\n\r\n  <div class=\"footer\">\r\n    Imported from: ${classList.fileName}\r\n  </div>\r\n</body>\r\n</html>`;\r\n    };\r\n    // ───────────────────────────────────────────────────────────────────────────────\r\n\r\n\r\n    // ── Generate the full HTML for class‐grades report ─────────────────────────────\r\n    const getClassGradesHTML = () => {\r\n        const progress = getGradingProgress();\r\n        const currentDate = new Date().toLocaleDateString('en-US', {\r\n            weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'\r\n        });\r\n        const currentTime = new Date().toLocaleTimeString();\r\n\r\n        return `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <title>Class Grade Report - ${classList.courseMetadata?.courseCode || ''}</title>\r\n  <style>\r\n        body {\r\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\r\n            line-height: 1.6;\r\n            margin: 0;\r\n            padding: 20px;\r\n            background-color: #f8fafc;\r\n        }\r\n        .container {\r\n            max-width: 1200px;\r\n            margin: 0 auto;\r\n            background: white;\r\n            border-radius: 8px;\r\n            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n            padding: 30px;\r\n        }\r\n        .header {\r\n            border-bottom: 3px solid #3b82f6;\r\n            padding-bottom: 20px;\r\n            margin-bottom: 30px;\r\n        }\r\n        .header h1 {\r\n            color: #1e40af;\r\n            margin: 0 0 10px 0;\r\n            font-size: 2rem;\r\n        }\r\n        .header .course-info {\r\n            color: #6b7280;\r\n            font-size: 1.1rem;\r\n        }\r\n        .stats-grid {\r\n            display: grid;\r\n            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n            gap: 20px;\r\n            margin-bottom: 30px;\r\n        }\r\n        .stat-card {\r\n            background: #f1f5f9;\r\n            padding: 20px;\r\n            border-radius: 8px;\r\n            text-align: center;\r\n            border-left: 4px solid #3b82f6;\r\n        }\r\n        .stat-card .number {\r\n            font-size: 2rem;\r\n            font-weight: bold;\r\n            color: #1e40af;\r\n            margin-bottom: 5px;\r\n        }\r\n        .stat-card .label {\r\n            color: #64748b;\r\n            font-size: 0.9rem;\r\n        }\r\n        .table-container {\r\n            overflow-x: auto;\r\n            margin-bottom: 30px;\r\n        }\r\n        table {\r\n            width: 100%;\r\n            border-collapse: collapse;\r\n            background: white;\r\n        }\r\n        th, td {\r\n            padding: 12px;\r\n            text-align: left;\r\n            border-bottom: 1px solid #e5e7eb;\r\n        }\r\n        th {\r\n            background-color: #f8fafc;\r\n            font-weight: 600;\r\n            color: #374151;\r\n            position: sticky;\r\n            top: 0;\r\n        }\r\n        tr:hover {\r\n            background-color: #f9fafb;\r\n        }\r\n        .status-badge {\r\n            padding: 4px 8px;\r\n            border-radius: 12px;\r\n            font-size: 0.75rem;\r\n            font-weight: 500;\r\n        }\r\n        .status-final {\r\n            background-color: #dcfce7;\r\n            color: #166534;\r\n        }\r\n        .status-draft {\r\n            background-color: #fef3c7;\r\n            color: #92400e;\r\n        }\r\n        .status-pending {\r\n            background-color: #f3f4f6;\r\n            color: #6b7280;\r\n        }\r\n        .footer {\r\n            text-align: center;\r\n            color: #6b7280;\r\n            font-size: 0.9rem;\r\n            border-top: 1px solid #e5e7eb;\r\n            padding-top: 20px;\r\n        }\r\n        @media print {\r\n            body { background: white; }\r\n            .container { box-shadow: none; }\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n  <div class=\"container\">\r\n    <!-- header -->\r\n    <div class=\"header\">\r\n      <h1>📊 Class Grade Report</h1>\r\n      <div class=\"course-info\">\r\n        <strong>${classList.courseMetadata?.courseCode}</strong> –\r\n        ${classList.courseMetadata?.courseName} |\r\n        Section: ${classList.courseMetadata?.section}\r\n      </div>\r\n    </div>\r\n    <!-- stats -->\r\n    <div class=\"stats-grid\">\r\n      <div class=\"stat-card\"><div class=\"number\">${progress.total}</div><div class=\"label\">Total Students</div></div>\r\n      <div class=\"stat-card\"><div class=\"number\">${progress.final}</div><div class=\"label\">Final Grades</div></div>\r\n      <div class=\"stat-card\"><div class=\"number\">${progress.draft}</div><div class=\"label\">Draft Grades</div></div>\r\n      <div class=\"stat-card\"><div class=\"number\">${progress.percentage}%</div><div class=\"label\">Completion Rate</div></div>\r\n    </div>\r\n    <!-- table -->\r\n    <div class=\"table-container\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th><th>Student ID</th><th>Name</th><th>Email</th>\r\n            <th>Program</th><th>Status</th><th>Grade Type</th>\r\n            <th>Final Grade</th><th>Percentage</th><th>Last Modified</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          ${classList.students.map((student, i) => {\r\n            const prog = classList.gradingProgress[i];\r\n            const info = calculateStudentGrade(student.id);\r\n            const status = prog.status || 'pending';\r\n            const type = prog.gradeType || 'none';\r\n            const lm = prog.lastModified\r\n                ? new Date(prog.lastModified).toLocaleDateString()\r\n                : 'Never';\r\n            const statusClass = status.includes('final')\r\n                ? 'status-final'\r\n                : status.includes('draft')\r\n                    ? 'status-draft'\r\n                    : 'status-pending';\r\n            return `\r\n              <tr>\r\n                <td>${i + 1}</td>\r\n                <td>${student.id}</td>\r\n                <td>${student.name}</td>\r\n                <td>${student.email}</td>\r\n                <td>${student.program || ''}</td>\r\n                <td><span class=\"status-badge ${statusClass}\">${status}</span></td>\r\n                <td>${type}</td>\r\n                <td>${info.score !== 'N/A' ? `${info.score}/${info.maxPossible}` : 'N/A'}</td>\r\n                <td>${info.percentage !== 'N/A' ? `${info.percentage}%` : 'N/A'}</td>\r\n                <td>${lm}</td>\r\n              </tr>`;\r\n        }).join('')}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <!-- footer -->\r\n    <div class=\"footer\">\r\n      <p><strong>Class Grade Report Generated</strong></p>\r\n      <p>${currentDate} | ${currentTime}</p>\r\n      <p>Imported from: ${classList.fileName}</p>\r\n    </div>\r\n  </div>\r\n</body>\r\n</html>`;\r\n    };\r\n    // ───────────────────────────────────────────────────────────────────────────────\r\n\r\n\r\n    // Export class grades as CSV\r\n    const exportClassGradesCSV = () => {\r\n        if (!classList) return;\r\n\r\n        const csvContent = [\r\n            ['Student ID', 'Student Name', 'Email', 'Program', 'Status', 'Grade Type', 'Numeric Grade', 'Letter Grade', 'Percentage', 'Last Modified'],\r\n            ...classList.students.map((student, index) => {\r\n                const progress = classList.gradingProgress[index];\r\n                const gradeInfo = calculateStudentGrade(student.id);\r\n                return [\r\n                    student.id,\r\n                    student.name,\r\n                    student.email,\r\n                    student.program || 'N/A',\r\n                    progress?.status || 'pending',\r\n                    progress?.gradeType || 'none',\r\n                    gradeInfo.score !== 'N/A' ? `${gradeInfo.score}/${gradeInfo.maxPossible}` : 'N/A',\r\n                    gradeInfo.letterGrade || 'N/A',\r\n                    gradeInfo.percentage !== 'N/A' ? `${gradeInfo.percentage}%` : 'N/A',\r\n                    progress?.lastModified ? new Date(progress.lastModified).toLocaleDateString() : 'Never'\r\n                ];\r\n            })\r\n        ].map(row => row.join(',')).join('\\n');\r\n\r\n\r\n        const blob = new Blob([csvContent], { type: 'text/csv' });\r\n        const url = URL.createObjectURL(blob);\r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        link.download = `${classList.courseMetadata?.courseCode || 'class'}_grades_${new Date().toISOString().split('T')[0]}.csv`;\r\n        link.click();\r\n        URL.revokeObjectURL(url);\r\n    };\r\n\r\n    // Export class grades as HTML\r\n    // ── Export class grades as HTML via download ─────────────────────────────────\r\n    const exportClassGradesHTML = () => {\r\n        if (!classList) return;\r\n\r\n        const htmlContent = getClassGradesHTML();\r\n        const blob = new Blob([htmlContent], { type: 'text/html' });\r\n        const url = URL.createObjectURL(blob);\r\n        const link = document.createElement('a');\r\n\r\n        link.href = url;\r\n        link.download = `${classList.courseMetadata?.courseCode || 'Class'}_grades.html`;\r\n        link.style.display = 'none';\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n\r\n        URL.revokeObjectURL(url);\r\n    };\r\n    // ───────────────────────────────────────────────────────────────────────────────\r\n\r\n\r\n   \r\n    // ── Export Class Grades as a portrait PDF ────────────────────────────────────\r\n    const exportClassGradesPortraitPDF = () => {\r\n        if (!classList) return;\r\n\r\n        // Open a new window with our portrait HTML\r\n        const printWin = window.open('', '_blank', 'width=800,height=600');\r\n        printWin.document.write(getPortraitClassReportHTML());\r\n        printWin.document.close();\r\n        printWin.focus();\r\n\r\n        // When it loads, trigger the print dialog\r\n        printWin.onload = () => {\r\n            printWin.print();\r\n            // Optionally close after printing:\r\n            // printWin.close();\r\n        };\r\n    };\r\n    // ───────────────────────────────────────────────────────────────────────────────\r\n\r\n    // ──────────────────────────────\r\n\r\n    // ── New: Export a single student's grade as CSV ───────────────────────────────\r\n    const exportStudentGrade = (studentId) => {\r\n        // 1. Make sure we have a classList\r\n        if (!classList) return;\r\n\r\n        // 2. Find the student record\r\n        const student = classList.students.find(s => s.id === studentId);\r\n        if (!student) return;\r\n\r\n        // 3. Calculate their grade (score, percentage, etc.)\r\n        const gradeInfo = calculateStudentGrade(studentId);\r\n\r\n        // 4. Build a 2-row CSV: headers + this student's data\r\n        const rows = [\r\n            ['Student ID', 'Name', 'Email', 'Program', 'Status', 'Grade Type', 'Numeric Grade', 'Letter Grade', 'Percentage', 'Last Modified'],\r\n            [\r\n                student.id,\r\n                student.name,\r\n                student.email,\r\n                student.program || 'N/A',\r\n                progress.status || 'pending',\r\n                progress.gradeType || 'none',\r\n                `${gradeInfo.score}/${gradeInfo.maxPossible}`,\r\n                gradeInfo.letterGrade || 'N/A',\r\n                `${gradeInfo.percentage}%`,\r\n                lastModified\r\n            ]\r\n        ];\r\n\r\n        // helper to quote & escape\r\n        const quote = (cell) => `\"${String(cell).trim().replace(/\"/g, '\"\"')}\"`;\r\n\r\n        const csvContent = rows\r\n            .map(row => row.map(quote).join(','))\r\n            .join('\\r\\n');\r\n\r\n        \r\n\r\n        // 5. Trigger download\r\n        const blob = new Blob([csvContent], { type: 'text/csv' });\r\n        const url = URL.createObjectURL(blob);\r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        link.download = `${classList.courseMetadata?.courseCode || 'grade'}_${student.id}.csv`;\r\n        link.click();\r\n        URL.revokeObjectURL(url);\r\n    };\r\n    // ────────────────────────────\r\n\r\n    const handleFileUpload = async (event) => {\r\n        const file = event.target.files[0];\r\n        if (!file) return;\r\n\r\n        setImportStatus('processing');\r\n\r\n        try {\r\n            // Use Excel parser instead of manual CSV parsing\r\n            const result = await parseExcelFile(file);\r\n\r\n            if (!result.success) {\r\n                throw new Error(result.error || 'Failed to parse Excel file');\r\n            }\r\n\r\n            // Validate the parsed student data\r\n            const validation = validateStudentData(result.students);\r\n\r\n            if (result.students.length === 0) {\r\n                throw new Error('No valid student records found in Excel file');\r\n            }\r\n\r\n            // Create grading progress tracking for each student\r\n            const gradingProgress = result.students.map(() => ({\r\n                status: 'pending',\r\n                lastModified: null,\r\n                gradeType: null\r\n            }));\r\n\r\n            const classListData = {\r\n                students: result.students,\r\n                gradingProgress,\r\n                fileName: file.name,\r\n                fileSize: file.size,\r\n                importTime: new Date().toISOString(),\r\n                // Now include \"instructor\" (falls back to 'TBD' if none)\r\n                courseMetadata: {\r\n                    courseCode: result.courseMetadata?.courseCode || 'IMPORTED',\r\n                    courseName: result.courseMetadata?.courseName || 'Excel Import',\r\n                    section: result.courseMetadata?.section || 'DEFAULT',\r\n                    programType: result.courseMetadata?.programType || 'degree', // e.g. 'degree' | 'diploma' | 'certificate'\r\n                    // ← Try .instructor first, then .professors (your Excel parser writes the names there)\r\n                    instructor: result.courseMetadata?.instructor // if you manually had an \"Instructor\" column\r\n                        ||\r\n                        result.courseMetadata?.professors // fall back to your \"Professors\" column\r\n                        ||\r\n                        'TBD',\r\n                    term: result.courseMetadata?.term || 'TBD'\r\n                },\r\n                validation: {\r\n                    validationScore: validation.validationScore || 100,\r\n                    issues: validation.issues || []\r\n                }\r\n            };\r\n\r\n            setClassList(classListData);\r\n            setImportStatus('success');\r\n\r\n            setTimeout(() => setImportStatus(''), 3000);\r\n        } catch (error) {\r\n            console.error('Excel import error:', error);\r\n            setImportStatus('error');\r\n            setTimeout(() => setImportStatus(''), 3000);\r\n        }\r\n    };\r\n\r\n    const startGradingSession = () => {\r\n        if (!classList || classList.students.length === 0) {\r\n            alert('No students available for grading.');\r\n            return;\r\n        }\r\n\r\n        if (!sharedRubric) {\r\n            alert('Please load a rubric before starting batch grading.');\r\n            return;\r\n        }\r\n\r\n        // Initialize the grading session (this will set up the first student)\r\n        const success = initializeGradingSession(classList);\r\n        if (success) {\r\n            setActiveTab('grading-tool');\r\n        }\r\n    };\r\n\r\n    // Pause the grading session\r\n    const pauseGradingSession = () => {\r\n        setGradingSession(prev => ({\r\n            ...prev,\r\n            active: false\r\n        }));\r\n    };\r\n\r\n    // Resume the grading session\r\n    const resumeGradingSession = () => {\r\n        setGradingSession(prev => ({\r\n            ...prev,\r\n            active: true\r\n        }));\r\n        setActiveTab('grading-tool');\r\n    };\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gray-50\">\r\n            <div className=\"max-w-7xl mx-auto\">\r\n                {/* Header */}\r\n                <div className=\"bg-gradient-to-r text-gray-800 p-6 rounded-t-lg shadow-lg\">\r\n                    <div className=\"flex justify-between items-center\">\r\n                        <div>\r\n                            <h1 className=\"text-3xl font-bold mb-2\">Class List Manager</h1>\r\n                            <p className=\"text-gray-600\">\r\n                                Import, manage, and grade entire classes efficiently\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"flex items-center gap-4\">\r\n                            {classList && (\r\n                                <div className=\"text-right\">\r\n                                    <div className=\"text-2xl font-bold\">\r\n                                        {classList.students.length}\r\n                                    </div>\r\n                                    <div className=\"text-sm text-gray-700\">\r\n                                        Students\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                            <Users size={48} className=\"text-gray-700\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"bg-white rounded-b-lg shadow-lg\">\r\n                    {/* Import Section */}\r\n                    {!classList && (\r\n                        <div className=\"p-8\">\r\n                            <div className=\"max-w-2xl mx-auto text-center\">\r\n                                <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-8 mb-6\">\r\n                                    <FileSpreadsheet size={48} className=\"mx-auto text-blue-600 mb-4\" />\r\n                                    <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">\r\n                                        Import Student List\r\n                                    </h2>\r\n                                    <p className=\"text-gray-600 mb-6\">\r\n                                        Upload an Excel file (.xls or .xlsx) containing your student roster to begin class management.\r\n                                    </p>\r\n\r\n                                    <input\r\n                                        ref={fileInputRef}\r\n                                        type=\"file\"\r\n                                        accept=\".xls,.xlsx\"\r\n                                        onChange={handleFileUpload}\r\n                                        className=\"hidden\"\r\n                                    />\r\n\r\n                                    <button\r\n                                        onClick={() => fileInputRef.current?.click()}\r\n                                        disabled={importStatus === 'processing'}\r\n                                        className=\"bg-blue-600 hover:bg-blue-700 text-white px-8 py-3 rounded-lg font-medium transition-colors inline-flex items-center gap-2 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                                    >\r\n                                        <FileSpreadsheet size={20} />\r\n                                        {importStatus === 'processing' ? 'Processing...' : 'Choose Excel File'}\r\n                                    </button>\r\n\r\n                                    {importStatus === 'success' && (\r\n                                        <div className=\"mt-4 text-green-600 font-medium\">\r\n                                            ✓ Excel file imported successfully!\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {importStatus === 'error' && (\r\n                                        <div className=\"mt-4 text-red-600 font-medium\">\r\n                                            ✗ Error importing Excel file. Please check format and try again.\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className=\"bg-gray-50 rounded-lg p-6 text-left\">\r\n                                    <h3 className=\"font-semibold text-gray-800 mb-3\">Expected Excel Format:</h3>\r\n                                    <div className=\"text-sm text-gray-600 space-y-2\">\r\n                                        <div><strong>Required columns:</strong> ID, Name, Email</div>\r\n                                        <div><strong>Optional columns:</strong> Program, Campus, Level, Status</div>\r\n                                        <div><strong>File types:</strong> .xls or .xlsx</div>\r\n                                        <div><strong>Note:</strong> First row should contain column headers</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* Management Dashboard */}\r\n                    {classList && (\r\n                        <div className=\"p-6\">\r\n                            {/* Overview Cards */}\r\n                            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8\">\r\n                                {/* Course Info */}\r\n                                <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 border border-blue-200 rounded-lg p-6\">\r\n                                    <div className=\"flex items-center gap-3 mb-4\">\r\n                                        <BookOpen className=\"text-blue-600\" size={24} />\r\n                                        <h3 className=\"text-lg font-semibold text-blue-800\">\r\n                                            Course Information\r\n                                        </h3>\r\n                                    </div>\r\n                                    <div className=\"space-y-2 text-sm\">\r\n                                        <div>\r\n                                            <strong>Code:</strong>{' '}\r\n                                            {classList.courseMetadata?.courseCode || 'N/A'}\r\n                                        </div>\r\n                                        <div>\r\n                                            <strong>Name:</strong>{' '}\r\n                                            {classList.courseMetadata?.courseName || 'N/A'}\r\n                                        </div>\r\n                                        <div>\r\n                                            <strong>Section:</strong>{' '}\r\n                                            {classList.courseMetadata?.section || 'N/A'}\r\n                                        </div>\r\n                                        <div>\r\n                                            <strong>Professor:</strong>{' '}\r\n                                            {classList.courseMetadata?.instructor || 'N/A'}\r\n                                        </div>\r\n                                        {/* NEW: Program type selector */}\r\n                                        <div className=\"mt-3\">\r\n                                            <label htmlFor=\"programType\" className=\"block text-sm font-bold text-gray-700\">Program Type:</label>\r\n                                            <select\r\n                                                id=\"programType\"\r\n                                                name=\"programType\"\r\n                                                value={classList.courseMetadata?.programType || 'degree'}\r\n                                                onChange={handleProgramTypeChange}\r\n                                                className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md\"\r\n                                            >\r\n                                                <option value=\"degree\">Degree</option>\r\n                                                <option value=\"diploma\">Diploma</option>\r\n                                                <option value=\"certificate\">Certificate</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Progress Stats */}\r\n                                <div className=\"bg-gradient-to-r from-green-50 to-emerald-50 border border-green-200 rounded-lg p-6\">\r\n                                    <div className=\"flex items-center gap-3 mb-4\">\r\n                                        <GraduationCap className=\"text-green-600\" size={24} />\r\n                                        <h3 className=\"text-lg font-semibold text-green-800\">\r\n                                            Grading Progress\r\n                                        </h3>\r\n                                    </div>\r\n                                    <div className=\"space-y-2 text-sm\">\r\n                                        <div>\r\n                                            <strong>Total Students:</strong> {classList.students.length}\r\n                                        </div>\r\n                                        <div>\r\n                                            <strong>Final Grades:</strong>{' '}\r\n                                            {getGradingProgress().final}\r\n                                        </div>\r\n                                        <div>\r\n                                            <strong>Draft Grades:</strong>{' '}\r\n                                            {getGradingProgress().draft}\r\n                                        </div>\r\n                                        <div>\r\n                                            <strong>Completion:</strong>{' '}\r\n                                            {getGradingProgress().percentage}%\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Session Control */}\r\n                                <div className=\"bg-gradient-to-r from-purple-50 to-pink-50 border border-purple-200 rounded-lg p-6\">\r\n                                    <div className=\"flex items-center gap-3 mb-4\">\r\n                                        <Play className=\"text-purple-600\" size={24} />\r\n                                        <h3 className=\"text-lg font-semibold text-purple-800\">\r\n                                            Batch Grading Session\r\n                                        </h3>\r\n                                    </div>\r\n                                    <div className=\"space-y-3\">\r\n                                        {!gradingSession?.active ? (\r\n                                            <div>\r\n                                                <div className=\"text-sm text-purple-600 mb-2\">\r\n                                                    {gradingSession?.currentStudentIndex > 0\r\n                                                        ? `Paused at student ${gradingSession.currentStudentIndex + 1} of ${classList.students.length}`\r\n                                                        : 'Ready to start batch grading'\r\n                                                    }\r\n                                                </div>\r\n                                                <div className=\"flex gap-2\">\r\n                                                    {gradingSession?.currentStudentIndex > 0 ? (\r\n                                                        <button\r\n                                                            onClick={resumeGradingSession}\r\n                                                            className=\"flex items-center gap-2 px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg font-medium transition-colors\"\r\n                                                        >\r\n                                                            <Play size={16} />\r\n                                                            Resume Session\r\n                                                        </button>\r\n                                                    ) : (\r\n                                                        <button\r\n                                                            onClick={startGradingSession}\r\n                                                            disabled={!sharedRubric}\r\n                                                            className=\"flex items-center gap-2 px-4 py-2 bg-purple-600 hover:bg-purple-700 text-white rounded-lg font-medium transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                                                        >\r\n                                                            <Play size={16} />\r\n                                                            Start Batch Grading\r\n                                                        </button>\r\n                                                    )}\r\n                                                    {!sharedRubric && (\r\n                                                        <div className=\"text-xs text-purple-600 mt-1\">\r\n                                                            Load a rubric first\r\n                                                        </div>\r\n                                                    )}\r\n                                                </div>\r\n                                            </div>\r\n                                        ) : (\r\n                                            <div>\r\n                                                <div className=\"text-sm text-green-600 font-medium mb-2\">\r\n                                                    ✓ Session Active - Student {gradingSession.currentStudentIndex + 1} of {classList.students.length}\r\n                                                </div>\r\n                                                <button\r\n                                                    onClick={pauseGradingSession}\r\n                                                    className=\"flex items-center gap-2 px-4 py-2 bg-orange-600 hover:bg-orange-700 text-white rounded-lg font-medium transition-colors\"\r\n                                                >\r\n                                                    <Clock size={16} />\r\n                                                    Pause Session\r\n                                                </button>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Student Table */}\r\n                            <div className=\"bg-white border border-gray-200 rounded-lg\">\r\n                                <div className=\"px-6 py-4 bg-gray-50 border-b border-gray-200 flex justify-between items-center\">\r\n                                    <h3 className=\"text-lg font-semibold text-gray-800\">\r\n                                        Student Roster\r\n                                    </h3>\r\n                                    <div className=\"flex gap-2\">\r\n                                        <button\r\n                                            onClick={exportClassGradesCSV}\r\n                                            className=\"px-2 py-1 rounded text-xs font-medium text-white bg-green-500 hover:bg-green-700 focus:ring-2 focus:ring-green-500 transition-colors duration-150\"\r\n                                        >\r\n                                            <Download size={14} />\r\n                                            CSV\r\n                                        </button>\r\n                                        <button\r\n                                            onClick={exportClassGradesHTML}\r\n                                            className=\"flex items-center gap-1 px-3 py-1 bg-green-600 hover:bg-green-700 text-white rounded text-sm font-medium transition-colors\"\r\n                                        >\r\n                                            <FileText size={14} />\r\n                                            HTML\r\n                                        </button>\r\n                                        <button\r\n                                            onClick={exportClassGradesPortraitPDF}\r\n                                            className=\"flex items-center gap-1 px-3 py-1 bg-red-600 hover:bg-red-700 text-white rounded text-sm font-medium transition-colors\"\r\n                                        >\r\n                                            <FileText size={14} />\r\n                                            PDF\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"overflow-x-auto\">\r\n                                    {/* w-max = width: max-content; mx-auto centers if you want */}\r\n                                    <table className=\"table-auto w-max mx-auto\">\r\n                                        <thead className=\"bg-gray-50\">\r\n                                            <tr>\r\n                                                <th className=\"px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                                                    #\r\n                                                </th>\r\n                                                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                                                    Status\r\n                                                </th>\r\n                                                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                                                    Student ID\r\n                                                </th>\r\n                                                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                                                    Name\r\n                                                </th>\r\n                                                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                                                    Email\r\n                                                </th>\r\n                                                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                                                    Program\r\n                                                </th>\r\n                                                {/* limit Actions col to 12rem */}\r\n                                                <th className=\"w-48 px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                                                    Actions\r\n                                                </th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                                            {classList.students.map((student, index) => {\r\n                                                const progress = classList.gradingProgress[index];\r\n                                                const isCurrentStudent = gradingSession.active && index === gradingSession.currentStudentIndex;\r\n                                                const gradeStatus = getGradeStatus(student.id);\r\n\r\n                                                return (\r\n                                                    <tr\r\n                                                        key={student.id}\r\n                                                        className={`${isCurrentStudent\r\n                                                            ? 'bg-blue-50 border-l-4 border-blue-500'\r\n                                                            : 'hover:bg-gray-50'\r\n                                                            } transition-colors`}\r\n                                                    >\r\n                                                        <td className=\"px-4 py-2 whitespace-normal break-words text-sm text-gray-900 max-w-xs\">\r\n                                                            {index + 1}\r\n                                                        </td>\r\n                                                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                                                            {getStatusDisplay(progress, student.id)}\r\n                                                        </td>\r\n                                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                                                            {student.id}\r\n                                                        </td>\r\n                                                        <td className=\"px-4 py-2 whitespace-normal break-words text-sm text-gray-900 max-w-xs\">\r\n                                                            {student.name}\r\n                                                        </td>\r\n                                                        <td className=\"px-4 py-2 whitespace-normal break-words text-sm text-gray-500 max-w-xs\">\r\n                                                            {student.email}\r\n                                                        </td>\r\n                                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                                                            {student.program}\r\n                                                        </td>\r\n\r\n\r\n                                                        {/* match the header width here so the cell can’t grow beyond 12rem */}\r\n                                                        <td className=\"w-48 px-4 py-2 text-sm whitespace-normal\">\r\n                                                            <div className=\"flex flex-wrap items-center gap-2\">\r\n                                                                {/* View or Edit */}\r\n                                                                <button\r\n                                                                    onClick={() => loadStudentForGrading(student)}\r\n                                                                    className=\"flex items-center gap-1 px-3 py-1 bg-blue-500 hover:bg-blue-700 text-white rounded text-sm font-medium transition-colors focus:ring-2 focus:ring-blue-500 duration-150\"\r\n                                                                >\r\n                                                                    {gradeStatus === 'final' ? 'View' : 'Edit'}\r\n                                                                </button>\r\n\r\n                                                                {/* Finalize draft */}\r\n                                                                {gradeStatus === 'draft' && (\r\n                                                                    <button\r\n                                                                        onClick={() => finalizeGrade(student.id)}\r\n                                                                        className=\"flex items-center gap-1 px-3 py-1 bg-green-500 hover:bg-green-700 text-white rounded text-sm font-medium transition-colors focus:ring-2 focus:ring-green-500 duration-150\"\r\n                                                                    >\r\n                                                                        Finalize\r\n                                                                    </button>\r\n                                                                )}\r\n\r\n                                                                {/* Export Grade (always visible) */}\r\n                                                                <button\r\n                                                                    onClick={() => exportStudentGrade(student.id)}\r\n                                                                    className=\"flex items-center gap-1 px-3 py-1 bg-purple-500 hover:bg-purple-700 text-white rounded text-sm font-medium transition-colors focus:ring-2 focus:ring-purple-500 duration-150\"\r\n                                                                >\r\n                                                                    <ExternalLink size={14} />\r\n                                                                    Export Grade\r\n                                                                </button>\r\n\r\n                                                                {/* Unlock (only for final) */}\r\n                                                                {gradeStatus === 'final' && (\r\n                                                                    <button\r\n                                                                        onClick={() => unlockGrade(student.id)}\r\n                                                                        className=\"flex items-center gap-1 px-3 py-1 bg-orange-500 hover:bg-orange-700 text-white rounded text-sm font-medium transition-colors focus:ring-2 focus:ring-orange-500 duration-150\"\r\n                                                                    >\r\n                                                                        <Unlock size={14} />\r\n                                                                        Unlock\r\n                                                                    </button>\r\n                                                                )}\r\n                                                            </div>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                );\r\n                                            })}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Import Summary */}\r\n                            <div className=\"mt-8 bg-gray-50 rounded-lg p-6\">\r\n                                <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Import Summary</h3>\r\n                                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\r\n                                    <div>\r\n                                        <span className=\"text-gray-600\">File:</span>\r\n                                        <div className=\"font-medium\">{classList.fileName}</div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <span className=\"text-gray-600\">Import Date:</span>\r\n                                        <div className=\"font-medium\">\r\n                                            {new Date(classList.importTime).toLocaleDateString()}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <span className=\"text-gray-600\">Data Quality:</span>\r\n                                        <div className=\"font-medium\">\r\n                                            {classList.validation?.validationScore || 0}%\r\n                                        </div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <span className=\"text-gray-600\">Total Students:</span>\r\n                                        <div className=\"font-medium\">{classList.students.length}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ClassListManager;"],"mappings":"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J,CAAC;EACD;;EAGA;EACA,MAAM8F,kBAAkB,GAAGA,CAAA,KAAM;IAAA,IAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;IAC7B,MAAMvG,QAAQ,GAAGoE,kBAAkB,CAAC,CAAC;IACrC,MAAMiB,WAAW,GAAG,IAAIjE,IAAI,CAAC,CAAC,CAACkE,kBAAkB,CAAC,OAAO,EAAE;MACvDkB,OAAO,EAAE,MAAM;MAAEC,IAAI,EAAE,SAAS;MAAEC,KAAK,EAAE,MAAM;MAAEC,GAAG,EAAE;IAC1D,CAAC,CAAC;IACF,MAAMpB,WAAW,GAAG,IAAInE,IAAI,CAAC,CAAC,CAACoE,kBAAkB,CAAC,CAAC;IAEnD,OAAO;AACf;AACA;AACA;AACA,gCAAgC,EAAAY,sBAAA,GAAA/H,SAAS,CAACyB,cAAc,cAAAsG,sBAAA,uBAAxBA,sBAAA,CAA0BJ,UAAU,KAAI,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAnH0E,CAAAK,sBAAA,GAmHxDhI,SAAS,CAACyB,cAAc,cAAAuG,sBAAA,uBAAxBA,sBAAA,CAA0BL,UAAU;AACtD,UADsD,CAAAM,sBAAA,GAC5CjI,SAAS,CAACyB,cAAc,cAAAwG,sBAAA,uBAAxBA,sBAAA,CAA0BL,UAAU;AAC9C,mBAD8C,CAAAM,sBAAA,GAC3BlI,SAAS,CAACyB,cAAc,cAAAyG,sBAAA,uBAAxBA,sBAAA,CAA0BL,OAAO;AACpD;AACA;AACA;AACA;AACA,mDAAmDlG,QAAQ,CAACsE,KAAK;AACjE,mDAAmDtE,QAAQ,CAACuE,KAAK;AACjE,mDAAmDvE,QAAQ,CAACwE,KAAK;AACjE,mDAAmDxE,QAAQ,CAAChD,UAAU;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAYqB,SAAS,CAACwC,QAAQ,CAAC8E,GAAG,CAAC,CAAChC,OAAO,EAAEiD,CAAC,KAAK;MACvC,MAAMC,IAAI,GAAGxI,SAAS,CAAC6C,eAAe,CAAC0F,CAAC,CAAC;MACzC,MAAMf,IAAI,GAAGlE,qBAAqB,CAACgC,OAAO,CAAC3C,EAAE,CAAC;MAC9C,MAAMP,MAAM,GAAGoG,IAAI,CAACpG,MAAM,IAAI,SAAS;MACvC,MAAMqG,IAAI,GAAGD,IAAI,CAACvF,SAAS,IAAI,MAAM;MACrC,MAAMyF,EAAE,GAAGF,IAAI,CAAC1F,YAAY,GACtB,IAAIC,IAAI,CAACyF,IAAI,CAAC1F,YAAY,CAAC,CAACmE,kBAAkB,CAAC,CAAC,GAChD,OAAO;MACb,MAAM0B,WAAW,GAAGvG,MAAM,CAACwG,QAAQ,CAAC,OAAO,CAAC,GACtC,cAAc,GACdxG,MAAM,CAACwG,QAAQ,CAAC,OAAO,CAAC,GACpB,cAAc,GACd,gBAAgB;MAC1B,OAAO;AACnB;AACA,sBAAsBL,CAAC,GAAG,CAAC;AAC3B,sBAAsBjD,OAAO,CAAC3C,EAAE;AAChC,sBAAsB2C,OAAO,CAACC,IAAI;AAClC,sBAAsBD,OAAO,CAACE,KAAK;AACnC,sBAAsBF,OAAO,CAACuD,OAAO,IAAI,EAAE;AAC3C,gDAAgDF,WAAW,KAAKvG,MAAM;AACtE,sBAAsBqG,IAAI;AAC1B,sBAAsBjB,IAAI,CAAC5D,KAAK,KAAK,KAAK,GAAG,GAAG4D,IAAI,CAAC5D,KAAK,IAAI4D,IAAI,CAAC3D,WAAW,EAAE,GAAG,KAAK;AACxF,sBAAsB2D,IAAI,CAAC7I,UAAU,KAAK,KAAK,GAAG,GAAG6I,IAAI,CAAC7I,UAAU,GAAG,GAAG,KAAK;AAC/E,sBAAsB+J,EAAE;AACxB,oBAAoB;IACZ,CAAC,CAAC,CAAChB,IAAI,CAAC,EAAE,CAAC;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,WAAWV,WAAW,MAAME,WAAW;AACvC,0BAA0BlH,SAAS,CAACgC,QAAQ;AAC5C;AACA;AACA;AACA,QAAQ;EACJ,CAAC;EACD;;EAGA;EACA,MAAM8G,oBAAoB,GAAGA,CAAA,KAAM;IAAA,IAAAC,sBAAA;IAC/B,IAAI,CAAC/I,SAAS,EAAE;IAEhB,MAAMgJ,UAAU,GAAG,CACf,CAAC,YAAY,EAAE,cAAc,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE,eAAe,EAAE,cAAc,EAAE,YAAY,EAAE,eAAe,CAAC,EAC1I,GAAGhJ,SAAS,CAACwC,QAAQ,CAAC8E,GAAG,CAAC,CAAChC,OAAO,EAAE2D,KAAK,KAAK;MAC1C,MAAMtH,QAAQ,GAAG3B,SAAS,CAAC6C,eAAe,CAACoG,KAAK,CAAC;MACjD,MAAMC,SAAS,GAAG5F,qBAAqB,CAACgC,OAAO,CAAC3C,EAAE,CAAC;MACnD,OAAO,CACH2C,OAAO,CAAC3C,EAAE,EACV2C,OAAO,CAACC,IAAI,EACZD,OAAO,CAACE,KAAK,EACbF,OAAO,CAACuD,OAAO,IAAI,KAAK,EACxB,CAAAlH,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAES,MAAM,KAAI,SAAS,EAC7B,CAAAT,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEsB,SAAS,KAAI,MAAM,EAC7BiG,SAAS,CAACtF,KAAK,KAAK,KAAK,GAAG,GAAGsF,SAAS,CAACtF,KAAK,IAAIsF,SAAS,CAACrF,WAAW,EAAE,GAAG,KAAK,EACjFqF,SAAS,CAACpF,WAAW,IAAI,KAAK,EAC9BoF,SAAS,CAACvK,UAAU,KAAK,KAAK,GAAG,GAAGuK,SAAS,CAACvK,UAAU,GAAG,GAAG,KAAK,EACnEgD,QAAQ,aAARA,QAAQ,eAARA,QAAQ,CAAEmB,YAAY,GAAG,IAAIC,IAAI,CAACpB,QAAQ,CAACmB,YAAY,CAAC,CAACmE,kBAAkB,CAAC,CAAC,GAAG,OAAO,CAC1F;IACL,CAAC,CAAC,CACL,CAACK,GAAG,CAAC6B,GAAG,IAAIA,GAAG,CAACzB,IAAI,CAAC,GAAG,CAAC,CAAC,CAACA,IAAI,CAAC,IAAI,CAAC;IAGtC,MAAM0B,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACL,UAAU,CAAC,EAAE;MAAEP,IAAI,EAAE;IAAW,CAAC,CAAC;IACzD,MAAMa,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;IACrC,MAAMK,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAACG,IAAI,GAAGN,GAAG;IACfG,IAAI,CAACI,QAAQ,GAAG,GAAG,EAAAd,sBAAA,GAAA/I,SAAS,CAACyB,cAAc,cAAAsH,sBAAA,uBAAxBA,sBAAA,CAA0BpB,UAAU,KAAI,OAAO,WAAW,IAAI5E,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC8G,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM;IACzHL,IAAI,CAACM,KAAK,CAAC,CAAC;IACZR,GAAG,CAACS,eAAe,CAACV,GAAG,CAAC;EAC5B,CAAC;;EAED;EACA;EACA,MAAMW,qBAAqB,GAAGA,CAAA,KAAM;IAAA,IAAAC,sBAAA;IAChC,IAAI,CAAClK,SAAS,EAAE;IAEhB,MAAMmK,WAAW,GAAGrC,kBAAkB,CAAC,CAAC;IACxC,MAAMsB,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACc,WAAW,CAAC,EAAE;MAAE1B,IAAI,EAAE;IAAY,CAAC,CAAC;IAC3D,MAAMa,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;IACrC,MAAMK,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IAExCF,IAAI,CAACG,IAAI,GAAGN,GAAG;IACfG,IAAI,CAACI,QAAQ,GAAG,GAAG,EAAAK,sBAAA,GAAAlK,SAAS,CAACyB,cAAc,cAAAyI,sBAAA,uBAAxBA,sBAAA,CAA0BvC,UAAU,KAAI,OAAO,cAAc;IAChF8B,IAAI,CAACW,KAAK,CAACC,OAAO,GAAG,MAAM;IAC3BX,QAAQ,CAACY,IAAI,CAACC,WAAW,CAACd,IAAI,CAAC;IAC/BA,IAAI,CAACM,KAAK,CAAC,CAAC;IACZL,QAAQ,CAACY,IAAI,CAACE,WAAW,CAACf,IAAI,CAAC;IAE/BF,GAAG,CAACS,eAAe,CAACV,GAAG,CAAC;EAC5B,CAAC;EACD;;EAIA;EACA,MAAMmB,4BAA4B,GAAGA,CAAA,KAAM;IACvC,IAAI,CAACzK,SAAS,EAAE;;IAEhB;IACA,MAAM0K,QAAQ,GAAGC,MAAM,CAACC,IAAI,CAAC,EAAE,EAAE,QAAQ,EAAE,sBAAsB,CAAC;IAClEF,QAAQ,CAAChB,QAAQ,CAACmB,KAAK,CAACnE,0BAA0B,CAAC,CAAC,CAAC;IACrDgE,QAAQ,CAAChB,QAAQ,CAACoB,KAAK,CAAC,CAAC;IACzBJ,QAAQ,CAACK,KAAK,CAAC,CAAC;;IAEhB;IACAL,QAAQ,CAACM,MAAM,GAAG,MAAM;MACpBN,QAAQ,CAACO,KAAK,CAAC,CAAC;MAChB;MACA;IACJ,CAAC;EACL,CAAC;EACD;;EAEA;;EAEA;EACA,MAAMC,kBAAkB,GAAItJ,SAAS,IAAK;IAAA,IAAAuJ,sBAAA;IACtC;IACA,IAAI,CAACnL,SAAS,EAAE;;IAEhB;IACA,MAAMsF,OAAO,GAAGtF,SAAS,CAACwC,QAAQ,CAACgC,IAAI,CAAC9B,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKf,SAAS,CAAC;IAChE,IAAI,CAAC0D,OAAO,EAAE;;IAEd;IACA,MAAM4D,SAAS,GAAG5F,qBAAqB,CAAC1B,SAAS,CAAC;;IAElD;IACA,MAAMwJ,IAAI,GAAG,CACT,CAAC,YAAY,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE,eAAe,EAAE,cAAc,EAAE,YAAY,EAAE,eAAe,CAAC,EAClI,CACI9F,OAAO,CAAC3C,EAAE,EACV2C,OAAO,CAACC,IAAI,EACZD,OAAO,CAACE,KAAK,EACbF,OAAO,CAACuD,OAAO,IAAI,KAAK,EACxBlH,QAAQ,CAACS,MAAM,IAAI,SAAS,EAC5BT,QAAQ,CAACsB,SAAS,IAAI,MAAM,EAC5B,GAAGiG,SAAS,CAACtF,KAAK,IAAIsF,SAAS,CAACrF,WAAW,EAAE,EAC7CqF,SAAS,CAACpF,WAAW,IAAI,KAAK,EAC9B,GAAGoF,SAAS,CAACvK,UAAU,GAAG,EAC1BmE,YAAY,CACf,CACJ;;IAED;IACA,MAAMuI,KAAK,GAAIC,IAAI,IAAK,IAAIC,MAAM,CAACD,IAAI,CAAC,CAACE,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG;IAEtE,MAAMzC,UAAU,GAAGoC,IAAI,CAClB9D,GAAG,CAAC6B,GAAG,IAAIA,GAAG,CAAC7B,GAAG,CAAC+D,KAAK,CAAC,CAAC3D,IAAI,CAAC,GAAG,CAAC,CAAC,CACpCA,IAAI,CAAC,MAAM,CAAC;;IAIjB;IACA,MAAM0B,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACL,UAAU,CAAC,EAAE;MAAEP,IAAI,EAAE;IAAW,CAAC,CAAC;IACzD,MAAMa,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;IACrC,MAAMK,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAACG,IAAI,GAAGN,GAAG;IACfG,IAAI,CAACI,QAAQ,GAAG,GAAG,EAAAsB,sBAAA,GAAAnL,SAAS,CAACyB,cAAc,cAAA0J,sBAAA,uBAAxBA,sBAAA,CAA0BxD,UAAU,KAAI,OAAO,IAAIrC,OAAO,CAAC3C,EAAE,MAAM;IACtF8G,IAAI,CAACM,KAAK,CAAC,CAAC;IACZR,GAAG,CAACS,eAAe,CAACV,GAAG,CAAC;EAC5B,CAAC;EACD;;EAEA,MAAMoC,gBAAgB,GAAG,MAAOC,KAAK,IAAK;IACtC,MAAMC,IAAI,GAAGD,KAAK,CAACrK,MAAM,CAACuK,KAAK,CAAC,CAAC,CAAC;IAClC,IAAI,CAACD,IAAI,EAAE;IAEX7L,eAAe,CAAC,YAAY,CAAC;IAE7B,IAAI;MAAA,IAAA+L,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;MACA;MACA,MAAMC,MAAM,GAAG,MAAM/N,cAAc,CAACsN,IAAI,CAAC;MAEzC,IAAI,CAACS,MAAM,CAACC,OAAO,EAAE;QACjB,MAAM,IAAIC,KAAK,CAACF,MAAM,CAACG,KAAK,IAAI,4BAA4B,CAAC;MACjE;;MAEA;MACA,MAAMC,UAAU,GAAGlO,mBAAmB,CAAC8N,MAAM,CAAC7J,QAAQ,CAAC;MAEvD,IAAI6J,MAAM,CAAC7J,QAAQ,CAACgE,MAAM,KAAK,CAAC,EAAE;QAC9B,MAAM,IAAI+F,KAAK,CAAC,8CAA8C,CAAC;MACnE;;MAEA;MACA,MAAM1J,eAAe,GAAGwJ,MAAM,CAAC7J,QAAQ,CAAC8E,GAAG,CAAC,OAAO;QAC/ClF,MAAM,EAAE,SAAS;QACjBU,YAAY,EAAE,IAAI;QAClBG,SAAS,EAAE;MACf,CAAC,CAAC,CAAC;MAEH,MAAMyJ,aAAa,GAAG;QAClBlK,QAAQ,EAAE6J,MAAM,CAAC7J,QAAQ;QACzBK,eAAe;QACfb,QAAQ,EAAE4J,IAAI,CAACrG,IAAI;QACnBoH,QAAQ,EAAEf,IAAI,CAACgB,IAAI;QACnBC,UAAU,EAAE,IAAI9J,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QACpC;QACAvB,cAAc,EAAE;UACZkG,UAAU,EAAE,EAAAmE,qBAAA,GAAAO,MAAM,CAAC5K,cAAc,cAAAqK,qBAAA,uBAArBA,qBAAA,CAAuBnE,UAAU,KAAI,UAAU;UAC3DC,UAAU,EAAE,EAAAmE,sBAAA,GAAAM,MAAM,CAAC5K,cAAc,cAAAsK,sBAAA,uBAArBA,sBAAA,CAAuBnE,UAAU,KAAI,cAAc;UAC/DC,OAAO,EAAE,EAAAmE,sBAAA,GAAAK,MAAM,CAAC5K,cAAc,cAAAuK,sBAAA,uBAArBA,sBAAA,CAAuBnE,OAAO,KAAI,SAAS;UACpDjJ,WAAW,EAAE,EAAAqN,sBAAA,GAAAI,MAAM,CAAC5K,cAAc,cAAAwK,sBAAA,uBAArBA,sBAAA,CAAuBrN,WAAW,KAAI,QAAQ;UAAE;UAC7D;UACAkO,UAAU,EAAE,EAAAZ,sBAAA,GAAAG,MAAM,CAAC5K,cAAc,cAAAyK,sBAAA,uBAArBA,sBAAA,CAAuBY,UAAU,CAAC;UAAA,OAAAX,sBAAA,GAE1CE,MAAM,CAAC5K,cAAc,cAAA0K,sBAAA,uBAArBA,sBAAA,CAAuBY,UAAU,EAAC;UAAA,GAElC,KAAK;UACTC,IAAI,EAAE,EAAAZ,sBAAA,GAAAC,MAAM,CAAC5K,cAAc,cAAA2K,sBAAA,uBAArBA,sBAAA,CAAuBY,IAAI,KAAI;QACzC,CAAC;QACDP,UAAU,EAAE;UACRQ,eAAe,EAAER,UAAU,CAACQ,eAAe,IAAI,GAAG;UAClDC,MAAM,EAAET,UAAU,CAACS,MAAM,IAAI;QACjC;MACJ,CAAC;MAEDjN,YAAY,CAACyM,aAAa,CAAC;MAC3B3M,eAAe,CAAC,SAAS,CAAC;MAE1BoN,UAAU,CAAC,MAAMpN,eAAe,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;IAC/C,CAAC,CAAC,OAAOyM,KAAK,EAAE;MACZrJ,OAAO,CAACqJ,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CzM,eAAe,CAAC,OAAO,CAAC;MACxBoN,UAAU,CAAC,MAAMpN,eAAe,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;IAC/C;EACJ,CAAC;EAED,MAAMqN,mBAAmB,GAAGA,CAAA,KAAM;IAC9B,IAAI,CAACpN,SAAS,IAAIA,SAAS,CAACwC,QAAQ,CAACgE,MAAM,KAAK,CAAC,EAAE;MAC/C6G,KAAK,CAAC,oCAAoC,CAAC;MAC3C;IACJ;IAEA,IAAI,CAACxM,YAAY,EAAE;MACfwM,KAAK,CAAC,qDAAqD,CAAC;MAC5D;IACJ;;IAEA;IACA,MAAMf,OAAO,GAAGlM,wBAAwB,CAACJ,SAAS,CAAC;IACnD,IAAIsM,OAAO,EAAE;MACTjM,YAAY,CAAC,cAAc,CAAC;IAChC;EACJ,CAAC;;EAED;EACA,MAAMiN,mBAAmB,GAAGA,CAAA,KAAM;IAC9BnN,iBAAiB,CAACqB,IAAI,KAAK;MACvB,GAAGA,IAAI;MACP+L,MAAM,EAAE;IACZ,CAAC,CAAC,CAAC;EACP,CAAC;;EAED;EACA,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IAC/BrN,iBAAiB,CAACqB,IAAI,KAAK;MACvB,GAAGA,IAAI;MACP+L,MAAM,EAAE;IACZ,CAAC,CAAC,CAAC;IACHlN,YAAY,CAAC,cAAc,CAAC;EAChC,CAAC;EAED,oBACI5B,OAAA;IAAKqD,SAAS,EAAC,yBAAyB;IAAAC,QAAA,eACpCtD,OAAA;MAAKqD,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAE9BtD,OAAA;QAAKqD,SAAS,EAAC,2DAA2D;QAAAC,QAAA,eACtEtD,OAAA;UAAKqD,SAAS,EAAC,mCAAmC;UAAAC,QAAA,gBAC9CtD,OAAA;YAAAsD,QAAA,gBACItD,OAAA;cAAIqD,SAAS,EAAC,yBAAyB;cAAAC,QAAA,EAAC;YAAkB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC/D1D,OAAA;cAAGqD,SAAS,EAAC,eAAe;cAAAC,QAAA,EAAC;YAE7B;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACN1D,OAAA;YAAKqD,SAAS,EAAC,yBAAyB;YAAAC,QAAA,GACnC/B,SAAS,iBACNvB,OAAA;cAAKqD,SAAS,EAAC,YAAY;cAAAC,QAAA,gBACvBtD,OAAA;gBAAKqD,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,EAC9B/B,SAAS,CAACwC,QAAQ,CAACgE;cAAM;gBAAAxE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzB,CAAC,eACN1D,OAAA;gBAAKqD,SAAS,EAAC,uBAAuB;gBAAAC,QAAA,EAAC;cAEvC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CACR,eACD1D,OAAA,CAAChB,KAAK;cAACmP,IAAI,EAAE,EAAG;cAAC9K,SAAS,EAAC;YAAe;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAEN1D,OAAA;QAAKqD,SAAS,EAAC,iCAAiC;QAAAC,QAAA,GAE3C,CAAC/B,SAAS,iBACPvB,OAAA;UAAKqD,SAAS,EAAC,KAAK;UAAAC,QAAA,eAChBtD,OAAA;YAAKqD,SAAS,EAAC,+BAA+B;YAAAC,QAAA,gBAC1CtD,OAAA;cAAKqD,SAAS,EAAC,uDAAuD;cAAAC,QAAA,gBAClEtD,OAAA,CAACL,eAAe;gBAACwO,IAAI,EAAE,EAAG;gBAAC9K,SAAS,EAAC;cAA4B;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACpE1D,OAAA;gBAAIqD,SAAS,EAAC,uCAAuC;gBAAAC,QAAA,EAAC;cAEtD;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACL1D,OAAA;gBAAGqD,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,EAAC;cAElC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,eAEJ1D,OAAA;gBACIgP,GAAG,EAAE5N,YAAa;gBAClB4I,IAAI,EAAC,MAAM;gBACXiF,MAAM,EAAC,YAAY;gBACnBC,QAAQ,EAAEjC,gBAAiB;gBAC3B5J,SAAS,EAAC;cAAQ;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrB,CAAC,eAEF1D,OAAA;gBACImP,OAAO,EAAEA,CAAA;kBAAA,IAAAC,qBAAA;kBAAA,QAAAA,qBAAA,GAAMhO,YAAY,CAACiO,OAAO,cAAAD,qBAAA,uBAApBA,qBAAA,CAAsB9D,KAAK,CAAC,CAAC;gBAAA,CAAC;gBAC7CgE,QAAQ,EAAEjO,YAAY,KAAK,YAAa;gBACxCgC,SAAS,EAAC,4KAA4K;gBAAAC,QAAA,gBAEtLtD,OAAA,CAACL,eAAe;kBAACwO,IAAI,EAAE;gBAAG;kBAAA5K,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,EAC5BrC,YAAY,KAAK,YAAY,GAAG,eAAe,GAAG,mBAAmB;cAAA;gBAAAkC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClE,CAAC,EAERrC,YAAY,KAAK,SAAS,iBACvBrB,OAAA;gBAAKqD,SAAS,EAAC,iCAAiC;gBAAAC,QAAA,EAAC;cAEjD;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CACR,EAEArC,YAAY,KAAK,OAAO,iBACrBrB,OAAA;gBAAKqD,SAAS,EAAC,+BAA+B;gBAAAC,QAAA,EAAC;cAE/C;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CACR;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC,eAEN1D,OAAA;cAAKqD,SAAS,EAAC,qCAAqC;cAAAC,QAAA,gBAChDtD,OAAA;gBAAIqD,SAAS,EAAC,kCAAkC;gBAAAC,QAAA,EAAC;cAAsB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC5E1D,OAAA;gBAAKqD,SAAS,EAAC,iCAAiC;gBAAAC,QAAA,gBAC5CtD,OAAA;kBAAAsD,QAAA,gBAAKtD,OAAA;oBAAAsD,QAAA,EAAQ;kBAAiB;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,oBAAgB;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAC7D1D,OAAA;kBAAAsD,QAAA,gBAAKtD,OAAA;oBAAAsD,QAAA,EAAQ;kBAAiB;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,mCAA+B;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAC5E1D,OAAA;kBAAAsD,QAAA,gBAAKtD,OAAA;oBAAAsD,QAAA,EAAQ;kBAAW;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,kBAAc;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACrD1D,OAAA;kBAAAsD,QAAA,gBAAKtD,OAAA;oBAAAsD,QAAA,EAAQ;kBAAK;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,4CAAwC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACxE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CACR,EAGAnC,SAAS,iBACNvB,OAAA;UAAKqD,SAAS,EAAC,KAAK;UAAAC,QAAA,gBAEhBtD,OAAA;YAAKqD,SAAS,EAAC,4CAA4C;YAAAC,QAAA,gBAEvDtD,OAAA;cAAKqD,SAAS,EAAC,kFAAkF;cAAAC,QAAA,gBAC7FtD,OAAA;gBAAKqD,SAAS,EAAC,8BAA8B;gBAAAC,QAAA,gBACzCtD,OAAA,CAACf,QAAQ;kBAACoE,SAAS,EAAC,eAAe;kBAAC8K,IAAI,EAAE;gBAAG;kBAAA5K,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eAChD1D,OAAA;kBAAIqD,SAAS,EAAC,qCAAqC;kBAAAC,QAAA,EAAC;gBAEpD;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CAAC,eACN1D,OAAA;gBAAKqD,SAAS,EAAC,mBAAmB;gBAAAC,QAAA,gBAC9BtD,OAAA;kBAAAsD,QAAA,gBACItD,OAAA;oBAAAsD,QAAA,EAAQ;kBAAK;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,EAAC,GAAG,EACzB,EAAA5C,uBAAA,GAAAS,SAAS,CAACyB,cAAc,cAAAlC,uBAAA,uBAAxBA,uBAAA,CAA0BoI,UAAU,KAAI,KAAK;gBAAA;kBAAA3F,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC7C,CAAC,eACN1D,OAAA;kBAAAsD,QAAA,gBACItD,OAAA;oBAAAsD,QAAA,EAAQ;kBAAK;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,EAAC,GAAG,EACzB,EAAA3C,uBAAA,GAAAQ,SAAS,CAACyB,cAAc,cAAAjC,uBAAA,uBAAxBA,uBAAA,CAA0BoI,UAAU,KAAI,KAAK;gBAAA;kBAAA5F,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC7C,CAAC,eACN1D,OAAA;kBAAAsD,QAAA,gBACItD,OAAA;oBAAAsD,QAAA,EAAQ;kBAAQ;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,EAAC,GAAG,EAC5B,EAAA1C,uBAAA,GAAAO,SAAS,CAACyB,cAAc,cAAAhC,uBAAA,uBAAxBA,uBAAA,CAA0BoI,OAAO,KAAI,KAAK;gBAAA;kBAAA7F,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC1C,CAAC,eACN1D,OAAA;kBAAAsD,QAAA,gBACItD,OAAA;oBAAAsD,QAAA,EAAQ;kBAAU;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,EAAC,GAAG,EAC9B,EAAAzC,uBAAA,GAAAM,SAAS,CAACyB,cAAc,cAAA/B,uBAAA,uBAAxBA,uBAAA,CAA0BoN,UAAU,KAAI,KAAK;gBAAA;kBAAA9K,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC7C,CAAC,eAEN1D,OAAA;kBAAKqD,SAAS,EAAC,MAAM;kBAAAC,QAAA,gBACjBtD,OAAA;oBAAOuP,OAAO,EAAC,aAAa;oBAAClM,SAAS,EAAC,uCAAuC;oBAAAC,QAAA,EAAC;kBAAa;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC,eACpG1D,OAAA;oBACIkE,EAAE,EAAC,aAAa;oBAChB4C,IAAI,EAAC,aAAa;oBAClBhE,KAAK,EAAE,EAAA5B,uBAAA,GAAAK,SAAS,CAACyB,cAAc,cAAA9B,uBAAA,uBAAxBA,uBAAA,CAA0Bf,WAAW,KAAI,QAAS;oBACzD+O,QAAQ,EAAExM,uBAAwB;oBAClCW,SAAS,EAAC,oJAAoJ;oBAAAC,QAAA,gBAE9JtD,OAAA;sBAAQ8C,KAAK,EAAC,QAAQ;sBAAAQ,QAAA,EAAC;oBAAM;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,eACtC1D,OAAA;sBAAQ8C,KAAK,EAAC,SAAS;sBAAAQ,QAAA,EAAC;oBAAO;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,eACxC1D,OAAA;sBAAQ8C,KAAK,EAAC,aAAa;sBAAAQ,QAAA,EAAC;oBAAW;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC5C,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACR,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eAGN1D,OAAA;cAAKqD,SAAS,EAAC,qFAAqF;cAAAC,QAAA,gBAChGtD,OAAA;gBAAKqD,SAAS,EAAC,8BAA8B;gBAAAC,QAAA,gBACzCtD,OAAA,CAACd,aAAa;kBAACmE,SAAS,EAAC,gBAAgB;kBAAC8K,IAAI,EAAE;gBAAG;kBAAA5K,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eACtD1D,OAAA;kBAAIqD,SAAS,EAAC,sCAAsC;kBAAAC,QAAA,EAAC;gBAErD;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CAAC,eACN1D,OAAA;gBAAKqD,SAAS,EAAC,mBAAmB;gBAAAC,QAAA,gBAC9BtD,OAAA;kBAAAsD,QAAA,gBACItD,OAAA;oBAAAsD,QAAA,EAAQ;kBAAe;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,KAAC,EAACnC,SAAS,CAACwC,QAAQ,CAACgE,MAAM;gBAAA;kBAAAxE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC1D,CAAC,eACN1D,OAAA;kBAAAsD,QAAA,gBACItD,OAAA;oBAAAsD,QAAA,EAAQ;kBAAa;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,EAAC,GAAG,EACjC4D,kBAAkB,CAAC,CAAC,CAACG,KAAK;gBAAA;kBAAAlE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC1B,CAAC,eACN1D,OAAA;kBAAAsD,QAAA,gBACItD,OAAA;oBAAAsD,QAAA,EAAQ;kBAAa;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,EAAC,GAAG,EACjC4D,kBAAkB,CAAC,CAAC,CAACI,KAAK;gBAAA;kBAAAnE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC1B,CAAC,eACN1D,OAAA;kBAAAsD,QAAA,gBACItD,OAAA;oBAAAsD,QAAA,EAAQ;kBAAW;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,EAAC,GAAG,EAC/B4D,kBAAkB,CAAC,CAAC,CAACpH,UAAU,EAAC,GACrC;gBAAA;kBAAAqD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eAGN1D,OAAA;cAAKqD,SAAS,EAAC,oFAAoF;cAAAC,QAAA,gBAC/FtD,OAAA;gBAAKqD,SAAS,EAAC,8BAA8B;gBAAAC,QAAA,gBACzCtD,OAAA,CAACb,IAAI;kBAACkE,SAAS,EAAC,iBAAiB;kBAAC8K,IAAI,EAAE;gBAAG;kBAAA5K,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eAC9C1D,OAAA;kBAAIqD,SAAS,EAAC,uCAAuC;kBAAAC,QAAA,EAAC;gBAEtD;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CAAC,eACN1D,OAAA;gBAAKqD,SAAS,EAAC,WAAW;gBAAAC,QAAA,EACrB,EAAC7B,cAAc,aAAdA,cAAc,eAAdA,cAAc,CAAEqN,MAAM,iBACpB9O,OAAA;kBAAAsD,QAAA,gBACItD,OAAA;oBAAKqD,SAAS,EAAC,8BAA8B;oBAAAC,QAAA,EACxC,CAAA7B,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAE+N,mBAAmB,IAAG,CAAC,GAClC,qBAAqB/N,cAAc,CAAC+N,mBAAmB,GAAG,CAAC,OAAOjO,SAAS,CAACwC,QAAQ,CAACgE,MAAM,EAAE,GAC7F;kBAA8B;oBAAAxE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAEnC,CAAC,eACN1D,OAAA;oBAAKqD,SAAS,EAAC,YAAY;oBAAAC,QAAA,GACtB,CAAA7B,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAE+N,mBAAmB,IAAG,CAAC,gBACpCxP,OAAA;sBACImP,OAAO,EAAEJ,oBAAqB;sBAC9B1L,SAAS,EAAC,uHAAuH;sBAAAC,QAAA,gBAEjItD,OAAA,CAACb,IAAI;wBAACgP,IAAI,EAAE;sBAAG;wBAAA5K,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAE,CAAC,kBAEtB;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,gBAET1D,OAAA;sBACImP,OAAO,EAAER,mBAAoB;sBAC7BW,QAAQ,EAAE,CAAClN,YAAa;sBACxBiB,SAAS,EAAC,yKAAyK;sBAAAC,QAAA,gBAEnLtD,OAAA,CAACb,IAAI;wBAACgP,IAAI,EAAE;sBAAG;wBAAA5K,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAE,CAAC,uBAEtB;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CACX,EACA,CAACtB,YAAY,iBACVpC,OAAA;sBAAKqD,SAAS,EAAC,8BAA8B;sBAAAC,QAAA,EAAC;oBAE9C;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CACR;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACA,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACL,CAAC,gBAEN1D,OAAA;kBAAAsD,QAAA,gBACItD,OAAA;oBAAKqD,SAAS,EAAC,yCAAyC;oBAAAC,QAAA,GAAC,kCAC1B,EAAC7B,cAAc,CAAC+N,mBAAmB,GAAG,CAAC,EAAC,MAAI,EAACjO,SAAS,CAACwC,QAAQ,CAACgE,MAAM;kBAAA;oBAAAxE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAChG,CAAC,eACN1D,OAAA;oBACImP,OAAO,EAAEN,mBAAoB;oBAC7BxL,SAAS,EAAC,yHAAyH;oBAAAC,QAAA,gBAEnItD,OAAA,CAACV,KAAK;sBAAC6O,IAAI,EAAE;oBAAG;sBAAA5K,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE,CAAC,iBAEvB;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACR;cACR;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eAGN1D,OAAA;YAAKqD,SAAS,EAAC,4CAA4C;YAAAC,QAAA,gBACvDtD,OAAA;cAAKqD,SAAS,EAAC,iFAAiF;cAAAC,QAAA,gBAC5FtD,OAAA;gBAAIqD,SAAS,EAAC,qCAAqC;gBAAAC,QAAA,EAAC;cAEpD;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACL1D,OAAA;gBAAKqD,SAAS,EAAC,YAAY;gBAAAC,QAAA,gBACvBtD,OAAA;kBACImP,OAAO,EAAE9E,oBAAqB;kBAC9BhH,SAAS,EAAC,mJAAmJ;kBAAAC,QAAA,gBAE7JtD,OAAA,CAACZ,QAAQ;oBAAC+O,IAAI,EAAE;kBAAG;oBAAA5K,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,OAE1B;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACT1D,OAAA;kBACImP,OAAO,EAAE3D,qBAAsB;kBAC/BnI,SAAS,EAAC,4HAA4H;kBAAAC,QAAA,gBAEtItD,OAAA,CAACP,QAAQ;oBAAC0O,IAAI,EAAE;kBAAG;oBAAA5K,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,QAE1B;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACT1D,OAAA;kBACImP,OAAO,EAAEnD,4BAA6B;kBACtC3I,SAAS,EAAC,wHAAwH;kBAAAC,QAAA,gBAElItD,OAAA,CAACP,QAAQ;oBAAC0O,IAAI,EAAE;kBAAG;oBAAA5K,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,OAE1B;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACR,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eAEN1D,OAAA;cAAKqD,SAAS,EAAC,iBAAiB;cAAAC,QAAA,eAE5BtD,OAAA;gBAAOqD,SAAS,EAAC,0BAA0B;gBAAAC,QAAA,gBACvCtD,OAAA;kBAAOqD,SAAS,EAAC,YAAY;kBAAAC,QAAA,eACzBtD,OAAA;oBAAAsD,QAAA,gBACItD,OAAA;sBAAIqD,SAAS,EAAC,gFAAgF;sBAAAC,QAAA,EAAC;oBAE/F;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eACL1D,OAAA;sBAAIqD,SAAS,EAAC,gFAAgF;sBAAAC,QAAA,EAAC;oBAE/F;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eACL1D,OAAA;sBAAIqD,SAAS,EAAC,gFAAgF;sBAAAC,QAAA,EAAC;oBAE/F;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eACL1D,OAAA;sBAAIqD,SAAS,EAAC,gFAAgF;sBAAAC,QAAA,EAAC;oBAE/F;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eACL1D,OAAA;sBAAIqD,SAAS,EAAC,gFAAgF;sBAAAC,QAAA,EAAC;oBAE/F;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eACL1D,OAAA;sBAAIqD,SAAS,EAAC,gFAAgF;sBAAAC,QAAA,EAAC;oBAE/F;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eAEL1D,OAAA;sBAAIqD,SAAS,EAAC,qFAAqF;sBAAAC,QAAA,EAAC;oBAEpG;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACL;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACF,CAAC,eACR1D,OAAA;kBAAOqD,SAAS,EAAC,mCAAmC;kBAAAC,QAAA,EAC/C/B,SAAS,CAACwC,QAAQ,CAAC8E,GAAG,CAAC,CAAChC,OAAO,EAAE2D,KAAK,KAAK;oBACxC,MAAMtH,QAAQ,GAAG3B,SAAS,CAAC6C,eAAe,CAACoG,KAAK,CAAC;oBACjD,MAAMiF,gBAAgB,GAAGhO,cAAc,CAACqN,MAAM,IAAItE,KAAK,KAAK/I,cAAc,CAAC+N,mBAAmB;oBAC9F,MAAMpM,WAAW,GAAGrB,cAAc,CAAC8E,OAAO,CAAC3C,EAAE,CAAC;oBAE9C,oBACIlE,OAAA;sBAEIqD,SAAS,EAAE,GAAGoM,gBAAgB,GACxB,uCAAuC,GACvC,kBAAkB,oBACC;sBAAAnM,QAAA,gBAEzBtD,OAAA;wBAAIqD,SAAS,EAAC,wEAAwE;wBAAAC,QAAA,EACjFkH,KAAK,GAAG;sBAAC;wBAAAjH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACV,CAAC,eACL1D,OAAA;wBAAIqD,SAAS,EAAC,6BAA6B;wBAAAC,QAAA,EACtCL,gBAAgB,CAACC,QAAQ,EAAE2D,OAAO,CAAC3C,EAAE;sBAAC;wBAAAX,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACvC,CAAC,eACL1D,OAAA;wBAAIqD,SAAS,EAAC,+DAA+D;wBAAAC,QAAA,EACxEuD,OAAO,CAAC3C;sBAAE;wBAAAX,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACX,CAAC,eACL1D,OAAA;wBAAIqD,SAAS,EAAC,wEAAwE;wBAAAC,QAAA,EACjFuD,OAAO,CAACC;sBAAI;wBAAAvD,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACb,CAAC,eACL1D,OAAA;wBAAIqD,SAAS,EAAC,wEAAwE;wBAAAC,QAAA,EACjFuD,OAAO,CAACE;sBAAK;wBAAAxD,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACd,CAAC,eACL1D,OAAA;wBAAIqD,SAAS,EAAC,mDAAmD;wBAAAC,QAAA,EAC5DuD,OAAO,CAACuD;sBAAO;wBAAA7G,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAChB,CAAC,eAIL1D,OAAA;wBAAIqD,SAAS,EAAC,0CAA0C;wBAAAC,QAAA,eACpDtD,OAAA;0BAAKqD,SAAS,EAAC,mCAAmC;0BAAAC,QAAA,gBAE9CtD,OAAA;4BACImP,OAAO,EAAEA,CAAA,KAAMvI,qBAAqB,CAACC,OAAO,CAAE;4BAC9CxD,SAAS,EAAC,wKAAwK;4BAAAC,QAAA,EAEjLF,WAAW,KAAK,OAAO,GAAG,MAAM,GAAG;0BAAM;4BAAAG,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OACtC,CAAC,EAGRN,WAAW,KAAK,OAAO,iBACpBpD,OAAA;4BACImP,OAAO,EAAEA,CAAA,KAAMvL,aAAa,CAACiD,OAAO,CAAC3C,EAAE,CAAE;4BACzCb,SAAS,EAAC,2KAA2K;4BAAAC,QAAA,EACxL;0BAED;4BAAAC,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAQ,CACX,eAGD1D,OAAA;4BACImP,OAAO,EAAEA,CAAA,KAAM1C,kBAAkB,CAAC5F,OAAO,CAAC3C,EAAE,CAAE;4BAC9Cb,SAAS,EAAC,8KAA8K;4BAAAC,QAAA,gBAExLtD,OAAA,CAACN,YAAY;8BAACyO,IAAI,EAAE;4BAAG;8BAAA5K,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OAAE,CAAC,gBAE9B;0BAAA;4BAAAH,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAQ,CAAC,EAGRN,WAAW,KAAK,OAAO,iBACpBpD,OAAA;4BACImP,OAAO,EAAEA,CAAA,KAAM1K,WAAW,CAACoC,OAAO,CAAC3C,EAAE,CAAE;4BACvCb,SAAS,EAAC,8KAA8K;4BAAAC,QAAA,gBAExLtD,OAAA,CAACR,MAAM;8BAAC2O,IAAI,EAAE;4BAAG;8BAAA5K,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OAAE,CAAC,UAExB;0BAAA;4BAAAH,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAQ,CACX;wBAAA;0BAAAH,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACA;sBAAC;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACN,CAAC;oBAAA,GAnEAmD,OAAO,CAAC3C,EAAE;sBAAAX,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAoEf,CAAC;kBAEb,CAAC;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eAGN1D,OAAA;YAAKqD,SAAS,EAAC,gCAAgC;YAAAC,QAAA,gBAC3CtD,OAAA;cAAIqD,SAAS,EAAC,0CAA0C;cAAAC,QAAA,EAAC;YAAc;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC5E1D,OAAA;cAAKqD,SAAS,EAAC,+CAA+C;cAAAC,QAAA,gBAC1DtD,OAAA;gBAAAsD,QAAA,gBACItD,OAAA;kBAAMqD,SAAS,EAAC,eAAe;kBAAAC,QAAA,EAAC;gBAAK;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAC5C1D,OAAA;kBAAKqD,SAAS,EAAC,aAAa;kBAAAC,QAAA,EAAE/B,SAAS,CAACgC;gBAAQ;kBAAAA,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtD,CAAC,eACN1D,OAAA;gBAAAsD,QAAA,gBACItD,OAAA;kBAAMqD,SAAS,EAAC,eAAe;kBAAAC,QAAA,EAAC;gBAAY;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACnD1D,OAAA;kBAAKqD,SAAS,EAAC,aAAa;kBAAAC,QAAA,EACvB,IAAIgB,IAAI,CAAC/C,SAAS,CAAC6M,UAAU,CAAC,CAAC5F,kBAAkB,CAAC;gBAAC;kBAAAjF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnD,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC,eACN1D,OAAA;gBAAAsD,QAAA,gBACItD,OAAA;kBAAMqD,SAAS,EAAC,eAAe;kBAAAC,QAAA,EAAC;gBAAa;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACpD1D,OAAA;kBAAKqD,SAAS,EAAC,aAAa;kBAAAC,QAAA,GACvB,EAAAnC,qBAAA,GAAAI,SAAS,CAACyM,UAAU,cAAA7M,qBAAA,uBAApBA,qBAAA,CAAsBqN,eAAe,KAAI,CAAC,EAAC,GAChD;gBAAA;kBAAAjL,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC,eACN1D,OAAA;gBAAAsD,QAAA,gBACItD,OAAA;kBAAMqD,SAAS,EAAC,eAAe;kBAAAC,QAAA,EAAC;gBAAe;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACtD1D,OAAA;kBAAKqD,SAAS,EAAC,aAAa;kBAAAC,QAAA,EAAE/B,SAAS,CAACwC,QAAQ,CAACgE;gBAAM;kBAAAxE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC7D,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CACR;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC7C,EAAA,CAlsCID,gBAAgB;EAAA,QA8CdhB,aAAa;AAAA;AAAA8P,EAAA,GA9Cf9O,gBAAgB;AAosCtB,eAAeA,gBAAgB;AAAC,IAAA8O,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}