{"ast":null,"code":"/**\r\n * School Logo Integration Utility\r\n * Helper functions to integrate school logos into exports with right-side positioning\r\n */\n\n/**\r\n * Get the saved school logo from session storage\r\n * @returns {string|null} Base64 encoded logo or null if not found\r\n */\nexport const getSchoolLogo = () => {\n  try {\n    return sessionStorage.getItem('schoolLogo');\n  } catch (error) {\n    console.warn('Error accessing school logo from session storage:', error);\n    return null;\n  }\n};\n\n/**\r\n * Get school logo metadata\r\n * @returns {object} Object containing logo name, size, and data\r\n */\nexport const getSchoolLogoInfo = () => {\n  try {\n    const logo = sessionStorage.getItem('schoolLogo');\n    const name = sessionStorage.getItem('schoolLogoName');\n    const size = sessionStorage.getItem('schoolLogoSize');\n    return {\n      logo,\n      name: name || 'Unknown',\n      size: parseInt(size) || 0,\n      exists: !!logo\n    };\n  } catch (error) {\n    console.warn('Error accessing school logo info:', error);\n    return {\n      logo: null,\n      name: 'Unknown',\n      size: 0,\n      exists: false\n    };\n  }\n};\n\n/**\r\n * Generate HTML for logo display in exports\r\n * @param {object} options - Styling options for the logo\r\n * @returns {string} HTML string for logo or empty string if no logo\r\n */\nexport const getLogoHtml = (options = {}) => {\n  const logo = getSchoolLogo();\n  if (!logo) return '';\n  const {\n    className = 'school-logo',\n    style = '',\n    alt = 'School Logo',\n    maxHeight = 80,\n    maxWidth = 200\n  } = options;\n  const inlineStyle = `max-height: ${maxHeight}px; max-width: ${maxWidth}px; object-fit: contain; ${style}`;\n  return `<img src=\"${logo}\" alt=\"${alt}\" class=\"${className}\" style=\"${inlineStyle}\" />`;\n};\n\n/**\r\n * Enhanced HTML header with logo positioned on the right for grade reports\r\n * @param {object} reportData - Report information\r\n * @param {object} logoOptions - Logo styling options\r\n * @returns {string} Complete HTML header with right-positioned logo\r\n */\nexport const generateReportHeader = (reportData, logoOptions = {}) => {\n  const {\n    title = 'Grade Report',\n    courseCode = '',\n    courseName = '',\n    section = '',\n    rubricTitle = 'Unnamed Rubric'\n  } = reportData;\n  const currentDate = new Date().toLocaleDateString('en-CA');\n  const currentTime = new Date().toLocaleTimeString('en-CA');\n  const logoHtml = getLogoHtml({\n    className: 'report-logo',\n    maxHeight: logoOptions.maxHeight || 80,\n    maxWidth: logoOptions.maxWidth || 200,\n    style: 'display: block;',\n    ...logoOptions\n  });\n\n  // Header with logo positioned on the right\n  return `\n    <div class=\"header\">\n      <div class=\"header-content\">\n        <div class=\"title-section\">\n          <h1 class=\"report-title\">${title}</h1>\n          <div class=\"meta\">\n            ${courseCode ? `<strong>Course:</strong> ${courseCode}${courseName ? ` - ${courseName}` : ''}<br>` : ''}\n            ${section ? `<strong>Section:</strong> ${section}<br>` : ''}\n            ${rubricTitle ? `<strong>Assessment:</strong> ${rubricTitle}<br>` : ''}\n            <strong>Generated:</strong> ${currentDate} at ${currentTime}\n          </div>\n        </div>\n        ${logoHtml ? `<div class=\"logo-section\">${logoHtml}</div>` : ''}\n      </div>\n    </div>\n  `;\n};\n\n/**\r\n * Generate header for assignment pages with right-positioned logo\r\n * @param {object} assignmentData - Assignment information\r\n * @param {object} logoOptions - Logo styling options\r\n * @returns {string} HTML header for assignment pages\r\n */\nexport const generateAssignmentHeader = (assignmentData, logoOptions = {}) => {\n  const {\n    title = 'Assignment',\n    assignmentNumber = '',\n    courseCode = '',\n    weight = ''\n  } = assignmentData;\n  const logoHtml = getLogoHtml({\n    className: 'assignment-logo',\n    maxHeight: logoOptions.maxHeight || 70,\n    maxWidth: logoOptions.maxWidth || 200,\n    style: 'display: block;',\n    ...logoOptions\n  });\n  return `\n    <div class=\"assignment-header\">\n      <div class=\"header-content\">\n        <div class=\"title-section\">\n          <h1>${assignmentNumber ? `Assignment ${assignmentNumber}: ` : ''}${title}</h1>\n          ${weight ? `<p class=\"weight-info\">Weight: ${weight}% of Final Grade</p>` : ''}\n          ${courseCode ? `<p class=\"course-code\">${courseCode}</p>` : ''}\n        </div>\n        ${logoHtml ? `<div class=\"logo-section\">${logoHtml}</div>` : ''}\n      </div>\n    </div>\n  `;\n};\n\n/**\r\n * Generate header for rubric exports with right-positioned logo\r\n * @param {object} rubricData - Rubric information\r\n * @param {object} logoOptions - Logo styling options\r\n * @returns {string} HTML header for rubric pages\r\n */\nexport const generateRubricHeader = (rubricData, logoOptions = {}) => {\n  const {\n    title = 'Assessment Rubric',\n    description = '',\n    totalPoints = '',\n    criteria = 0\n  } = rubricData;\n  const logoHtml = getLogoHtml({\n    className: 'rubric-logo',\n    maxHeight: logoOptions.maxHeight || 80,\n    maxWidth: logoOptions.maxWidth || 200,\n    style: 'display: block;',\n    ...logoOptions\n  });\n  return `\n    <div class=\"rubric-header\">\n      <div class=\"header-content\">\n        <div class=\"title-section\">\n          <h1>${title}</h1>\n          ${description ? `<p class=\"description\">${description}</p>` : ''}\n          <div class=\"rubric-meta\">\n            ${totalPoints ? `<strong>Total Points:</strong> ${totalPoints} | ` : ''}\n            <strong>Criteria:</strong> ${criteria}\n          </div>\n        </div>\n        ${logoHtml ? `<div class=\"logo-section\">${logoHtml}</div>` : ''}\n      </div>\n    </div>\n  `;\n};\n\n/**\r\n * Complete CSS styles for logo-enhanced reports with right-positioned logos\r\n * @returns {string} CSS styles including logo styling\r\n */\nexport const getReportStyles = () => {\n  return `\n    <style>\n      body { \n        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; \n        margin: 20px; \n        line-height: 1.6; \n        color: #333;\n        background: white;\n      }\n      \n      /* Header Layouts with Right-Positioned Logo */\n      .header, .assignment-header, .rubric-header { \n        margin-bottom: 30px; \n        padding: 20px 0;\n        border-bottom: 2px solid #e5e7eb;\n      }\n      \n      .header-content {\n        display: flex;\n        justify-content: space-between;\n        align-items: flex-start;\n        gap: 20px;\n      }\n      \n      .title-section {\n        flex: 1;\n        min-width: 0; /* Allow text to wrap */\n      }\n      \n      .logo-section {\n        flex-shrink: 0;\n        display: flex;\n        align-items: flex-start;\n        justify-content: flex-end;\n        margin-left: 20px;\n      }\n      \n      /* Logo Styling */\n      .school-logo, .report-logo, .assignment-logo, .rubric-logo { \n        max-height: 80px; \n        max-width: 200px; \n        object-fit: contain; \n        display: block;\n        border-radius: 4px;\n        box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n      }\n      \n      /* Title Styling */\n      .report-title, .assignment-header h1, .rubric-header h1 { \n        color: #1e3a8a; \n        margin: 0 0 10px 0; \n        font-size: 24px;\n        font-weight: bold;\n        line-height: 1.2;\n      }\n      \n      /* Meta Information */\n      .meta, .weight-info, .course-code, .description, .rubric-meta { \n        color: #666; \n        font-size: 14px; \n        line-height: 1.5;\n        margin: 5px 0;\n      }\n      \n      .weight-info {\n        font-weight: 600;\n        color: #059669;\n      }\n      \n      .course-code {\n        font-weight: 600;\n        color: #7c3aed;\n      }\n      \n      .description {\n        font-style: italic;\n        margin: 10px 0;\n      }\n      \n      /* Table Styling */\n      .table-container { \n        overflow-x: auto; \n        margin: 20px 0;\n        border-radius: 8px;\n        box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n      }\n      \n      table { \n        width: 100%; \n        border-collapse: collapse; \n        margin-top: 20px;\n        background: white;\n      }\n      \n      th, td { \n        border: 1px solid #d1d5db; \n        padding: 12px 8px; \n        text-align: left; \n        vertical-align: top;\n      }\n      \n      th { \n        background-color: #f9fafb; \n        font-weight: 600;\n        color: #374151;\n      }\n      \n      tr:nth-child(even) { \n        background-color: #f9fafb; \n      }\n      \n      tr:hover { \n        background-color: #f3f4f6; \n      }\n      \n      /* Grade-specific styling */\n      .high-grade { \n        background-color: #dcfce7 !important; \n      }\n      \n      .medium-grade { \n        background-color: #fef3c7 !important; \n      }\n      \n      .low-grade { \n        background-color: #fecaca !important; \n      }\n      \n      .no-grade { \n        background-color: #f1f5f9 !important; \n      }\n      \n      /* Footer */\n      .footer { \n        text-align: center; \n        color: #666; \n        margin-top: 30px; \n        padding-top: 20px;\n        border-top: 1px solid #e5e7eb;\n        font-size: 12px;\n      }\n      \n      /* Responsive Design */\n      @media (max-width: 768px) {\n        .header-content {\n          flex-direction: column;\n          align-items: center;\n          text-align: center;\n        }\n        \n        .logo-section {\n          justify-content: center;\n          margin-left: 0;\n          margin-top: 15px;\n        }\n        \n        .school-logo, .report-logo, .assignment-logo, .rubric-logo {\n          max-height: 60px;\n          max-width: 150px;\n        }\n      }\n      \n      /* Print Optimization */\n      @media print { \n        body { \n          background: white !important; \n          margin: 15px;\n        }\n        \n        .header, .assignment-header, .rubric-header {\n          break-inside: avoid;\n        }\n        \n        .table-container { \n          overflow-x: visible; \n        }\n        \n        .school-logo, .report-logo, .assignment-logo, .rubric-logo { \n          max-height: 50px !important;\n          max-width: 120px !important;\n          break-inside: avoid;\n          print-color-adjust: exact;\n          -webkit-print-color-adjust: exact;\n        }\n        \n        .header-content {\n          break-inside: avoid;\n        }\n      }\n    </style>\n  `;\n};\n\n/**\r\n * Check if school logo is available\r\n * @returns {boolean} True if logo exists in session storage\r\n */\nexport const hasSchoolLogo = () => {\n  const logo = getSchoolLogo();\n  return !!logo;\n};","map":{"version":3,"names":["getSchoolLogo","sessionStorage","getItem","error","console","warn","getSchoolLogoInfo","logo","name","size","parseInt","exists","getLogoHtml","options","className","style","alt","maxHeight","maxWidth","inlineStyle","generateReportHeader","reportData","logoOptions","title","courseCode","courseName","section","rubricTitle","currentDate","Date","toLocaleDateString","currentTime","toLocaleTimeString","logoHtml","generateAssignmentHeader","assignmentData","assignmentNumber","weight","generateRubricHeader","rubricData","description","totalPoints","criteria","getReportStyles","hasSchoolLogo"],"sources":["C:/local clones/rubric-creation-app/src/components/logoIntegrationUtility.js"],"sourcesContent":["/**\r\n * School Logo Integration Utility\r\n * Helper functions to integrate school logos into exports with right-side positioning\r\n */\r\n\r\n/**\r\n * Get the saved school logo from session storage\r\n * @returns {string|null} Base64 encoded logo or null if not found\r\n */\r\nexport const getSchoolLogo = () => {\r\n    try {\r\n        return sessionStorage.getItem('schoolLogo');\r\n    } catch (error) {\r\n        console.warn('Error accessing school logo from session storage:', error);\r\n        return null;\r\n    }\r\n};\r\n\r\n/**\r\n * Get school logo metadata\r\n * @returns {object} Object containing logo name, size, and data\r\n */\r\nexport const getSchoolLogoInfo = () => {\r\n    try {\r\n        const logo = sessionStorage.getItem('schoolLogo');\r\n        const name = sessionStorage.getItem('schoolLogoName');\r\n        const size = sessionStorage.getItem('schoolLogoSize');\r\n\r\n        return {\r\n            logo,\r\n            name: name || 'Unknown',\r\n            size: parseInt(size) || 0,\r\n            exists: !!logo\r\n        };\r\n    } catch (error) {\r\n        console.warn('Error accessing school logo info:', error);\r\n        return {\r\n            logo: null,\r\n            name: 'Unknown',\r\n            size: 0,\r\n            exists: false\r\n        };\r\n    }\r\n};\r\n\r\n/**\r\n * Generate HTML for logo display in exports\r\n * @param {object} options - Styling options for the logo\r\n * @returns {string} HTML string for logo or empty string if no logo\r\n */\r\nexport const getLogoHtml = (options = {}) => {\r\n    const logo = getSchoolLogo();\r\n    if (!logo) return '';\r\n\r\n    const {\r\n        className = 'school-logo',\r\n        style = '',\r\n        alt = 'School Logo',\r\n        maxHeight = 80,\r\n        maxWidth = 200\r\n    } = options;\r\n\r\n    const inlineStyle = `max-height: ${maxHeight}px; max-width: ${maxWidth}px; object-fit: contain; ${style}`;\r\n\r\n    return `<img src=\"${logo}\" alt=\"${alt}\" class=\"${className}\" style=\"${inlineStyle}\" />`;\r\n};\r\n\r\n/**\r\n * Enhanced HTML header with logo positioned on the right for grade reports\r\n * @param {object} reportData - Report information\r\n * @param {object} logoOptions - Logo styling options\r\n * @returns {string} Complete HTML header with right-positioned logo\r\n */\r\nexport const generateReportHeader = (reportData, logoOptions = {}) => {\r\n    const {\r\n        title = 'Grade Report',\r\n        courseCode = '',\r\n        courseName = '',\r\n        section = '',\r\n        rubricTitle = 'Unnamed Rubric'\r\n    } = reportData;\r\n\r\n    const currentDate = new Date().toLocaleDateString('en-CA');\r\n    const currentTime = new Date().toLocaleTimeString('en-CA');\r\n\r\n    const logoHtml = getLogoHtml({\r\n        className: 'report-logo',\r\n        maxHeight: logoOptions.maxHeight || 80,\r\n        maxWidth: logoOptions.maxWidth || 200,\r\n        style: 'display: block;',\r\n        ...logoOptions\r\n    });\r\n\r\n    // Header with logo positioned on the right\r\n    return `\r\n    <div class=\"header\">\r\n      <div class=\"header-content\">\r\n        <div class=\"title-section\">\r\n          <h1 class=\"report-title\">${title}</h1>\r\n          <div class=\"meta\">\r\n            ${courseCode ? `<strong>Course:</strong> ${courseCode}${courseName ? ` - ${courseName}` : ''}<br>` : ''}\r\n            ${section ? `<strong>Section:</strong> ${section}<br>` : ''}\r\n            ${rubricTitle ? `<strong>Assessment:</strong> ${rubricTitle}<br>` : ''}\r\n            <strong>Generated:</strong> ${currentDate} at ${currentTime}\r\n          </div>\r\n        </div>\r\n        ${logoHtml ? `<div class=\"logo-section\">${logoHtml}</div>` : ''}\r\n      </div>\r\n    </div>\r\n  `;\r\n};\r\n\r\n/**\r\n * Generate header for assignment pages with right-positioned logo\r\n * @param {object} assignmentData - Assignment information\r\n * @param {object} logoOptions - Logo styling options\r\n * @returns {string} HTML header for assignment pages\r\n */\r\nexport const generateAssignmentHeader = (assignmentData, logoOptions = {}) => {\r\n    const {\r\n        title = 'Assignment',\r\n        assignmentNumber = '',\r\n        courseCode = '',\r\n        weight = ''\r\n    } = assignmentData;\r\n\r\n    const logoHtml = getLogoHtml({\r\n        className: 'assignment-logo',\r\n        maxHeight: logoOptions.maxHeight || 70,\r\n        maxWidth: logoOptions.maxWidth || 200,\r\n        style: 'display: block;',\r\n        ...logoOptions\r\n    });\r\n\r\n    return `\r\n    <div class=\"assignment-header\">\r\n      <div class=\"header-content\">\r\n        <div class=\"title-section\">\r\n          <h1>${assignmentNumber ? `Assignment ${assignmentNumber}: ` : ''}${title}</h1>\r\n          ${weight ? `<p class=\"weight-info\">Weight: ${weight}% of Final Grade</p>` : ''}\r\n          ${courseCode ? `<p class=\"course-code\">${courseCode}</p>` : ''}\r\n        </div>\r\n        ${logoHtml ? `<div class=\"logo-section\">${logoHtml}</div>` : ''}\r\n      </div>\r\n    </div>\r\n  `;\r\n};\r\n\r\n/**\r\n * Generate header for rubric exports with right-positioned logo\r\n * @param {object} rubricData - Rubric information\r\n * @param {object} logoOptions - Logo styling options\r\n * @returns {string} HTML header for rubric pages\r\n */\r\nexport const generateRubricHeader = (rubricData, logoOptions = {}) => {\r\n    const {\r\n        title = 'Assessment Rubric',\r\n        description = '',\r\n        totalPoints = '',\r\n        criteria = 0\r\n    } = rubricData;\r\n\r\n    const logoHtml = getLogoHtml({\r\n        className: 'rubric-logo',\r\n        maxHeight: logoOptions.maxHeight || 80,\r\n        maxWidth: logoOptions.maxWidth || 200,\r\n        style: 'display: block;',\r\n        ...logoOptions\r\n    });\r\n\r\n    return `\r\n    <div class=\"rubric-header\">\r\n      <div class=\"header-content\">\r\n        <div class=\"title-section\">\r\n          <h1>${title}</h1>\r\n          ${description ? `<p class=\"description\">${description}</p>` : ''}\r\n          <div class=\"rubric-meta\">\r\n            ${totalPoints ? `<strong>Total Points:</strong> ${totalPoints} | ` : ''}\r\n            <strong>Criteria:</strong> ${criteria}\r\n          </div>\r\n        </div>\r\n        ${logoHtml ? `<div class=\"logo-section\">${logoHtml}</div>` : ''}\r\n      </div>\r\n    </div>\r\n  `;\r\n};\r\n\r\n/**\r\n * Complete CSS styles for logo-enhanced reports with right-positioned logos\r\n * @returns {string} CSS styles including logo styling\r\n */\r\nexport const getReportStyles = () => {\r\n    return `\r\n    <style>\r\n      body { \r\n        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; \r\n        margin: 20px; \r\n        line-height: 1.6; \r\n        color: #333;\r\n        background: white;\r\n      }\r\n      \r\n      /* Header Layouts with Right-Positioned Logo */\r\n      .header, .assignment-header, .rubric-header { \r\n        margin-bottom: 30px; \r\n        padding: 20px 0;\r\n        border-bottom: 2px solid #e5e7eb;\r\n      }\r\n      \r\n      .header-content {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: flex-start;\r\n        gap: 20px;\r\n      }\r\n      \r\n      .title-section {\r\n        flex: 1;\r\n        min-width: 0; /* Allow text to wrap */\r\n      }\r\n      \r\n      .logo-section {\r\n        flex-shrink: 0;\r\n        display: flex;\r\n        align-items: flex-start;\r\n        justify-content: flex-end;\r\n        margin-left: 20px;\r\n      }\r\n      \r\n      /* Logo Styling */\r\n      .school-logo, .report-logo, .assignment-logo, .rubric-logo { \r\n        max-height: 80px; \r\n        max-width: 200px; \r\n        object-fit: contain; \r\n        display: block;\r\n        border-radius: 4px;\r\n        box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n      }\r\n      \r\n      /* Title Styling */\r\n      .report-title, .assignment-header h1, .rubric-header h1 { \r\n        color: #1e3a8a; \r\n        margin: 0 0 10px 0; \r\n        font-size: 24px;\r\n        font-weight: bold;\r\n        line-height: 1.2;\r\n      }\r\n      \r\n      /* Meta Information */\r\n      .meta, .weight-info, .course-code, .description, .rubric-meta { \r\n        color: #666; \r\n        font-size: 14px; \r\n        line-height: 1.5;\r\n        margin: 5px 0;\r\n      }\r\n      \r\n      .weight-info {\r\n        font-weight: 600;\r\n        color: #059669;\r\n      }\r\n      \r\n      .course-code {\r\n        font-weight: 600;\r\n        color: #7c3aed;\r\n      }\r\n      \r\n      .description {\r\n        font-style: italic;\r\n        margin: 10px 0;\r\n      }\r\n      \r\n      /* Table Styling */\r\n      .table-container { \r\n        overflow-x: auto; \r\n        margin: 20px 0;\r\n        border-radius: 8px;\r\n        box-shadow: 0 1px 3px rgba(0,0,0,0.1);\r\n      }\r\n      \r\n      table { \r\n        width: 100%; \r\n        border-collapse: collapse; \r\n        margin-top: 20px;\r\n        background: white;\r\n      }\r\n      \r\n      th, td { \r\n        border: 1px solid #d1d5db; \r\n        padding: 12px 8px; \r\n        text-align: left; \r\n        vertical-align: top;\r\n      }\r\n      \r\n      th { \r\n        background-color: #f9fafb; \r\n        font-weight: 600;\r\n        color: #374151;\r\n      }\r\n      \r\n      tr:nth-child(even) { \r\n        background-color: #f9fafb; \r\n      }\r\n      \r\n      tr:hover { \r\n        background-color: #f3f4f6; \r\n      }\r\n      \r\n      /* Grade-specific styling */\r\n      .high-grade { \r\n        background-color: #dcfce7 !important; \r\n      }\r\n      \r\n      .medium-grade { \r\n        background-color: #fef3c7 !important; \r\n      }\r\n      \r\n      .low-grade { \r\n        background-color: #fecaca !important; \r\n      }\r\n      \r\n      .no-grade { \r\n        background-color: #f1f5f9 !important; \r\n      }\r\n      \r\n      /* Footer */\r\n      .footer { \r\n        text-align: center; \r\n        color: #666; \r\n        margin-top: 30px; \r\n        padding-top: 20px;\r\n        border-top: 1px solid #e5e7eb;\r\n        font-size: 12px;\r\n      }\r\n      \r\n      /* Responsive Design */\r\n      @media (max-width: 768px) {\r\n        .header-content {\r\n          flex-direction: column;\r\n          align-items: center;\r\n          text-align: center;\r\n        }\r\n        \r\n        .logo-section {\r\n          justify-content: center;\r\n          margin-left: 0;\r\n          margin-top: 15px;\r\n        }\r\n        \r\n        .school-logo, .report-logo, .assignment-logo, .rubric-logo {\r\n          max-height: 60px;\r\n          max-width: 150px;\r\n        }\r\n      }\r\n      \r\n      /* Print Optimization */\r\n      @media print { \r\n        body { \r\n          background: white !important; \r\n          margin: 15px;\r\n        }\r\n        \r\n        .header, .assignment-header, .rubric-header {\r\n          break-inside: avoid;\r\n        }\r\n        \r\n        .table-container { \r\n          overflow-x: visible; \r\n        }\r\n        \r\n        .school-logo, .report-logo, .assignment-logo, .rubric-logo { \r\n          max-height: 50px !important;\r\n          max-width: 120px !important;\r\n          break-inside: avoid;\r\n          print-color-adjust: exact;\r\n          -webkit-print-color-adjust: exact;\r\n        }\r\n        \r\n        .header-content {\r\n          break-inside: avoid;\r\n        }\r\n      }\r\n    </style>\r\n  `;\r\n};\r\n\r\n/**\r\n * Check if school logo is available\r\n * @returns {boolean} True if logo exists in session storage\r\n */\r\nexport const hasSchoolLogo = () => {\r\n    const logo = getSchoolLogo();\r\n    return !!logo;\r\n};"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO,MAAMA,aAAa,GAAGA,CAAA,KAAM;EAC/B,IAAI;IACA,OAAOC,cAAc,CAACC,OAAO,CAAC,YAAY,CAAC;EAC/C,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACC,IAAI,CAAC,mDAAmD,EAAEF,KAAK,CAAC;IACxE,OAAO,IAAI;EACf;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMG,iBAAiB,GAAGA,CAAA,KAAM;EACnC,IAAI;IACA,MAAMC,IAAI,GAAGN,cAAc,CAACC,OAAO,CAAC,YAAY,CAAC;IACjD,MAAMM,IAAI,GAAGP,cAAc,CAACC,OAAO,CAAC,gBAAgB,CAAC;IACrD,MAAMO,IAAI,GAAGR,cAAc,CAACC,OAAO,CAAC,gBAAgB,CAAC;IAErD,OAAO;MACHK,IAAI;MACJC,IAAI,EAAEA,IAAI,IAAI,SAAS;MACvBC,IAAI,EAAEC,QAAQ,CAACD,IAAI,CAAC,IAAI,CAAC;MACzBE,MAAM,EAAE,CAAC,CAACJ;IACd,CAAC;EACL,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACZC,OAAO,CAACC,IAAI,CAAC,mCAAmC,EAAEF,KAAK,CAAC;IACxD,OAAO;MACHI,IAAI,EAAE,IAAI;MACVC,IAAI,EAAE,SAAS;MACfC,IAAI,EAAE,CAAC;MACPE,MAAM,EAAE;IACZ,CAAC;EACL;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,WAAW,GAAGA,CAACC,OAAO,GAAG,CAAC,CAAC,KAAK;EACzC,MAAMN,IAAI,GAAGP,aAAa,CAAC,CAAC;EAC5B,IAAI,CAACO,IAAI,EAAE,OAAO,EAAE;EAEpB,MAAM;IACFO,SAAS,GAAG,aAAa;IACzBC,KAAK,GAAG,EAAE;IACVC,GAAG,GAAG,aAAa;IACnBC,SAAS,GAAG,EAAE;IACdC,QAAQ,GAAG;EACf,CAAC,GAAGL,OAAO;EAEX,MAAMM,WAAW,GAAG,eAAeF,SAAS,kBAAkBC,QAAQ,4BAA4BH,KAAK,EAAE;EAEzG,OAAO,aAAaR,IAAI,UAAUS,GAAG,YAAYF,SAAS,YAAYK,WAAW,MAAM;AAC3F,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,oBAAoB,GAAGA,CAACC,UAAU,EAAEC,WAAW,GAAG,CAAC,CAAC,KAAK;EAClE,MAAM;IACFC,KAAK,GAAG,cAAc;IACtBC,UAAU,GAAG,EAAE;IACfC,UAAU,GAAG,EAAE;IACfC,OAAO,GAAG,EAAE;IACZC,WAAW,GAAG;EAClB,CAAC,GAAGN,UAAU;EAEd,MAAMO,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,OAAO,CAAC;EAC1D,MAAMC,WAAW,GAAG,IAAIF,IAAI,CAAC,CAAC,CAACG,kBAAkB,CAAC,OAAO,CAAC;EAE1D,MAAMC,QAAQ,GAAGrB,WAAW,CAAC;IACzBE,SAAS,EAAE,aAAa;IACxBG,SAAS,EAAEK,WAAW,CAACL,SAAS,IAAI,EAAE;IACtCC,QAAQ,EAAEI,WAAW,CAACJ,QAAQ,IAAI,GAAG;IACrCH,KAAK,EAAE,iBAAiB;IACxB,GAAGO;EACP,CAAC,CAAC;;EAEF;EACA,OAAO;AACX;AACA;AACA;AACA,qCAAqCC,KAAK;AAC1C;AACA,cAAcC,UAAU,GAAG,4BAA4BA,UAAU,GAAGC,UAAU,GAAG,MAAMA,UAAU,EAAE,GAAG,EAAE,MAAM,GAAG,EAAE;AACnH,cAAcC,OAAO,GAAG,6BAA6BA,OAAO,MAAM,GAAG,EAAE;AACvE,cAAcC,WAAW,GAAG,gCAAgCA,WAAW,MAAM,GAAG,EAAE;AAClF,0CAA0CC,WAAW,OAAOG,WAAW;AACvE;AACA;AACA,UAAUE,QAAQ,GAAG,6BAA6BA,QAAQ,QAAQ,GAAG,EAAE;AACvE;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,wBAAwB,GAAGA,CAACC,cAAc,EAAEb,WAAW,GAAG,CAAC,CAAC,KAAK;EAC1E,MAAM;IACFC,KAAK,GAAG,YAAY;IACpBa,gBAAgB,GAAG,EAAE;IACrBZ,UAAU,GAAG,EAAE;IACfa,MAAM,GAAG;EACb,CAAC,GAAGF,cAAc;EAElB,MAAMF,QAAQ,GAAGrB,WAAW,CAAC;IACzBE,SAAS,EAAE,iBAAiB;IAC5BG,SAAS,EAAEK,WAAW,CAACL,SAAS,IAAI,EAAE;IACtCC,QAAQ,EAAEI,WAAW,CAACJ,QAAQ,IAAI,GAAG;IACrCH,KAAK,EAAE,iBAAiB;IACxB,GAAGO;EACP,CAAC,CAAC;EAEF,OAAO;AACX;AACA;AACA;AACA,gBAAgBc,gBAAgB,GAAG,cAAcA,gBAAgB,IAAI,GAAG,EAAE,GAAGb,KAAK;AAClF,YAAYc,MAAM,GAAG,kCAAkCA,MAAM,sBAAsB,GAAG,EAAE;AACxF,YAAYb,UAAU,GAAG,0BAA0BA,UAAU,MAAM,GAAG,EAAE;AACxE;AACA,UAAUS,QAAQ,GAAG,6BAA6BA,QAAQ,QAAQ,GAAG,EAAE;AACvE;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMK,oBAAoB,GAAGA,CAACC,UAAU,EAAEjB,WAAW,GAAG,CAAC,CAAC,KAAK;EAClE,MAAM;IACFC,KAAK,GAAG,mBAAmB;IAC3BiB,WAAW,GAAG,EAAE;IAChBC,WAAW,GAAG,EAAE;IAChBC,QAAQ,GAAG;EACf,CAAC,GAAGH,UAAU;EAEd,MAAMN,QAAQ,GAAGrB,WAAW,CAAC;IACzBE,SAAS,EAAE,aAAa;IACxBG,SAAS,EAAEK,WAAW,CAACL,SAAS,IAAI,EAAE;IACtCC,QAAQ,EAAEI,WAAW,CAACJ,QAAQ,IAAI,GAAG;IACrCH,KAAK,EAAE,iBAAiB;IACxB,GAAGO;EACP,CAAC,CAAC;EAEF,OAAO;AACX;AACA;AACA;AACA,gBAAgBC,KAAK;AACrB,YAAYiB,WAAW,GAAG,0BAA0BA,WAAW,MAAM,GAAG,EAAE;AAC1E;AACA,cAAcC,WAAW,GAAG,kCAAkCA,WAAW,KAAK,GAAG,EAAE;AACnF,yCAAyCC,QAAQ;AACjD;AACA;AACA,UAAUT,QAAQ,GAAG,6BAA6BA,QAAQ,QAAQ,GAAG,EAAE;AACvE;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMU,eAAe,GAAGA,CAAA,KAAM;EACjaAAa,GAAGA,CAAA,KAAM;EAC/B,MAAMrC,IAAI,GAAGP,aAAa,CAAC,CAAC;EAC5B,OAAO,CAAC,CAACO,IAAI;AACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}