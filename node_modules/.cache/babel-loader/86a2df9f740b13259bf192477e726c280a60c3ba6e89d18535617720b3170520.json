{"ast":null,"code":"var _jsxFileName = \"C:\\\\local clones\\\\rubric-creation-app\\\\src\\\\components\\\\SharedContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// Complete SharedContext.js - Fully Consolidated with ALL Original Features + Late Policy Enhancement\n// This version preserves EVERY function and feature from the original while adding late policy support\n\nimport React, { createContext, useContext, useState, useCallback, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssessmentContext = /*#__PURE__*/createContext();\nexport const useAssessment = () => {\n  _s();\n  const context = useContext(AssessmentContext);\n  if (!context) {\n    throw new Error('useAssessment must be used within AssessmentProvider');\n  }\n  return context;\n};\n\n// Default late policies\n_s(useAssessment, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst DEFAULT_LATE_POLICIES = {\n  institutional: {\n    id: 'institutional',\n    name: 'Institutional Standard',\n    description: 'Standard institutional late policy',\n    levels: {\n      none: {\n        name: 'On Time',\n        multiplier: 1.0,\n        description: 'Assignment submitted on time',\n        color: '#16a34a',\n        timeframe: 'On or before due date'\n      },\n      within24: {\n        name: 'Within 24 Hours',\n        multiplier: 0.8,\n        description: '20% penalty for submissions within 24 hours of due date',\n        color: '#ea580c',\n        timeframe: 'Up to 24 hours late'\n      },\n      within48: {\n        name: 'Within 48 Hours',\n        multiplier: 0.6,\n        description: '40% penalty for submissions within 48 hours of due date',\n        color: '#dc2626',\n        timeframe: 'Up to 48 hours late'\n      },\n      beyond48: {\n        name: 'Beyond 48 Hours',\n        multiplier: 0.0,\n        description: 'No credit for submissions beyond 48 hours',\n        color: '#991b1b',\n        timeframe: 'More than 48 hours late'\n      }\n    },\n    isCustom: false,\n    isDefault: true\n  },\n  graceful: {\n    id: 'graceful',\n    name: 'Graceful Policy',\n    description: 'Lenient late policy with minimal penalties',\n    levels: {\n      none: {\n        name: 'On Time',\n        multiplier: 1.0,\n        description: 'Assignment submitted on time',\n        color: '#16a34a',\n        timeframe: 'On or before due date'\n      },\n      within72: {\n        name: 'Within 3 Days',\n        multiplier: 0.9,\n        description: '10% penalty for submissions within 3 days',\n        color: '#f59e0b',\n        timeframe: 'Up to 3 days late'\n      },\n      within7days: {\n        name: 'Within 1 Week',\n        multiplier: 0.75,\n        description: '25% penalty for submissions within 1 week',\n        color: '#ea580c',\n        timeframe: 'Up to 1 week late'\n      },\n      beyond7days: {\n        name: 'Beyond 1 Week',\n        multiplier: 0.5,\n        description: '50% penalty for submissions beyond 1 week',\n        color: '#dc2626',\n        timeframe: 'More than 1 week late'\n      }\n    },\n    isCustom: false,\n    isTemplate: true\n  }\n};\nexport const AssessmentProvider = ({\n  children\n}) => {\n  _s2();\n  // ORIGINAL: Shared rubric state\n  const [sharedRubric, setSharedRubric] = useState(null);\n  const [sharedCourseDetails, setSharedCourseDetails] = useState(null);\n  const [activeTab, setActiveTab] = useState('assignment-prompt-generator');\n\n  // ORIGINAL: AI Prompt Generator state (for rubrics)\n  const [aiPromptFormData, setAIPromptFormData] = useState(null);\n\n  // ORIGINAL: Assignment Prompt Generator state\n  const [assignmentPromptFormData, setAssignmentPromptFormData] = useState(null);\n\n  // ORIGINAL: Class list and student management\n  const [classList, setClassList] = useState(null);\n  const [currentStudent, setCurrentStudent] = useState(null);\n\n  // ORIGINAL: Separate storage for draft and final grades\n  const [drafts, setDrafts] = useState({});\n  const [finalGrades, setFinalGrades] = useState({});\n\n  // NEW: Late Policy State Management\n  const [currentLatePolicy, setCurrentLatePolicy] = useState(null);\n  const [customLatePolicies, setCustomLatePolicies] = useState([]);\n\n  // ORIGINAL: Batch grading session state\n  const [gradingSession, setGradingSession] = useState({\n    active: false,\n    startTime: null,\n    gradedStudents: [],\n    totalStudents: 0,\n    currentStudent: null,\n    currentStudentIndex: 0\n  });\n\n  // ENHANCED: Form data states with late policy support\n  const [gradingFormData, setGradingFormData] = useState({\n    student: {\n      name: '',\n      id: '',\n      email: ''\n    },\n    course: {\n      code: '',\n      name: '',\n      instructor: '',\n      term: '',\n      section: ''\n    },\n    assignment: {\n      title: '',\n      dueDate: '',\n      totalPoints: 0\n    },\n    criteriaScores: {},\n    overallFeedback: '',\n    strengths: [],\n    improvements: [],\n    totalScore: 0,\n    percentage: 0,\n    letterGrade: '',\n    attachments: [],\n    videoLinks: [],\n    // NEW: Late policy data\n    latePolicy: {\n      level: 'none',\n      penaltyApplied: false,\n      policyId: null,\n      originalScore: null,\n      adjustedScore: null,\n      multiplier: 1.0\n    }\n  });\n\n  // Load data from localStorage on initialization\n  useEffect(() => {\n    // Load drafts\n    const savedDrafts = localStorage.getItem('gradingDrafts');\n    if (savedDrafts) {\n      try {\n        setDrafts(JSON.parse(savedDrafts));\n      } catch (error) {\n        console.error('Error loading drafts:', error);\n      }\n    }\n\n    // Load final grades\n    const savedFinalGrades = localStorage.getItem('finalGrades');\n    if (savedFinalGrades) {\n      try {\n        setFinalGrades(JSON.parse(savedFinalGrades));\n      } catch (error) {\n        console.error('Error loading final grades:', error);\n      }\n    }\n\n    // Load custom late policies\n    const savedPolicies = localStorage.getItem('customLatePolicies');\n    if (savedPolicies) {\n      try {\n        setCustomLatePolicies(JSON.parse(savedPolicies));\n      } catch (error) {\n        console.error('Error loading custom policies:', error);\n      }\n    }\n\n    // Load current late policy\n    const savedCurrentPolicy = localStorage.getItem('currentLatePolicy');\n    if (savedCurrentPolicy) {\n      try {\n        setCurrentLatePolicy(JSON.parse(savedCurrentPolicy));\n      } catch (error) {\n        console.error('Error loading current policy:', error);\n      }\n    }\n  }, []);\n\n  // ORIGINAL: Update functions for form data\n  const updateStudentInfo = useCallback((field, value) => {\n    setGradingFormData(prev => ({\n      ...prev,\n      student: {\n        ...prev.student,\n        [field]: value\n      }\n    }));\n  }, []);\n  const updateCourseInfo = useCallback((field, value) => {\n    setGradingFormData(prev => ({\n      ...prev,\n      course: {\n        ...prev.course,\n        [field]: value\n      }\n    }));\n  }, []);\n  const updateAssignmentInfo = useCallback((field, value) => {\n    setGradingFormData(prev => ({\n      ...prev,\n      assignment: {\n        ...prev.assignment,\n        [field]: value\n      }\n    }));\n  }, []);\n\n  // ORIGINAL: Initialize form data functions for different generators\n  const initializeAssignmentPromptFormData = useCallback(data => {\n    setAssignmentPromptFormData(data);\n    console.log('📝 Assignment prompt form data initialized:', data);\n  }, []);\n  const initializeAIPromptFormData = useCallback(data => {\n    setAIPromptFormData(data);\n    console.log('🤖 AI prompt form data initialized:', data);\n  }, []);\n\n  // ORIGINAL: Reset/clear functions for generators\n  const clearAssignmentPromptFormData = useCallback(() => {\n    setAssignmentPromptFormData(null);\n    console.log('🗑️ Assignment prompt form data cleared');\n  }, []);\n  const clearAIPromptFormData = useCallback(() => {\n    setAIPromptFormData(null);\n    console.log('🗑️ AI prompt form data cleared');\n  }, []);\n\n  // ORIGINAL: Additional utility functions that components may expect\n  const updateSharedRubric = useCallback(rubric => {\n    var _rubric$assignmentInf;\n    setSharedRubric(rubric);\n    console.log('📋 Shared rubric updated:', rubric === null || rubric === void 0 ? void 0 : (_rubric$assignmentInf = rubric.assignmentInfo) === null || _rubric$assignmentInf === void 0 ? void 0 : _rubric$assignmentInf.title);\n  }, []);\n  const clearSharedRubric = useCallback(() => {\n    setSharedRubric(null);\n    console.log('🗑️ Shared rubric cleared');\n  }, []);\n  const updateSharedCourseDetails = useCallback(details => {\n    setSharedCourseDetails(details);\n    console.log('🏫 Shared course details updated:', details);\n  }, []);\n  const clearSharedCourseDetails = useCallback(() => {\n    setSharedCourseDetails(null);\n    console.log('🗑️ Shared course details cleared');\n  }, []);\n\n  // ORIGINAL: Clear form data\n  const clearGradingFormData = useCallback(() => {\n    setGradingFormData({\n      student: {\n        name: '',\n        id: '',\n        email: ''\n      },\n      course: {\n        code: '',\n        name: '',\n        instructor: '',\n        term: '',\n        section: ''\n      },\n      assignment: {\n        title: '',\n        dueDate: '',\n        totalPoints: 0\n      },\n      criteriaScores: {},\n      overallFeedback: '',\n      strengths: [],\n      improvements: [],\n      totalScore: 0,\n      percentage: 0,\n      letterGrade: '',\n      attachments: [],\n      videoLinks: [],\n      latePolicy: {\n        level: 'none',\n        penaltyApplied: false,\n        policyId: null,\n        originalScore: null,\n        adjustedScore: null,\n        multiplier: 1.0\n      }\n    });\n  }, []);\n\n  // NEW: Late Policy Management Functions\n  const saveCustomLatePolicy = useCallback(policy => {\n    const newPolicy = {\n      ...policy,\n      id: policy.id === 'new' ? `custom_${Date.now()}` : policy.id,\n      isCustom: true,\n      createdAt: policy.createdAt || new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    };\n    setCustomLatePolicies(prev => {\n      const filtered = prev.filter(p => p.id !== newPolicy.id);\n      const updated = [...filtered, newPolicy];\n      localStorage.setItem('customLatePolicies', JSON.stringify(updated));\n      return updated;\n    });\n    return newPolicy;\n  }, []);\n  const updateCustomLatePolicy = useCallback((policyId, updates) => {\n    setCustomLatePolicies(prev => {\n      const updated = prev.map(policy => policy.id === policyId ? {\n        ...policy,\n        ...updates,\n        updatedAt: new Date().toISOString()\n      } : policy);\n      localStorage.setItem('customLatePolicies', JSON.stringify(updated));\n      return updated;\n    });\n  }, []);\n  const deleteCustomLatePolicy = useCallback(policyId => {\n    setCustomLatePolicies(prev => {\n      const filtered = prev.filter(policy => policy.id !== policyId);\n      localStorage.setItem('customLatePolicies', JSON.stringify(filtered));\n      return filtered;\n    });\n\n    // Reset current policy if it was deleted\n    if ((currentLatePolicy === null || currentLatePolicy === void 0 ? void 0 : currentLatePolicy.id) === policyId) {\n      setCurrentLatePolicy(null);\n      localStorage.removeItem('currentLatePolicy');\n    }\n  }, [currentLatePolicy]);\n\n  // NEW: Late Policy Application Functions\n  const applyLatePolicy = useCallback((originalScore, level, policyId = null) => {\n    const policy = policyId ? [...Object.values(DEFAULT_LATE_POLICIES), ...customLatePolicies].find(p => p.id === policyId) : currentLatePolicy || DEFAULT_LATE_POLICIES.institutional;\n    if (!policy || !policy.levels[level]) {\n      return {\n        adjustedScore: originalScore,\n        multiplier: 1.0,\n        penaltyApplied: false\n      };\n    }\n    const multiplier = policy.levels[level].multiplier;\n    const adjustedScore = Math.round(originalScore * multiplier * 100) / 100;\n    return {\n      adjustedScore,\n      multiplier,\n      penaltyApplied: level !== 'none',\n      policyName: policy.name,\n      levelName: policy.levels[level].name\n    };\n  }, [currentLatePolicy, customLatePolicies]);\n  const calculateScoreWithLatePolicy = useCallback((originalScore, lateLevel = 'none') => {\n    return applyLatePolicy(originalScore, lateLevel);\n  }, [applyLatePolicy]);\n\n  // ORIGINAL: Draft and final grade management with late policy enhancement\n  const saveDraft = useCallback((studentId, gradeData = null) => {\n    const dataToSave = gradeData || gradingFormData;\n    const draftData = {\n      ...dataToSave,\n      studentId,\n      type: 'draft',\n      savedAt: new Date().toISOString(),\n      // Include late policy data\n      latePolicy: dataToSave.latePolicy || {\n        level: 'none',\n        penaltyApplied: false,\n        policyId: (currentLatePolicy === null || currentLatePolicy === void 0 ? void 0 : currentLatePolicy.id) || null,\n        originalScore: dataToSave.totalScore,\n        adjustedScore: dataToSave.totalScore,\n        multiplier: 1.0\n      }\n    };\n    setDrafts(prev => {\n      const updated = {\n        ...prev,\n        [studentId]: draftData\n      };\n      localStorage.setItem('gradingDrafts', JSON.stringify(updated));\n      return updated;\n    });\n    return draftData;\n  }, [gradingFormData, currentLatePolicy]);\n  const loadDraft = useCallback(studentId => {\n    const draft = drafts[studentId];\n    if (draft) {\n      setGradingFormData(draft);\n      return draft;\n    }\n    return null;\n  }, [drafts]);\n  const saveFinalGrade = useCallback((studentId, gradeData = null) => {\n    const dataToSave = gradeData || gradingFormData;\n    const finalData = {\n      ...dataToSave,\n      studentId,\n      type: 'final',\n      finalizedAt: new Date().toISOString(),\n      // Include late policy data in final grade\n      latePolicy: dataToSave.latePolicy || {\n        level: 'none',\n        penaltyApplied: false,\n        policyId: (currentLatePolicy === null || currentLatePolicy === void 0 ? void 0 : currentLatePolicy.id) || null,\n        originalScore: dataToSave.totalScore,\n        adjustedScore: dataToSave.totalScore,\n        multiplier: 1.0\n      }\n    };\n    setFinalGrades(prev => {\n      const updated = {\n        ...prev,\n        [studentId]: finalData\n      };\n      localStorage.setItem('finalGrades', JSON.stringify(updated));\n      return updated;\n    });\n\n    // Remove from drafts when finalized\n    setDrafts(prev => {\n      const remainingDrafts = {\n        ...prev\n      };\n      delete remainingDrafts[studentId];\n      localStorage.setItem('gradingDrafts', JSON.stringify(remainingDrafts));\n      return remainingDrafts;\n    });\n    return finalData;\n  }, [gradingFormData, currentLatePolicy]);\n  const loadFinalGrade = useCallback(studentId => {\n    return finalGrades[studentId] || null;\n  }, [finalGrades]);\n  const hasDraft = useCallback(studentId => {\n    return drafts[studentId] || null;\n  }, [drafts]);\n  const getGradeStatus = useCallback(studentId => {\n    if (finalGrades[studentId]) return 'final';\n    if (drafts[studentId]) return 'draft';\n    return 'not_started';\n  }, [finalGrades, drafts]);\n  const finalizeGrade = useCallback(studentId => {\n    const draft = drafts[studentId];\n    if (draft) {\n      return saveFinalGrade(studentId, draft);\n    }\n    return null;\n  }, [drafts, saveFinalGrade]);\n  const unlockGrade = useCallback(studentId => {\n    const finalGrade = finalGrades[studentId];\n    if (finalGrade) {\n      // Convert final grade back to draft\n      setDrafts(prev => ({\n        ...prev,\n        [studentId]: {\n          ...finalGrade,\n          type: 'draft',\n          unlockedAt: new Date().toISOString()\n        }\n      }));\n\n      // Remove from final grades\n      setFinalGrades(prev => {\n        const newFinalGrades = {\n          ...prev\n        };\n        delete newFinalGrades[studentId];\n        return newFinalGrades;\n      });\n\n      // Update localStorage\n      const allDrafts = {\n        ...drafts,\n        [studentId]: {\n          ...finalGrade,\n          type: 'draft'\n        }\n      };\n      localStorage.setItem('gradingDrafts', JSON.stringify(allDrafts));\n      const remainingFinalGrades = {\n        ...finalGrades\n      };\n      delete remainingFinalGrades[studentId];\n      localStorage.setItem('finalGrades', JSON.stringify(remainingFinalGrades));\n      return true;\n    }\n    return false;\n  }, [finalGrades, drafts]);\n\n  // ORIGINAL: Navigation helpers for grading sessions\n  const nextStudentInSession = useCallback((saveType = 'draft') => {\n    if (!(gradingSession !== null && gradingSession !== void 0 && gradingSession.active) || !classList) return false;\n    const currentIndex = gradingSession.currentStudentIndex;\n    const nextIndex = currentIndex + 1;\n    if (nextIndex < classList.students.length) {\n      var _classList$students$c;\n      const currentStudentId = (_classList$students$c = classList.students[currentIndex]) === null || _classList$students$c === void 0 ? void 0 : _classList$students$c.id;\n      const nextStudent = classList.students[nextIndex];\n\n      // Save current work\n      if (currentStudentId) {\n        if (saveType === 'final') {\n          saveFinalGrade(currentStudentId);\n        } else {\n          saveDraft(currentStudentId);\n        }\n      }\n\n      // Update session state\n      setGradingSession(prev => ({\n        ...prev,\n        currentStudentIndex: nextIndex,\n        currentStudent: nextStudent\n      }));\n      setCurrentStudent(nextStudent);\n\n      // Load next student's data\n      const existingData = hasDraft(nextStudent.id) || loadFinalGrade(nextStudent.id);\n      if (existingData) {\n        setGradingFormData(existingData);\n      } else {\n        clearGradingFormData();\n        updateStudentInfo('name', nextStudent.name || '');\n        updateStudentInfo('id', nextStudent.id || '');\n        updateStudentInfo('email', nextStudent.email || '');\n      }\n      return true;\n    }\n    return false;\n  }, [gradingSession, classList, saveFinalGrade, saveDraft, hasDraft, loadFinalGrade, clearGradingFormData, updateStudentInfo]);\n  const previousStudentInSession = useCallback((saveType = 'draft') => {\n    if (!(gradingSession !== null && gradingSession !== void 0 && gradingSession.active) || !classList) return false;\n    const currentIndex = gradingSession.currentStudentIndex;\n    const previousIndex = currentIndex - 1;\n    if (previousIndex >= 0) {\n      var _classList$students$c2;\n      const currentStudentId = (_classList$students$c2 = classList.students[currentIndex]) === null || _classList$students$c2 === void 0 ? void 0 : _classList$students$c2.id;\n      const previousStudent = classList.students[previousIndex];\n\n      // Save current work\n      if (currentStudentId) {\n        if (saveType === 'final') {\n          saveFinalGrade(currentStudentId);\n        } else {\n          saveDraft(currentStudentId);\n        }\n      }\n\n      // Update session state\n      setGradingSession(prev => ({\n        ...prev,\n        currentStudentIndex: previousIndex,\n        currentStudent: previousStudent\n      }));\n      setCurrentStudent(previousStudent);\n\n      // Load previous student's data\n      const existingData = hasDraft(previousStudent.id) || loadFinalGrade(previousStudent.id);\n      if (existingData) {\n        setGradingFormData(existingData);\n      } else {\n        clearGradingFormData();\n        updateStudentInfo('name', previousStudent.name || '');\n        updateStudentInfo('id', previousStudent.id || '');\n        updateStudentInfo('email', previousStudent.email || '');\n      }\n      return true;\n    }\n    return false;\n  }, [gradingSession, classList, saveFinalGrade, saveDraft, hasDraft, loadFinalGrade, clearGradingFormData, updateStudentInfo]);\n\n  // ORIGINAL: Grading session management\n  const initializeGradingSession = useCallback(classData => {\n    if (!classData || !classData.students || classData.students.length === 0) {\n      console.error('Cannot initialize grading session: No valid class data');\n      return false;\n    }\n    const firstStudent = classData.students[0];\n    setGradingSession({\n      active: true,\n      startTime: new Date().toISOString(),\n      gradedStudents: [],\n      totalStudents: classData.students.length,\n      currentStudent: firstStudent,\n      currentStudentIndex: 0\n    });\n    setCurrentStudent(firstStudent);\n\n    // Load existing data or initialize new form\n    const existingData = hasDraft(firstStudent.id) || loadFinalGrade(firstStudent.id);\n    if (existingData) {\n      setGradingFormData(existingData);\n    } else {\n      clearGradingFormData();\n      updateStudentInfo('name', firstStudent.name || '');\n      updateStudentInfo('id', firstStudent.id || '');\n      updateStudentInfo('email', firstStudent.email || '');\n    }\n    return true;\n  }, [hasDraft, loadFinalGrade, clearGradingFormData, updateStudentInfo]);\n  const updateGradingSession = useCallback(updates => {\n    setGradingSession(prev => ({\n      ...prev,\n      ...updates\n    }));\n  }, []);\n\n  // ORIGINAL: Setters for form data updates\n  const setGradingData = useCallback(data => {\n    if (typeof data === 'function') {\n      setGradingFormData(prev => data(prev));\n    } else {\n      setGradingFormData(data);\n    }\n  }, []);\n\n  // Context value with all functions and state\n  const contextValue = {\n    // ORIGINAL: Core states\n    sharedRubric,\n    setSharedRubric,\n    sharedCourseDetails,\n    setSharedCourseDetails,\n    activeTab,\n    setActiveTab,\n    aiPromptFormData,\n    setAIPromptFormData,\n    assignmentPromptFormData,\n    setAssignmentPromptFormData,\n    classList,\n    setClassList,\n    currentStudent,\n    setCurrentStudent,\n    // ORIGINAL: Form data and management\n    gradingData: gradingFormData,\n    setGradingData,\n    updateStudentInfo,\n    updateCourseInfo,\n    updateAssignmentInfo,\n    clearGradingFormData,\n    // ORIGINAL: Generator initialization and management functions\n    initializeAssignmentPromptFormData,\n    initializeAIPromptFormData,\n    clearAssignmentPromptFormData,\n    clearAIPromptFormData,\n    // ORIGINAL: Additional utility functions\n    updateSharedRubric,\n    clearSharedRubric,\n    updateSharedCourseDetails,\n    clearSharedCourseDetails,\n    // ORIGINAL: Draft and final grade management\n    drafts,\n    finalGrades,\n    saveDraft,\n    loadDraft,\n    saveFinalGrade,\n    loadFinalGrade,\n    hasDraft,\n    getGradeStatus,\n    finalizeGrade,\n    unlockGrade,\n    // ORIGINAL: Grading session management\n    gradingSession,\n    setGradingSession,\n    nextStudentInSession,\n    previousStudentInSession,\n    updateGradingSession,\n    initializeGradingSession,\n    // NEW: Late Policy Management\n    currentLatePolicy,\n    setCurrentLatePolicy,\n    customLatePolicies,\n    setCustomLatePolicies,\n    saveCustomLatePolicy,\n    updateCustomLatePolicy,\n    deleteCustomLatePolicy,\n    applyLatePolicy,\n    calculateScoreWithLatePolicy,\n    DEFAULT_LATE_POLICIES\n  };\n  return /*#__PURE__*/_jsxDEV(AssessmentContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 698,\n    columnNumber: 9\n  }, this);\n};\n_s2(AssessmentProvider, \"uiZQEGqIcxx1gMS7aeMhRjgCB8Y=\");\n_c = AssessmentProvider;\nvar _c;\n$RefreshReg$(_c, \"AssessmentProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","useEffect","jsxDEV","_jsxDEV","AssessmentContext","useAssessment","_s","context","Error","DEFAULT_LATE_POLICIES","institutional","id","name","description","levels","none","multiplier","color","timeframe","within24","within48","beyond48","isCustom","isDefault","graceful","within72","within7days","beyond7days","isTemplate","AssessmentProvider","children","_s2","sharedRubric","setSharedRubric","sharedCourseDetails","setSharedCourseDetails","activeTab","setActiveTab","aiPromptFormData","setAIPromptFormData","assignmentPromptFormData","setAssignmentPromptFormData","classList","setClassList","currentStudent","setCurrentStudent","drafts","setDrafts","finalGrades","setFinalGrades","currentLatePolicy","setCurrentLatePolicy","customLatePolicies","setCustomLatePolicies","gradingSession","setGradingSession","active","startTime","gradedStudents","totalStudents","currentStudentIndex","gradingFormData","setGradingFormData","student","email","course","code","instructor","term","section","assignment","title","dueDate","totalPoints","criteriaScores","overallFeedback","strengths","improvements","totalScore","percentage","letterGrade","attachments","videoLinks","latePolicy","level","penaltyApplied","policyId","originalScore","adjustedScore","savedDrafts","localStorage","getItem","JSON","parse","error","console","savedFinalGrades","savedPolicies","savedCurrentPolicy","updateStudentInfo","field","value","prev","updateCourseInfo","updateAssignmentInfo","initializeAssignmentPromptFormData","data","log","initializeAIPromptFormData","clearAssignmentPromptFormData","clearAIPromptFormData","updateSharedRubric","rubric","_rubric$assignmentInf","assignmentInfo","clearSharedRubric","updateSharedCourseDetails","details","clearSharedCourseDetails","clearGradingFormData","saveCustomLatePolicy","policy","newPolicy","Date","now","createdAt","toISOString","updatedAt","filtered","filter","p","updated","setItem","stringify","updateCustomLatePolicy","updates","map","deleteCustomLatePolicy","removeItem","applyLatePolicy","Object","values","find","Math","round","policyName","levelName","calculateScoreWithLatePolicy","lateLevel","saveDraft","studentId","gradeData","dataToSave","draftData","type","savedAt","loadDraft","draft","saveFinalGrade","finalData","finalizedAt","remainingDrafts","loadFinalGrade","hasDraft","getGradeStatus","finalizeGrade","unlockGrade","finalGrade","unlockedAt","newFinalGrades","allDrafts","remainingFinalGrades","nextStudentInSession","saveType","currentIndex","nextIndex","students","length","_classList$students$c","currentStudentId","nextStudent","existingData","previousStudentInSession","previousIndex","_classList$students$c2","previousStudent","initializeGradingSession","classData","firstStudent","updateGradingSession","setGradingData","contextValue","gradingData","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/local clones/rubric-creation-app/src/components/SharedContext.js"],"sourcesContent":["// Complete SharedContext.js - Fully Consolidated with ALL Original Features + Late Policy Enhancement\r\n// This version preserves EVERY function and feature from the original while adding late policy support\r\n\r\nimport React, { createContext, useContext, useState, useCallback, useEffect } from 'react';\r\n\r\nconst AssessmentContext = createContext();\r\n\r\nexport const useAssessment = () => {\r\n    const context = useContext(AssessmentContext);\r\n    if (!context) {\r\n        throw new Error('useAssessment must be used within AssessmentProvider');\r\n    }\r\n    return context;\r\n};\r\n\r\n// Default late policies\r\nconst DEFAULT_LATE_POLICIES = {\r\n    institutional: {\r\n        id: 'institutional',\r\n        name: 'Institutional Standard',\r\n        description: 'Standard institutional late policy',\r\n        levels: {\r\n            none: {\r\n                name: 'On Time',\r\n                multiplier: 1.0,\r\n                description: 'Assignment submitted on time',\r\n                color: '#16a34a',\r\n                timeframe: 'On or before due date'\r\n            },\r\n            within24: {\r\n                name: 'Within 24 Hours',\r\n                multiplier: 0.8,\r\n                description: '20% penalty for submissions within 24 hours of due date',\r\n                color: '#ea580c',\r\n                timeframe: 'Up to 24 hours late'\r\n            },\r\n            within48: {\r\n                name: 'Within 48 Hours',\r\n                multiplier: 0.6,\r\n                description: '40% penalty for submissions within 48 hours of due date',\r\n                color: '#dc2626',\r\n                timeframe: 'Up to 48 hours late'\r\n            },\r\n            beyond48: {\r\n                name: 'Beyond 48 Hours',\r\n                multiplier: 0.0,\r\n                description: 'No credit for submissions beyond 48 hours',\r\n                color: '#991b1b',\r\n                timeframe: 'More than 48 hours late'\r\n            }\r\n        },\r\n        isCustom: false,\r\n        isDefault: true\r\n    },\r\n    graceful: {\r\n        id: 'graceful',\r\n        name: 'Graceful Policy',\r\n        description: 'Lenient late policy with minimal penalties',\r\n        levels: {\r\n            none: {\r\n                name: 'On Time',\r\n                multiplier: 1.0,\r\n                description: 'Assignment submitted on time',\r\n                color: '#16a34a',\r\n                timeframe: 'On or before due date'\r\n            },\r\n            within72: {\r\n                name: 'Within 3 Days',\r\n                multiplier: 0.9,\r\n                description: '10% penalty for submissions within 3 days',\r\n                color: '#f59e0b',\r\n                timeframe: 'Up to 3 days late'\r\n            },\r\n            within7days: {\r\n                name: 'Within 1 Week',\r\n                multiplier: 0.75,\r\n                description: '25% penalty for submissions within 1 week',\r\n                color: '#ea580c',\r\n                timeframe: 'Up to 1 week late'\r\n            },\r\n            beyond7days: {\r\n                name: 'Beyond 1 Week',\r\n                multiplier: 0.5,\r\n                description: '50% penalty for submissions beyond 1 week',\r\n                color: '#dc2626',\r\n                timeframe: 'More than 1 week late'\r\n            }\r\n        },\r\n        isCustom: false,\r\n        isTemplate: true\r\n    }\r\n};\r\n\r\nexport const AssessmentProvider = ({ children }) => {\r\n    // ORIGINAL: Shared rubric state\r\n    const [sharedRubric, setSharedRubric] = useState(null);\r\n    const [sharedCourseDetails, setSharedCourseDetails] = useState(null);\r\n    const [activeTab, setActiveTab] = useState('assignment-prompt-generator');\r\n\r\n    // ORIGINAL: AI Prompt Generator state (for rubrics)\r\n    const [aiPromptFormData, setAIPromptFormData] = useState(null);\r\n\r\n    // ORIGINAL: Assignment Prompt Generator state\r\n    const [assignmentPromptFormData, setAssignmentPromptFormData] = useState(null);\r\n\r\n    // ORIGINAL: Class list and student management\r\n    const [classList, setClassList] = useState(null);\r\n    const [currentStudent, setCurrentStudent] = useState(null);\r\n\r\n    // ORIGINAL: Separate storage for draft and final grades\r\n    const [drafts, setDrafts] = useState({});\r\n    const [finalGrades, setFinalGrades] = useState({});\r\n\r\n    // NEW: Late Policy State Management\r\n    const [currentLatePolicy, setCurrentLatePolicy] = useState(null);\r\n    const [customLatePolicies, setCustomLatePolicies] = useState([]);\r\n\r\n    // ORIGINAL: Batch grading session state\r\n    const [gradingSession, setGradingSession] = useState({\r\n        active: false,\r\n        startTime: null,\r\n        gradedStudents: [],\r\n        totalStudents: 0,\r\n        currentStudent: null,\r\n        currentStudentIndex: 0\r\n    });\r\n\r\n    // ENHANCED: Form data states with late policy support\r\n    const [gradingFormData, setGradingFormData] = useState({\r\n        student: { name: '', id: '', email: '' },\r\n        course: { code: '', name: '', instructor: '', term: '', section: '' },\r\n        assignment: { title: '', dueDate: '', totalPoints: 0 },\r\n        criteriaScores: {},\r\n        overallFeedback: '',\r\n        strengths: [],\r\n        improvements: [],\r\n        totalScore: 0,\r\n        percentage: 0,\r\n        letterGrade: '',\r\n        attachments: [],\r\n        videoLinks: [],\r\n        // NEW: Late policy data\r\n        latePolicy: {\r\n            level: 'none',\r\n            penaltyApplied: false,\r\n            policyId: null,\r\n            originalScore: null,\r\n            adjustedScore: null,\r\n            multiplier: 1.0\r\n        }\r\n    });\r\n\r\n    // Load data from localStorage on initialization\r\n    useEffect(() => {\r\n        // Load drafts\r\n        const savedDrafts = localStorage.getItem('gradingDrafts');\r\n        if (savedDrafts) {\r\n            try {\r\n                setDrafts(JSON.parse(savedDrafts));\r\n            } catch (error) {\r\n                console.error('Error loading drafts:', error);\r\n            }\r\n        }\r\n\r\n        // Load final grades\r\n        const savedFinalGrades = localStorage.getItem('finalGrades');\r\n        if (savedFinalGrades) {\r\n            try {\r\n                setFinalGrades(JSON.parse(savedFinalGrades));\r\n            } catch (error) {\r\n                console.error('Error loading final grades:', error);\r\n            }\r\n        }\r\n\r\n        // Load custom late policies\r\n        const savedPolicies = localStorage.getItem('customLatePolicies');\r\n        if (savedPolicies) {\r\n            try {\r\n                setCustomLatePolicies(JSON.parse(savedPolicies));\r\n            } catch (error) {\r\n                console.error('Error loading custom policies:', error);\r\n            }\r\n        }\r\n\r\n        // Load current late policy\r\n        const savedCurrentPolicy = localStorage.getItem('currentLatePolicy');\r\n        if (savedCurrentPolicy) {\r\n            try {\r\n                setCurrentLatePolicy(JSON.parse(savedCurrentPolicy));\r\n            } catch (error) {\r\n                console.error('Error loading current policy:', error);\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    // ORIGINAL: Update functions for form data\r\n    const updateStudentInfo = useCallback((field, value) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            student: { ...prev.student, [field]: value }\r\n        }));\r\n    }, []);\r\n\r\n    const updateCourseInfo = useCallback((field, value) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            course: { ...prev.course, [field]: value }\r\n        }));\r\n    }, []);\r\n\r\n    const updateAssignmentInfo = useCallback((field, value) => {\r\n        setGradingFormData(prev => ({\r\n            ...prev,\r\n            assignment: { ...prev.assignment, [field]: value }\r\n        }));\r\n    }, []);\r\n\r\n    // ORIGINAL: Initialize form data functions for different generators\r\n    const initializeAssignmentPromptFormData = useCallback((data) => {\r\n        setAssignmentPromptFormData(data);\r\n        console.log('📝 Assignment prompt form data initialized:', data);\r\n    }, []);\r\n\r\n    const initializeAIPromptFormData = useCallback((data) => {\r\n        setAIPromptFormData(data);\r\n        console.log('🤖 AI prompt form data initialized:', data);\r\n    }, []);\r\n\r\n    // ORIGINAL: Reset/clear functions for generators\r\n    const clearAssignmentPromptFormData = useCallback(() => {\r\n        setAssignmentPromptFormData(null);\r\n        console.log('🗑️ Assignment prompt form data cleared');\r\n    }, []);\r\n\r\n    const clearAIPromptFormData = useCallback(() => {\r\n        setAIPromptFormData(null);\r\n        console.log('🗑️ AI prompt form data cleared');\r\n    }, []);\r\n\r\n    // ORIGINAL: Additional utility functions that components may expect\r\n    const updateSharedRubric = useCallback((rubric) => {\r\n        setSharedRubric(rubric);\r\n        console.log('📋 Shared rubric updated:', rubric?.assignmentInfo?.title);\r\n    }, []);\r\n\r\n    const clearSharedRubric = useCallback(() => {\r\n        setSharedRubric(null);\r\n        console.log('🗑️ Shared rubric cleared');\r\n    }, []);\r\n\r\n    const updateSharedCourseDetails = useCallback((details) => {\r\n        setSharedCourseDetails(details);\r\n        console.log('🏫 Shared course details updated:', details);\r\n    }, []);\r\n\r\n    const clearSharedCourseDetails = useCallback(() => {\r\n        setSharedCourseDetails(null);\r\n        console.log('🗑️ Shared course details cleared');\r\n    }, []);\r\n\r\n    // ORIGINAL: Clear form data\r\n    const clearGradingFormData = useCallback(() => {\r\n        setGradingFormData({\r\n            student: { name: '', id: '', email: '' },\r\n            course: { code: '', name: '', instructor: '', term: '', section: '' },\r\n            assignment: { title: '', dueDate: '', totalPoints: 0 },\r\n            criteriaScores: {},\r\n            overallFeedback: '',\r\n            strengths: [],\r\n            improvements: [],\r\n            totalScore: 0,\r\n            percentage: 0,\r\n            letterGrade: '',\r\n            attachments: [],\r\n            videoLinks: [],\r\n            latePolicy: {\r\n                level: 'none',\r\n                penaltyApplied: false,\r\n                policyId: null,\r\n                originalScore: null,\r\n                adjustedScore: null,\r\n                multiplier: 1.0\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    // NEW: Late Policy Management Functions\r\n    const saveCustomLatePolicy = useCallback((policy) => {\r\n        const newPolicy = {\r\n            ...policy,\r\n            id: policy.id === 'new' ? `custom_${Date.now()}` : policy.id,\r\n            isCustom: true,\r\n            createdAt: policy.createdAt || new Date().toISOString(),\r\n            updatedAt: new Date().toISOString()\r\n        };\r\n\r\n        setCustomLatePolicies(prev => {\r\n            const filtered = prev.filter(p => p.id !== newPolicy.id);\r\n            const updated = [...filtered, newPolicy];\r\n            localStorage.setItem('customLatePolicies', JSON.stringify(updated));\r\n            return updated;\r\n        });\r\n\r\n        return newPolicy;\r\n    }, []);\r\n\r\n    const updateCustomLatePolicy = useCallback((policyId, updates) => {\r\n        setCustomLatePolicies(prev => {\r\n            const updated = prev.map(policy =>\r\n                policy.id === policyId\r\n                    ? { ...policy, ...updates, updatedAt: new Date().toISOString() }\r\n                    : policy\r\n            );\r\n            localStorage.setItem('customLatePolicies', JSON.stringify(updated));\r\n            return updated;\r\n        });\r\n    }, []);\r\n\r\n    const deleteCustomLatePolicy = useCallback((policyId) => {\r\n        setCustomLatePolicies(prev => {\r\n            const filtered = prev.filter(policy => policy.id !== policyId);\r\n            localStorage.setItem('customLatePolicies', JSON.stringify(filtered));\r\n            return filtered;\r\n        });\r\n\r\n        // Reset current policy if it was deleted\r\n        if (currentLatePolicy?.id === policyId) {\r\n            setCurrentLatePolicy(null);\r\n            localStorage.removeItem('currentLatePolicy');\r\n        }\r\n    }, [currentLatePolicy]);\r\n\r\n    // NEW: Late Policy Application Functions\r\n    const applyLatePolicy = useCallback((originalScore, level, policyId = null) => {\r\n        const policy = policyId\r\n            ? [...Object.values(DEFAULT_LATE_POLICIES), ...customLatePolicies].find(p => p.id === policyId)\r\n            : currentLatePolicy || DEFAULT_LATE_POLICIES.institutional;\r\n\r\n        if (!policy || !policy.levels[level]) {\r\n            return { adjustedScore: originalScore, multiplier: 1.0, penaltyApplied: false };\r\n        }\r\n\r\n        const multiplier = policy.levels[level].multiplier;\r\n        const adjustedScore = Math.round(originalScore * multiplier * 100) / 100;\r\n\r\n        return {\r\n            adjustedScore,\r\n            multiplier,\r\n            penaltyApplied: level !== 'none',\r\n            policyName: policy.name,\r\n            levelName: policy.levels[level].name\r\n        };\r\n    }, [currentLatePolicy, customLatePolicies]);\r\n\r\n    const calculateScoreWithLatePolicy = useCallback((originalScore, lateLevel = 'none') => {\r\n        return applyLatePolicy(originalScore, lateLevel);\r\n    }, [applyLatePolicy]);\r\n\r\n    // ORIGINAL: Draft and final grade management with late policy enhancement\r\n    const saveDraft = useCallback((studentId, gradeData = null) => {\r\n        const dataToSave = gradeData || gradingFormData;\r\n\r\n        const draftData = {\r\n            ...dataToSave,\r\n            studentId,\r\n            type: 'draft',\r\n            savedAt: new Date().toISOString(),\r\n            // Include late policy data\r\n            latePolicy: dataToSave.latePolicy || {\r\n                level: 'none',\r\n                penaltyApplied: false,\r\n                policyId: currentLatePolicy?.id || null,\r\n                originalScore: dataToSave.totalScore,\r\n                adjustedScore: dataToSave.totalScore,\r\n                multiplier: 1.0\r\n            }\r\n        };\r\n\r\n        setDrafts(prev => {\r\n            const updated = { ...prev, [studentId]: draftData };\r\n            localStorage.setItem('gradingDrafts', JSON.stringify(updated));\r\n            return updated;\r\n        });\r\n\r\n        return draftData;\r\n    }, [gradingFormData, currentLatePolicy]);\r\n\r\n    const loadDraft = useCallback((studentId) => {\r\n        const draft = drafts[studentId];\r\n        if (draft) {\r\n            setGradingFormData(draft);\r\n            return draft;\r\n        }\r\n        return null;\r\n    }, [drafts]);\r\n\r\n    const saveFinalGrade = useCallback((studentId, gradeData = null) => {\r\n        const dataToSave = gradeData || gradingFormData;\r\n\r\n        const finalData = {\r\n            ...dataToSave,\r\n            studentId,\r\n            type: 'final',\r\n            finalizedAt: new Date().toISOString(),\r\n            // Include late policy data in final grade\r\n            latePolicy: dataToSave.latePolicy || {\r\n                level: 'none',\r\n                penaltyApplied: false,\r\n                policyId: currentLatePolicy?.id || null,\r\n                originalScore: dataToSave.totalScore,\r\n                adjustedScore: dataToSave.totalScore,\r\n                multiplier: 1.0\r\n            }\r\n        };\r\n\r\n        setFinalGrades(prev => {\r\n            const updated = { ...prev, [studentId]: finalData };\r\n            localStorage.setItem('finalGrades', JSON.stringify(updated));\r\n            return updated;\r\n        });\r\n\r\n        // Remove from drafts when finalized\r\n        setDrafts(prev => {\r\n            const remainingDrafts = { ...prev };\r\n            delete remainingDrafts[studentId];\r\n            localStorage.setItem('gradingDrafts', JSON.stringify(remainingDrafts));\r\n            return remainingDrafts;\r\n        });\r\n\r\n        return finalData;\r\n    }, [gradingFormData, currentLatePolicy]);\r\n\r\n    const loadFinalGrade = useCallback((studentId) => {\r\n        return finalGrades[studentId] || null;\r\n    }, [finalGrades]);\r\n\r\n    const hasDraft = useCallback((studentId) => {\r\n        return drafts[studentId] || null;\r\n    }, [drafts]);\r\n\r\n    const getGradeStatus = useCallback((studentId) => {\r\n        if (finalGrades[studentId]) return 'final';\r\n        if (drafts[studentId]) return 'draft';\r\n        return 'not_started';\r\n    }, [finalGrades, drafts]);\r\n\r\n    const finalizeGrade = useCallback((studentId) => {\r\n        const draft = drafts[studentId];\r\n        if (draft) {\r\n            return saveFinalGrade(studentId, draft);\r\n        }\r\n        return null;\r\n    }, [drafts, saveFinalGrade]);\r\n\r\n    const unlockGrade = useCallback((studentId) => {\r\n        const finalGrade = finalGrades[studentId];\r\n        if (finalGrade) {\r\n            // Convert final grade back to draft\r\n            setDrafts(prev => ({\r\n                ...prev,\r\n                [studentId]: {\r\n                    ...finalGrade,\r\n                    type: 'draft',\r\n                    unlockedAt: new Date().toISOString()\r\n                }\r\n            }));\r\n\r\n            // Remove from final grades\r\n            setFinalGrades(prev => {\r\n                const newFinalGrades = { ...prev };\r\n                delete newFinalGrades[studentId];\r\n                return newFinalGrades;\r\n            });\r\n\r\n            // Update localStorage\r\n            const allDrafts = { ...drafts, [studentId]: { ...finalGrade, type: 'draft' } };\r\n            localStorage.setItem('gradingDrafts', JSON.stringify(allDrafts));\r\n\r\n            const remainingFinalGrades = { ...finalGrades };\r\n            delete remainingFinalGrades[studentId];\r\n            localStorage.setItem('finalGrades', JSON.stringify(remainingFinalGrades));\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }, [finalGrades, drafts]);\r\n\r\n    // ORIGINAL: Navigation helpers for grading sessions\r\n    const nextStudentInSession = useCallback((saveType = 'draft') => {\r\n        if (!gradingSession?.active || !classList) return false;\r\n\r\n        const currentIndex = gradingSession.currentStudentIndex;\r\n        const nextIndex = currentIndex + 1;\r\n\r\n        if (nextIndex < classList.students.length) {\r\n            const currentStudentId = classList.students[currentIndex]?.id;\r\n            const nextStudent = classList.students[nextIndex];\r\n\r\n            // Save current work\r\n            if (currentStudentId) {\r\n                if (saveType === 'final') {\r\n                    saveFinalGrade(currentStudentId);\r\n                } else {\r\n                    saveDraft(currentStudentId);\r\n                }\r\n            }\r\n\r\n            // Update session state\r\n            setGradingSession(prev => ({\r\n                ...prev,\r\n                currentStudentIndex: nextIndex,\r\n                currentStudent: nextStudent\r\n            }));\r\n\r\n            setCurrentStudent(nextStudent);\r\n\r\n            // Load next student's data\r\n            const existingData = hasDraft(nextStudent.id) || loadFinalGrade(nextStudent.id);\r\n            if (existingData) {\r\n                setGradingFormData(existingData);\r\n            } else {\r\n                clearGradingFormData();\r\n                updateStudentInfo('name', nextStudent.name || '');\r\n                updateStudentInfo('id', nextStudent.id || '');\r\n                updateStudentInfo('email', nextStudent.email || '');\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }, [gradingSession, classList, saveFinalGrade, saveDraft, hasDraft, loadFinalGrade, clearGradingFormData, updateStudentInfo]);\r\n\r\n    const previousStudentInSession = useCallback((saveType = 'draft') => {\r\n        if (!gradingSession?.active || !classList) return false;\r\n\r\n        const currentIndex = gradingSession.currentStudentIndex;\r\n        const previousIndex = currentIndex - 1;\r\n\r\n        if (previousIndex >= 0) {\r\n            const currentStudentId = classList.students[currentIndex]?.id;\r\n            const previousStudent = classList.students[previousIndex];\r\n\r\n            // Save current work\r\n            if (currentStudentId) {\r\n                if (saveType === 'final') {\r\n                    saveFinalGrade(currentStudentId);\r\n                } else {\r\n                    saveDraft(currentStudentId);\r\n                }\r\n            }\r\n\r\n            // Update session state\r\n            setGradingSession(prev => ({\r\n                ...prev,\r\n                currentStudentIndex: previousIndex,\r\n                currentStudent: previousStudent\r\n            }));\r\n\r\n            setCurrentStudent(previousStudent);\r\n\r\n            // Load previous student's data\r\n            const existingData = hasDraft(previousStudent.id) || loadFinalGrade(previousStudent.id);\r\n            if (existingData) {\r\n                setGradingFormData(existingData);\r\n            } else {\r\n                clearGradingFormData();\r\n                updateStudentInfo('name', previousStudent.name || '');\r\n                updateStudentInfo('id', previousStudent.id || '');\r\n                updateStudentInfo('email', previousStudent.email || '');\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }, [gradingSession, classList, saveFinalGrade, saveDraft, hasDraft, loadFinalGrade, clearGradingFormData, updateStudentInfo]);\r\n\r\n    // ORIGINAL: Grading session management\r\n    const initializeGradingSession = useCallback((classData) => {\r\n        if (!classData || !classData.students || classData.students.length === 0) {\r\n            console.error('Cannot initialize grading session: No valid class data');\r\n            return false;\r\n        }\r\n\r\n        const firstStudent = classData.students[0];\r\n\r\n        setGradingSession({\r\n            active: true,\r\n            startTime: new Date().toISOString(),\r\n            gradedStudents: [],\r\n            totalStudents: classData.students.length,\r\n            currentStudent: firstStudent,\r\n            currentStudentIndex: 0\r\n        });\r\n\r\n        setCurrentStudent(firstStudent);\r\n\r\n        // Load existing data or initialize new form\r\n        const existingData = hasDraft(firstStudent.id) || loadFinalGrade(firstStudent.id);\r\n        if (existingData) {\r\n            setGradingFormData(existingData);\r\n        } else {\r\n            clearGradingFormData();\r\n            updateStudentInfo('name', firstStudent.name || '');\r\n            updateStudentInfo('id', firstStudent.id || '');\r\n            updateStudentInfo('email', firstStudent.email || '');\r\n        }\r\n\r\n        return true;\r\n    }, [hasDraft, loadFinalGrade, clearGradingFormData, updateStudentInfo]);\r\n\r\n    const updateGradingSession = useCallback((updates) => {\r\n        setGradingSession(prev => ({ ...prev, ...updates }));\r\n    }, []);\r\n\r\n    // ORIGINAL: Setters for form data updates\r\n    const setGradingData = useCallback((data) => {\r\n        if (typeof data === 'function') {\r\n            setGradingFormData(prev => data(prev));\r\n        } else {\r\n            setGradingFormData(data);\r\n        }\r\n    }, []);\r\n\r\n    // Context value with all functions and state\r\n    const contextValue = {\r\n        // ORIGINAL: Core states\r\n        sharedRubric,\r\n        setSharedRubric,\r\n        sharedCourseDetails,\r\n        setSharedCourseDetails,\r\n        activeTab,\r\n        setActiveTab,\r\n        aiPromptFormData,\r\n        setAIPromptFormData,\r\n        assignmentPromptFormData,\r\n        setAssignmentPromptFormData,\r\n        classList,\r\n        setClassList,\r\n        currentStudent,\r\n        setCurrentStudent,\r\n\r\n        // ORIGINAL: Form data and management\r\n        gradingData: gradingFormData,\r\n        setGradingData,\r\n        updateStudentInfo,\r\n        updateCourseInfo,\r\n        updateAssignmentInfo,\r\n        clearGradingFormData,\r\n\r\n        // ORIGINAL: Generator initialization and management functions\r\n        initializeAssignmentPromptFormData,\r\n        initializeAIPromptFormData,\r\n        clearAssignmentPromptFormData,\r\n        clearAIPromptFormData,\r\n\r\n        // ORIGINAL: Additional utility functions\r\n        updateSharedRubric,\r\n        clearSharedRubric,\r\n        updateSharedCourseDetails,\r\n        clearSharedCourseDetails,\r\n\r\n        // ORIGINAL: Draft and final grade management\r\n        drafts,\r\n        finalGrades,\r\n        saveDraft,\r\n        loadDraft,\r\n        saveFinalGrade,\r\n        loadFinalGrade,\r\n        hasDraft,\r\n        getGradeStatus,\r\n        finalizeGrade,\r\n        unlockGrade,\r\n\r\n        // ORIGINAL: Grading session management\r\n        gradingSession,\r\n        setGradingSession,\r\n        nextStudentInSession,\r\n        previousStudentInSession,\r\n        updateGradingSession,\r\n        initializeGradingSession,\r\n\r\n        // NEW: Late Policy Management\r\n        currentLatePolicy,\r\n        setCurrentLatePolicy,\r\n        customLatePolicies,\r\n        setCustomLatePolicies,\r\n        saveCustomLatePolicy,\r\n        updateCustomLatePolicy,\r\n        deleteCustomLatePolicy,\r\n        applyLatePolicy,\r\n        calculateScoreWithLatePolicy,\r\n        DEFAULT_LATE_POLICIES\r\n    };\r\n\r\n    return (\r\n        <AssessmentContext.Provider value={contextValue}>\r\n            {children}\r\n        </AssessmentContext.Provider>\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}