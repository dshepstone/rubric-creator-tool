// Enhanced TabNavigation.js with Late Policy Support
// Maintains all existing functionality while adding late policy indicators

import React from 'react';
import { useAssessment } from './SharedContext';
import {
    FileText, Users, GraduationCap, HelpCircle, Settings, Database,
    Clock, CheckCircle, AlertTriangle, Sparkles, Edit3, PlayCircle,
    BarChart3, BookOpen, Calculator, Target
} from 'lucide-react';

const TabNavigation = () => {
    const {
        activeTab,
        setActiveTab,
        sharedRubric,
        classList,
        gradingSession,
        currentStudent,
        hasDraft,
        // NEW: Late policy context
        currentLatePolicy,
        customLatePolicies
    } = useAssessment();

    // Enhanced tab configuration with late policy awareness
    const tabs = [
        {
            id: 'assignment-prompt-generator',
            name: 'Assignment Generator',
            icon: FileText,
            color: 'blue',
            description: 'Create assignment prompts'
        },
        {
            id: 'ai-rubric-generator',
            name: 'AI Rubric Generator', 
            icon: Sparkles,
            color: 'purple',
            description: 'AI-powered rubric creation'
        },
        {
            id: 'rubric-creator',
            name: 'Rubric Creator',
            icon: Edit3,
            color: 'indigo',
            description: 'Build custom rubrics'
        },
        {
            id: 'class-list-manager',
            name: 'Class Manager',
            icon: Users,
            color: 'green',
            description: 'Manage student lists'
        },
        {
            id: 'grading-template',
            name: 'Grading Tool',
            icon: GraduationCap,
            color: 'orange',
            description: 'Grade with late policies'
        },
        {
            id: 'policy-manager',
            name: 'Policy Manager',
            icon: Settings,
            color: 'teal',
            description: 'Configure late policies'
        },
        {
            id: 'help',
            name: 'Help',
            icon: HelpCircle,
            color: 'gray',
            description: 'User guide'
        }
    ];

    // Helper functions for status indicators
    const hasRubricData = Boolean(sharedRubric);
    const hasClassListData = Boolean(classList && classList.students?.length > 0);
    const hasActiveSession = Boolean(gradingSession?.active);
    const hasFormData = Boolean(currentStudent);
    const availablePolicies = [...(customLatePolicies || [])];
    const currentProgramType = classList?.courseMetadata?.programType;

    // Calculate grading progress
    const gradingProgress = hasClassListData 
        ? Math.round((classList.students.filter(s => hasDraft && hasDraft(s.id)).length / classList.students.length) * 100)
        : 0;

    // Late policy status
    const latePolicyStatus = {
        hasCustomPolicies: customLatePolicies?.length > 0,
        currentPolicyName: currentLatePolicy?.name || 'Standard Policy',
        policiesCount: (customLatePolicies?.length || 0)
    };

    const getTabColorClass = (color, isActive) => {
        const colorMap = {
            blue: isActive ? 'bg-blue-50 border-blue-200 text-blue-700' : 'border-gray-200 text-gray-600 hover:text-blue-600 hover:border-blue-200',
            purple: isActive ? 'bg-purple-50 border-purple-200 text-purple-700' : 'border-gray-200 text-gray-600 hover:text-purple-600 hover:border-purple-200',
            indigo: isActive ? 'bg-indigo-50 border-indigo-200 text-indigo-700' : 'border-gray-200 text-gray-600 hover:text-indigo-600 hover:border-indigo-200',
            green: isActive ? 'bg-green-50 border-green-200 text-green-700' : 'border-gray-200 text-gray-600 hover:text-green-600 hover:border-green-200',
            orange: isActive ? 'bg-orange-50 border-orange-200 text-orange-700' : 'border-gray-200 text-gray-600 hover:text-orange-600 hover:border-orange-200',
            teal: isActive ? 'bg-teal-50 border-teal-200 text-teal-700' : 'border-gray-200 text-gray-600 hover:text-teal-600 hover:border-teal-200',
            gray: isActive ? 'bg-gray-50 border-gray-200 text-gray-700' : 'border-gray-200 text-gray-600 hover:text-gray-700 hover:border-gray-300'
        };
        return colorMap[color] || colorMap.gray;
    };

    return (
        <div style={{
            backgroundColor: 'white',
            borderBottom: '1px solid #e5e7eb',
            position: 'sticky',
            top: '73px', // Adjusted for header height
            zIndex: 30
        }}>
            <div style={{
                maxWidth: '1200px',
                margin: '0 auto',
                padding: '0 1rem'
            }}>
                {/* Primary Navigation */}
                <nav style={{
                    display: 'flex',
                    gap: '0.5rem',
                    padding: '1rem 0',
                    overflowX: 'auto',
                    scrollBehavior: 'smooth'
                }}>
                    {tabs.map((tab) => {
                        const Icon = tab.icon;
                        const isActive = activeTab === tab.id;
                        
                        return (
                            <button
                                key={tab.id}
                                onClick={() => setActiveTab(tab.id)}
                                style={{
                                    display: 'flex',
                                    flexDirection: 'column',
                                    alignItems: 'center',
                                    gap: '0.5rem',
                                    padding: '0.75rem 1rem',
                                    border: '1px solid',
                                    borderRadius: '0.5rem',
                                    fontSize: '0.875rem',
                                    fontWeight: '500',
                                    cursor: 'pointer',
                                    transition: 'all 0.2s',
                                    minWidth: '120px',
                                    textAlign: 'center',
                                    backgroundColor: isActive ? '#f8fafc' : 'white',
                                    transform: isActive ? 'translateY(-1px)' : 'none',
                                    boxShadow: isActive ? '0 4px 6px -1px rgba(0, 0, 0, 0.1)' : 'none'
                                }}
                                className={getTabColorClass(tab.color, isActive)}
                            >
                                <div style={{
                                    display: 'flex',
                                    alignItems: 'center',
                                    gap: '0.5rem'
                                }}>
                                    <Icon size={16} />
                                    <span style={{ whiteSpace: 'nowrap' }}>
                                        {tab.name}
                                    </span>
                                </div>

                                {/* Status Indicators */}
                                <div style={{
                                    display: 'flex',
                                    flexWrap: 'wrap',
                                    gap: '0.25rem',
                                    justifyContent: 'center',
                                    alignItems: 'center',
                                    minHeight: '20px'
                                }}>
                                    {/* Policy Manager Indicators */}
                                    {tab.id === 'policy-manager' && (
                                        <div style={{ display: 'flex', flexDirection: 'column', gap: '0.25rem' }}>
                                            {latePolicyStatus.hasCustomPolicies && (
                                                <span style={{
                                                    display: 'inline-flex',
                                                    alignItems: 'center',
                                                    padding: '0.125rem 0.375rem',
                                                    borderRadius: '9999px',
                                                    fontSize: '0.625rem',
                                                    fontWeight: '500',
                                                    backgroundColor: '#ecfdf5',
                                                    color: '#065f46',
                                                    whiteSpace: 'nowrap',
                                                    gap: '0.125rem'
                                                }}>
                                                    <Settings size={8} />
                                                    {latePolicyStatus.policiesCount} Policies
                                                </span>
                                            )}
                                            {currentProgramType && (
                                                <span style={{
                                                    display: 'inline-flex',
                                                    alignItems: 'center',
                                                    padding: '0.125rem 0.375rem',
                                                    borderRadius: '9999px',
                                                    fontSize: '0.625rem',
                                                    fontWeight: '500',
                                                    backgroundColor: '#dbeafe',
                                                    color: '#1e40af',
                                                    whiteSpace: 'nowrap',
                                                    gap: '0.125rem'
                                                }}>
                                                    <Database size={8} />
                                                    {currentProgramType.charAt(0).toUpperCase() + currentProgramType.slice(1)}
                                                </span>
                                            )}
                                        </div>
                                    )}

                                    {/* Grading Tool Indicators */}
                                    {tab.id === 'grading-template' && (
                                        <div style={{ display: 'flex', flexDirection: 'column', gap: '0.25rem' }}>
                                            {hasRubricData && (
                                                <span style={{
                                                    display: 'inline-flex',
                                                    alignItems: 'center',
                                                    padding: '0.125rem 0.375rem',
                                                    borderRadius: '9999px',
                                                    fontSize: '0.625rem',
                                                    fontWeight: '500',
                                                    backgroundColor: '#ecfdf5',
                                                    color: '#065f46',
                                                    whiteSpace: 'nowrap',
                                                    gap: '0.125rem'
                                                }}>
                                                    <Database size={8} />
                                                    Rubric Ready
                                                </span>
                                            )}
                                            {hasFormData && (
                                                <span style={{
                                                    display: 'inline-flex',
                                                    alignItems: 'center',
                                                    padding: '0.125rem 0.375rem',
                                                    borderRadius: '9999px',
                                                    fontSize: '0.625rem',
                                                    fontWeight: '500',
                                                    backgroundColor: '#dbeafe',
                                                    color: '#1e40af',
                                                    whiteSpace: 'nowrap',
                                                    gap: '0.125rem'
                                                }}>
                                                    <FileText size={8} />
                                                    Form Data
                                                </span>
                                            )}
                                            {hasActiveSession && (
                                                <span style={{
                                                    display: 'inline-flex',
                                                    alignItems: 'center',
                                                    padding: '0.125rem 0.375rem',
                                                    borderRadius: '9999px',
                                                    fontSize: '0.625rem',
                                                    fontWeight: '500',
                                                    backgroundColor: '#fef3c7',
                                                    color: '#92400e',
                                                    whiteSpace: 'nowrap',
                                                    gap: '0.125rem'
                                                }}>
                                                    <Clock size={8} />
                                                    In Progress
                                                </span>
                                            )}
                                            {currentLatePolicy && (
                                                <span style={{
                                                    display: 'inline-flex',
                                                    alignItems: 'center',
                                                    padding: '0.125rem 0.375rem',
                                                    borderRadius: '9999px',
                                                    fontSize: '0.625rem',
                                                    fontWeight: '500',
                                                    backgroundColor: '#f0fdf4',
                                                    color: '#166534',
                                                    whiteSpace: 'nowrap',
                                                    gap: '0.125rem'
                                                }}>
                                                    <CheckCircle size={8} />
                                                    {latePolicyStatus.currentPolicyName}
                                                </span>
                                            )}
                                        </div>
                                    )}

                                    {/* Class Manager Indicators */}
                                    {tab.id === 'class-list-manager' && (
                                        <div style={{ display: 'flex', flexDirection: 'column', gap: '0.25rem' }}>
                                            {hasClassListData && (
                                                <span style={{
                                                    display: 'inline-flex',
                                                    alignItems: 'center',
                                                    padding: '0.125rem 0.375rem',
                                                    borderRadius: '9999px',
                                                    fontSize: '0.625rem',
                                                    fontWeight: '500',
                                                    backgroundColor: '#ecfdf5',
                                                    color: '#065f46',
                                                    whiteSpace: 'nowrap',
                                                    gap: '0.125rem'
                                                }}>
                                                    <Users size={8} />
                                                    {classList.students.length} Students
                                                </span>
                                            )}
                                            {gradingProgress > 0 && (
                                                <span style={{
                                                    display: 'inline-flex',
                                                    alignItems: 'center',
                                                    padding: '0.125rem 0.375rem',
                                                    borderRadius: '9999px',
                                                    fontSize: '0.625rem',
                                                    fontWeight: '500',
                                                    backgroundColor: '#dbeafe',
                                                    color: '#1e40af',
                                                    whiteSpace: 'nowrap',
                                                    gap: '0.125rem'
                                                }}>
                                                    <BarChart3 size={8} />
                                                    {gradingProgress}% Complete
                                                </span>
                                            )}
                                        </div>
                                    )}

                                    {/* Rubric Creator Indicators */}
                                    {tab.id === 'rubric-creator' && hasRubricData && (
                                        <span style={{
                                            display: 'inline-flex',
                                            alignItems: 'center',
                                            padding: '0.125rem 0.375rem',
                                            borderRadius: '9999px',
                                            fontSize: '0.625rem',
                                            fontWeight: '500',
                                            backgroundColor: '#ecfdf5',
                                            color: '#065f46',
                                            whiteSpace: 'nowrap',
                                            gap: '0.125rem'
                                        }}>
                                            <CheckCircle size={8} />
                                            Created
                                        </span>
                                    )}

                                    {/* Help tab indicator */}
                                    {tab.id === 'help' && (
                                        <span style={{
                                            display: 'inline-flex',
                                            alignItems: 'center',
                                            padding: '0.125rem 0.375rem',
                                            borderRadius: '9999px',
                                            fontSize: '0.625rem',
                                            fontWeight: '500',
                                            backgroundColor: '#f3f4f6',
                                            color: '#374151',
                                            whiteSpace: 'nowrap',
                                            gap: '0.125rem'
                                        }}>
                                            <HelpCircle size={8} />
                                            User Guide
                                        </span>
                                    )}
                                </div>
                            </button>
                        );
                    })}
                </nav>

                {/* Enhanced Quick Actions Bar with Late Policy Context */}
                <div style={{
                    display: 'flex',
                    justifyContent: 'space-between',
                    alignItems: 'center',
                    padding: '0.75rem 0',
                    borderTop: '1px solid #f3f4f6'
                }}>
                    <div style={{
                        display: 'flex',
                        alignItems: 'center',
                        gap: '1rem',
                        fontSize: '0.875rem',
                        color: '#6b7280'
                    }}>
                        {/* Current Status */}
                        <div style={{ display: 'flex', alignItems: 'center', gap: '0.5rem' }}>
                            <span>Status:</span>
                            {hasActiveSession ? (
                                <span style={{
                                    display: 'flex',
                                    alignItems: 'center',
                                    gap: '0.25rem',
                                    color: '#059669',
                                    fontWeight: '500'
                                }}>
                                    <PlayCircle size={14} />
                                    Grading Session Active
                                </span>
                            ) : hasClassListData ? (
                                <span style={{
                                    display: 'flex',
                                    alignItems: 'center',
                                    gap: '0.25rem',
                                    color: '#3b82f6',
                                    fontWeight: '500'
                                }}>
                                    <Users size={14} />
                                    {classList.students.length} Students Loaded
                                </span>
                            ) : (
                                <span style={{ color: '#9ca3af' }}>Ready to Import</span>
                            )}
                        </div>

                        {/* Late Policy Status */}
                        {currentLatePolicy && (
                            <div style={{
                                display: 'flex',
                                alignItems: 'center',
                                gap: '0.5rem',
                                padding: '0.25rem 0.5rem',
                                backgroundColor: '#f0fdf4',
                                borderRadius: '0.375rem',
                                border: '1px solid #bbf7d0'
                            }}>
                                <Settings size={12} style={{ color: '#059669' }} />
                                <span style={{ color: '#065f46', fontSize: '0.75rem', fontWeight: '500' }}>
                                    {currentLatePolicy.name}
                                </span>
                            </div>
                        )}
                    </div>

                    {/* Context-Aware Quick Actions */}
                    <div style={{ display: 'flex', gap: '0.5rem' }}>
                        {/* Workflow Suggestions */}
                        {activeTab === 'class-list-manager' && hasRubricData && (
                            <button
                                onClick={() => setActiveTab('grading-template')}
                                style={{
                                    display: 'flex',
                                    alignItems: 'center',
                                    gap: '0.25rem',
                                    padding: '0.375rem 0.75rem',
                                    fontSize: '0.75rem',
                                    fontWeight: '500',
                                    color: '#059669',
                                    backgroundColor: 'white',
                                    border: '1px solid #10b981',
                                    borderRadius: '0.375rem',
                                    cursor: 'pointer',
                                    transition: 'all 0.2s',
                                    boxShadow: '0 1px 2px 0 rgba(0, 0, 0, 0.05)'
                                }}
                                onMouseEnter={(e) => {
                                    e.target.style.backgroundColor = '#f0fdf4';
                                    e.target.style.borderColor = '#059669';
                                }}
                                onMouseLeave={(e) => {
                                    e.target.style.backgroundColor = 'white';
                                    e.target.style.borderColor = '#10b981';
                                }}
                            >
                                <GraduationCap size={12} />
                                Start Grading
                            </button>
                        )}

                        {activeTab === 'policy-manager' && hasClassListData && (
                            <div style={{ display: 'flex', gap: '0.5rem' }}>
                                <button
                                    onClick={() => setActiveTab('class-list-manager')}
                                    style={{
                                        display: 'flex',
                                        alignItems: 'center',
                                        gap: '0.25rem',
                                        padding: '0.375rem 0.75rem',
                                        fontSize: '0.75rem',
                                        fontWeight: '500',
                                        color: '#3b82f6',
                                        backgroundColor: 'white',
                                        border: '1px solid #3b82f6',
                                        borderRadius: '0.375rem',
                                        cursor: 'pointer'
                                    }}
                                >
                                    <Users size={12} />
                                    Back to Class
                                </button>
                                {hasRubricData && (
                                    <button
                                        onClick={() => setActiveTab('grading-template')}
                                        style={{
                                            display: 'flex',
                                            alignItems: 'center',
                                            gap: '0.25rem',
                                            padding: '0.375rem 0.75rem',
                                            fontSize: '0.75rem',
                                            fontWeight: '500',
                                            color: '#059669',
                                            backgroundColor: 'white',
                                            border: '1px solid #10b981',
                                            borderRadius: '0.375rem',
                                            cursor: 'pointer'
                                        }}
                                    >
                                        <GraduationCap size={12} />
                                        Start Grading
                                    </button>
                                )}
                            </div>
                        )}

                        {activeTab === 'grading-template' && hasRubricData && (
                            <div style={{ display: 'flex', gap: '0.5rem' }}>
                                <button
                                    onClick={() => setActiveTab('policy-manager')}
                                    style={{
                                        display: 'flex',
                                        alignItems: 'center',
                                        gap: '0.25rem',
                                        padding: '0.375rem 0.75rem',
                                        fontSize: '0.75rem',
                                        fontWeight: '500',
                                        color: '#0891b2',
                                        backgroundColor: 'white',
                                        border: '1px solid #06b6d4',
                                        borderRadius: '0.375rem',
                                        cursor: 'pointer'
                                    }}
                                >
                                    <Settings size={12} />
                                    Policies
                                </button>
                                <button
                                    onClick={() => setActiveTab('rubric-creator')}
                                    style={{
                                        display: 'flex',
                                        alignItems: 'center',
                                        gap: '0.25rem',
                                        padding: '0.375rem 0.75rem',
                                        fontSize: '0.75rem',
                                        fontWeight: '500',
                                        color: '#7c3aed',
                                        backgroundColor: 'white',
                                        border: '1px solid #8b5cf6',
                                        borderRadius: '0.375rem',
                                        cursor: 'pointer'
                                    }}
                                >
                                    <FileText size={12} />
                                    Edit Rubric
                                </button>
                            </div>
                        )}

                        {activeTab === 'grading-template' && hasClassListData && (
                            <button
                                onClick={() => setActiveTab('class-list-manager')}
                                style={{
                                    display: 'flex',
                                    alignItems: 'center',
                                    gap: '0.25rem',
                                    padding: '0.375rem 0.75rem',
                                    fontSize: '0.75rem',
                                    fontWeight: '500',
                                    color: '#4338ca',
                                    backgroundColor: 'white',
                                    border: '1px solid #6366f1',
                                    borderRadius: '0.375rem',
                                    cursor: 'pointer'
                                }}
                            >
                                <Users size={12} />
                                Manage Class
                            </button>
                        )}
                    </div>
                </div>
            </div>
        </div>
    );
};

export default TabNavigation;